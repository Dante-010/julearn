Search.setIndex({"docnames": ["api/base", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.RepeatedStratifiedGroupsKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.StratifiedGroupsKFold", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/transformers", "api/utils", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/run_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "contributing", "examples", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/HPT", "selected_deeper_topics/confound_removal", "selected_deeper_topics/index", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "filenames": ["api/base.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.RepeatedStratifiedGroupsKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.StratifiedGroupsKFold.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/transformers.rst", "api/utils.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/run_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "contributing.rst", "examples.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/HPT.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "titles": ["<span class=\"section-number\">6.4. </span>Base", "<span class=\"section-number\">6.2.1. </span>julearn.PipelineCreator", "<span class=\"section-number\">6.2.2. </span>julearn.TargetPipelineCreator", "<span class=\"section-number\">6.4.4. </span>julearn.base.ColumnTypes", "<span class=\"section-number\">6.4.5. </span>julearn.base.ColumnTypesLike", "<span class=\"section-number\">6.4.1. </span>julearn.base.JuBaseEstimator", "<span class=\"section-number\">6.4.2. </span>julearn.base.JuTransformer", "<span class=\"section-number\">6.4.3. </span>julearn.base.WrapModel", "<span class=\"section-number\">6.4.6. </span>julearn.base.change_column_type", "<span class=\"section-number\">6.4.9. </span>julearn.base.ensure_column_types", "<span class=\"section-number\">6.4.7. </span>julearn.base.get_column_type", "<span class=\"section-number\">6.4.8. </span>julearn.base.make_type_selector", "<span class=\"section-number\">6.5.1. </span>julearn.inspect.preprocess", "<span class=\"section-number\">6.3.2. </span>julearn.model_selection.RepeatedStratifiedGroupsKFold", "<span class=\"section-number\">6.3.3. </span>julearn.model_selection.StratifiedBootstrap", "<span class=\"section-number\">6.3.1. </span>julearn.model_selection.StratifiedGroupsKFold", "<span class=\"section-number\">6.3.4. </span>julearn.model_selection.get_searcher", "<span class=\"section-number\">6.3.5. </span>julearn.model_selection.list_searchers", "<span class=\"section-number\">6.3.6. </span>julearn.model_selection.register_searcher", "<span class=\"section-number\">6.3.7. </span>julearn.model_selection.reset_searcher_register", "<span class=\"section-number\">6.6.1. </span>julearn.models.dynamic.DynamicSelection", "<span class=\"section-number\">6.6.3. </span>julearn.models.get_model", "<span class=\"section-number\">6.6.2. </span>julearn.models.list_models", "<span class=\"section-number\">6.6.4. </span>julearn.models.register_model", "<span class=\"section-number\">6.6.5. </span>julearn.models.reset_model_register", "<span class=\"section-number\">6.2.3. </span>julearn.pipeline.JuTargetPipeline", "<span class=\"section-number\">6.2.4. </span>julearn.pipeline.pipeline_creator.Step", "<span class=\"section-number\">6.13.2. </span>julearn.prepare.check_consistency", "<span class=\"section-number\">6.13.1. </span>julearn.prepare.prepare_input_data", "<span class=\"section-number\">6.1.1. </span>julearn.run_cross_validation", "<span class=\"section-number\">6.7.5. </span>julearn.scoring.check_scoring", "<span class=\"section-number\">6.7.1. </span>julearn.scoring.get_scorer", "<span class=\"section-number\">6.7.2. </span>julearn.scoring.list_scorers", "<span class=\"section-number\">6.8.1. </span>julearn.scoring.metrics.r2_corr", "<span class=\"section-number\">6.7.3. </span>julearn.scoring.register_scorer", "<span class=\"section-number\">6.7.4. </span>julearn.scoring.reset_scorer_register", "<span class=\"section-number\">6.9.5. </span>julearn.transformers.CBPM", "<span class=\"section-number\">6.9.2. </span>julearn.transformers.ChangeColumnTypes", "<span class=\"section-number\">6.9.1. </span>julearn.transformers.DropColumns", "<span class=\"section-number\">6.9.4. </span>julearn.transformers.FilterColumns", "<span class=\"section-number\">6.9.6. </span>julearn.transformers.JuColumnTransformer", "<span class=\"section-number\">6.9.3. </span>julearn.transformers.SetColumnTypes", "<span class=\"section-number\">6.9.7. </span>julearn.transformers.confound_remover.ConfoundRemover", "<span class=\"section-number\">6.9.9. </span>julearn.transformers.get_transformer", "<span class=\"section-number\">6.9.8. </span>julearn.transformers.list_transformers", "<span class=\"section-number\">6.9.10. </span>julearn.transformers.register_transformer", "<span class=\"section-number\">6.9.11. </span>julearn.transformers.reset_transformer_register", "<span class=\"section-number\">6.10.2. </span>julearn.transformers.target.JuTargetTransformer", "<span class=\"section-number\">6.10.1. </span>julearn.transformers.target.JuTransformedTargetModel", "<span class=\"section-number\">6.10.3. </span>julearn.transformers.target.TargetConfoundRemover", "<span class=\"section-number\">6.10.4. </span>julearn.transformers.target.TransformedTargetWarning", "<span class=\"section-number\">6.10.5. </span>julearn.transformers.target.get_target_transformer", "<span class=\"section-number\">6.10.6. </span>julearn.transformers.target.list_target_transformers", "<span class=\"section-number\">6.10.7. </span>julearn.transformers.target.register_target_transformer", "<span class=\"section-number\">6.10.8. </span>julearn.transformers.target.reset_target_transformer_register", "<span class=\"section-number\">6.11.2. </span>julearn.utils.configure_logging", "<span class=\"section-number\">6.11.1. </span>julearn.utils.logger", "<span class=\"section-number\">6.11.3. </span>julearn.utils.raise_error", "<span class=\"section-number\">6.12.2. </span>julearn.utils.typing.EstimatorLike", "<span class=\"section-number\">6.12.3. </span>julearn.utils.typing.EstimatorLikeFit1", "<span class=\"section-number\">6.12.4. </span>julearn.utils.typing.EstimatorLikeFit2", "<span class=\"section-number\">6.12.5. </span>julearn.utils.typing.EstimatorLikeFity", "<span class=\"section-number\">6.12.1. </span>julearn.utils.typing.JuEstimatorLike", "<span class=\"section-number\">6.11.4. </span>julearn.utils.warn_with_log", "<span class=\"section-number\">6. </span>Reference", "<span class=\"section-number\">6.5. </span>Inspect", "<span class=\"section-number\">6.1. </span>Main API", "<span class=\"section-number\">6.3. </span>Model Selection", "<span class=\"section-number\">6.6. </span>Models", "<span class=\"section-number\">6.2. </span>Pipeline", "<span class=\"section-number\">6.13. </span>Prepare", "<span class=\"section-number\">6.7. </span>Scoring", "<span class=\"section-number\">6.9. </span>Transformers", "<span class=\"section-number\">6.11. </span>Utils", "<span class=\"section-number\">5.1. </span>Starting with julearn", "<span class=\"section-number\">5.1.4. </span>Multiclass Classification.", "<span class=\"section-number\">5.1.6. </span>Regression Analysis", "<span class=\"section-number\">5.1.5. </span>Stratified K-fold CV for regression analysis", "<span class=\"section-number\">5.1.1. </span>Working with pandas", "<span class=\"section-number\">5.1.3. </span>Grouped CV.", "<span class=\"section-number\">5.1.2. </span>Simple Binary Classification", "Computation times", "<span class=\"section-number\">5.2. </span>Model Comparison", "<span class=\"section-number\">5.2.1. </span>Simple Model Comparison", "Computation times", "<span class=\"section-number\">5.3. </span>Inspection", "<span class=\"section-number\">5.3.3. </span>Inspecting SVM models.", "<span class=\"section-number\">5.3.2. </span>Inspecting Random Forest models", "<span class=\"section-number\">5.3.4. </span>Preprocessing with variance threshold, zscore and PCA", "<span class=\"section-number\">5.3.1. </span>Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">5.4. </span>Complex Models", "<span class=\"section-number\">5.4.1. </span>Transforming target variable with z-score.", "<span class=\"section-number\">5.4.4. </span>Regression Analysis", "<span class=\"section-number\">5.4.3. </span>Tuning Hyperparameters", "<span class=\"section-number\">5.4.2. </span>Stacking Classification", "Computation times", "<span class=\"section-number\">5.5. </span>Confounds", "<span class=\"section-number\">5.5.2. </span>Confound Removal (model comparison)", "<span class=\"section-number\">5.5.1. </span>Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">5.6. </span>Customization", "<span class=\"section-number\">5.6.1. </span>Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">4. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">7. </span>Contributing to julearn", "<span class=\"section-number\">5. </span>Examples", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">8. </span>Maintaining julearn", "<span class=\"section-number\">3.5. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">3.2. </span>Hyper Parameter Tuning", "<span class=\"section-number\">3.1. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">3. </span>Selected deeper topics", "<span class=\"section-number\">3.3. </span>Inspecting Models", "<span class=\"section-number\">3.4. </span>Stacking Models", "<span class=\"section-number\">2.1. </span>Why cross validation?", "<span class=\"section-number\">2.2. </span>Data", "<span class=\"section-number\">2. </span>What you really need to know", "<span class=\"section-number\">2.4. </span>Model evaluation", "<span class=\"section-number\">2.3. </span>Pipeline", "<span class=\"section-number\">9. </span>What\u2019s new"], "terms": {"provid": [0, 1, 3, 5, 14, 15, 29, 48, 78, 99, 105, 108, 112, 120, 121], "import": [0, 25, 47, 75, 76, 77, 78, 79, 80, 83, 86, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 110, 112, 116, 117, 118, 120], "modul": [0, 29, 99, 108, 116], "class": [0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 18, 20, 23, 25, 26, 29, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 72, 73, 75, 77, 79, 80, 83, 86, 87, 89, 94, 95, 98, 104, 112, 120], "function": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 57, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 80, 83, 86, 87, 88, 97, 99, 101, 103, 108, 110, 112, 117, 118, 120, 121], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 105, 107, 109, 110, 112, 116, 117, 118, 120], "page": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 108, 112], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 92, 93, 94, 98, 99, 102, 104, 105, 107, 109, 110, 113, 116, 117, 118, 120], "refer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 88, 104, 105, 108, 117], "document": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 87, 104, 109, 120, 121], "It": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 86, 94, 107, 108, 110, 120], "onli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 77, 86, 88, 98, 99, 110, 112, 116, 117, 118, 121], "explain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 105], "signatur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "how": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 79, 80, 85, 86, 87, 91, 93, 99, 104, 105, 107, 112, 116, 118], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 88, 120], "what": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 79, 86, 93, 94, 99, 104, 105, 112, 117, 120], "you": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 88, 99, 105, 107, 108, 109, 110, 112, 120], "realli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 98, 108], "need": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 79, 80, 83, 86, 92, 98, 99, 102, 105, 108, 110, 112, 117, 120, 121], "know": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 93, 94, 108, 117, 120], "section": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 116, 117, 120, 121], "big": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 120], "pictur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "problem_typ": [1, 21, 27, 29, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112, 120], "apply_to": [1, 5, 6, 7, 26, 37, 38, 39, 40, 41, 42, 48, 88, 92, 93, 95, 98, 99, 112, 120], "continu": [1, 7, 26, 37, 39, 41, 42, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102], "creat": [1, 2, 3, 36, 75, 77, 78, 80, 86, 88, 92, 93, 95, 104, 109, 110, 112, 120], "pipelin": [1, 2, 5, 6, 7, 12, 20, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 47, 48, 64, 70, 86, 88, 89, 92, 93, 94, 95, 98, 99, 108, 110, 112, 116, 117, 118, 119], "As": [1, 78, 80, 83, 89, 95, 98, 99, 102, 110, 112], "creation": [1, 112], "bit": [1, 107], "more": [1, 3, 29, 75, 76, 77, 79, 80, 86, 88, 93, 98, 102, 105, 107, 108, 112, 118, 120, 121], "complic": 1, "than": [1, 29, 77, 78, 86, 108, 112, 120], "just": [1, 105, 108, 112, 118, 120], "ad": [1, 29, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112, 117, 120], "step": [1, 2, 12, 25, 29, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 108, 110, 112, 116, 117, 120], "helper": 1, "so": [1, 5, 6, 7, 20, 34, 36, 37, 38, 39, 40, 41, 42, 48, 78, 80, 83, 88, 94, 104, 117, 120], "user": [1, 18, 23, 34, 36, 45, 50, 53, 55, 88, 102, 105, 107, 108, 112, 120, 121], "can": [1, 3, 13, 14, 15, 18, 20, 23, 25, 27, 29, 34, 36, 40, 42, 45, 48, 53, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 98, 99, 102, 104, 105, 107, 108, 110, 112, 117, 118, 120], "easili": [1, 110], "complex": [1, 86, 95, 106, 108, 112, 120], "sklearn": [1, 3, 5, 11, 20, 25, 40, 42, 49, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 110, 112], "object": [1, 2, 5, 6, 7, 13, 14, 15, 20, 21, 27, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 51, 75, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 112], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 53, 55, 57, 63, 70, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 108, 110, 113, 116, 117, 118, 120, 121], "classif": [1, 23, 27, 29, 55, 74, 79, 81, 83, 86, 87, 89, 91, 94, 96, 98, 105, 120], "regress": [1, 12, 15, 23, 27, 29, 34, 55, 74, 81, 88, 91, 92, 95, 96, 99, 101, 103, 104, 110, 113, 120, 121], "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 53, 55, 57, 63, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 112, 117, 118, 120], "problem": [1, 13, 14, 15, 21, 23, 27, 29, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 110, 112, 120, 121], "type": [1, 3, 5, 6, 7, 8, 10, 11, 12, 21, 23, 25, 26, 27, 28, 29, 37, 38, 39, 40, 41, 42, 48, 49, 64, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 108, 112, 116, 118], "which": [1, 5, 6, 18, 23, 26, 29, 36, 37, 38, 39, 40, 41, 42, 45, 49, 53, 76, 77, 79, 80, 86, 88, 92, 93, 94, 98, 99, 102, 105, 108, 110, 112, 118, 120], "should": [1, 5, 6, 14, 18, 23, 26, 34, 36, 37, 38, 39, 40, 41, 42, 45, 53, 88, 93, 98, 104, 105, 107, 109, 110, 113, 116, 117, 120], "columntypeslik": [1, 26, 37, 38, 39, 40, 42], "option": [1, 2, 6, 7, 12, 18, 20, 23, 26, 29, 34, 36, 37, 38, 39, 40, 41, 42, 45, 49, 53, 55, 57, 63, 78, 99, 107, 117], "To": [1, 40, 42, 86, 88, 105, 108, 118, 120], "transform": [1, 2, 6, 25, 29, 55, 64, 78, 88, 91, 96, 99, 108, 110, 112, 120, 121], "appli": [1, 5, 6, 7, 26, 29, 36, 37, 38, 39, 40, 41, 42, 48, 49, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 108, 110, 112, 117, 118], "specifi": [1, 14, 16, 18, 28, 29, 39, 42, 49, 51, 78, 86, 87, 93, 99, 104, 105, 110, 112, 116, 117, 118], "add": [1, 2, 3, 18, 23, 45, 88, 89, 92, 93, 94, 95, 98, 99, 105, 108, 110, 112, 117, 120, 121], "method": [1, 5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 78, 88, 99, 107, 110, 120], "default": [1, 2, 5, 6, 7, 12, 13, 14, 15, 18, 20, 23, 24, 26, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 53, 55, 57, 63, 83, 86, 88, 94, 95, 98, 99, 104, 110, 112, 120, 121], "__init__": [1, 2, 3, 5, 6, 7, 13, 14, 15, 20, 25, 26, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 59, 60, 61, 62], "name": [1, 2, 5, 6, 7, 8, 12, 16, 17, 18, 20, 21, 22, 23, 26, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 53, 55, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 105, 108, 112, 117, 120], "none": [1, 2, 5, 6, 7, 12, 13, 14, 15, 18, 20, 23, 25, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 45, 49, 53, 55, 57, 76, 77, 78, 79, 80, 83, 86, 87, 88, 92, 93, 94, 95, 98, 99, 102, 120], "row_select_col_typ": [1, 6, 26, 37, 38, 39, 40, 41, 42], "row_select_v": [1, 6, 26, 37, 38, 39, 40, 41, 42], "param": [1, 2, 5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 43, 48, 51, 59, 60, 61, 62, 107], "estimatorlik": [1, 30, 40], "an": [1, 2, 6, 13, 14, 15, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 75, 78, 79, 80, 83, 86, 87, 88, 94, 98, 105, 108, 110, 112, 117, 120, 121], "available_transform": 1, "available_model": 1, "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 55, 57, 63, 75, 76, 93, 104, 120], "compat": [1, 13, 14, 15, 16, 18, 20, 29, 37, 38, 39, 40, 41, 42, 43, 49, 110, 120, 121], "model": [1, 7, 12, 14, 29, 42, 48, 49, 55, 64, 71, 75, 76, 77, 79, 80, 84, 85, 88, 89, 90, 92, 93, 94, 95, 97, 99, 100, 102, 106, 108, 112, 113, 116, 118, 120], "If": [1, 2, 5, 6, 7, 12, 14, 15, 16, 18, 20, 23, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 45, 48, 51, 53, 55, 78, 80, 86, 88, 98, 102, 105, 107, 112, 117, 118, 120], "obtain": [1, 2, 7, 48, 87, 112, 120], "from": [1, 2, 3, 5, 20, 25, 28, 29, 37, 42, 45, 47, 49, 53, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 105, 107, 108, 109, 110, 116, 117, 119, 120], "repres": [1, 3, 14, 15, 26, 42, 49], "column": [1, 3, 5, 6, 7, 8, 10, 11, 12, 20, 26, 28, 29, 37, 38, 39, 40, 41, 42, 48, 49, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 104, 110, 112, 118, 120, 121], "list": [1, 3, 4, 5, 6, 7, 12, 17, 22, 25, 26, 28, 29, 32, 37, 38, 39, 40, 41, 42, 44, 49, 52, 99, 104, 117, 120], "attribut": [1, 5, 7, 9, 20, 36, 48], "set": [1, 3, 4, 5, 6, 7, 13, 14, 15, 18, 20, 25, 26, 29, 34, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 106, 107, 108, 110, 118, 120, 121], "columntyp": [1, 4, 5, 6, 7, 9, 26, 37, 38, 39, 40, 41, 42, 48, 49, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "select": [1, 6, 7, 11, 20, 26, 37, 38, 39, 40, 41, 42, 64, 88, 108, 110, 118, 120], "row": [1, 6, 26, 37, 38, 39, 40, 41, 42, 75, 76, 77, 78, 79, 83, 86, 88, 89, 92, 93, 99, 102], "int": [1, 6, 13, 14, 15, 20, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 55], "bool": [1, 5, 6, 7, 12, 18, 20, 23, 25, 26, 29, 34, 36, 37, 38, 39, 40, 41, 42, 45, 48, 53, 55], "valu": [1, 5, 6, 7, 14, 20, 26, 29, 33, 36, 37, 38, 39, 40, 41, 42, 48, 49, 75, 76, 77, 78, 79, 80, 86, 88, 92, 93, 94, 98, 102, 104, 110, 120], "": [1, 5, 6, 7, 20, 26, 29, 36, 37, 38, 39, 40, 41, 42, 48, 49, 55, 75, 76, 77, 78, 79, 86, 88, 92, 93, 94, 98, 99, 102, 104, 105, 110, 112, 116, 117, 120], "train": [1, 6, 13, 14, 15, 20, 26, 29, 36, 37, 38, 39, 40, 41, 42, 49, 75, 76, 77, 79, 86, 88, 92, 93, 98, 102, 112, 116, 119, 120], "mostli": [1, 2, 107, 116], "includ": [1, 2, 12, 14, 87, 88, 99, 105, 116], "hyperparamet": [1, 2, 29, 55, 83, 88, 91, 93, 95, 96, 98, 99, 110, 118, 121], "ani": [1, 2, 7, 18, 20, 23, 25, 26, 27, 28, 29, 34, 45, 47, 48, 53, 105, 110, 120], "other": [1, 2, 18, 20, 23, 45, 78, 80, 93, 94, 99, 105, 110, 112, 116], "initi": [1, 2, 18, 19, 45, 46, 53, 54, 98, 112], "multipl": [1, 13, 14, 15, 88, 120], "lead": [1, 107, 112, 117, 120], "search": [1, 17, 18, 29, 88, 94, 108], "return": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 77, 86, 87, 97, 100, 102, 116, 119, 120], "its": [1, 5, 19, 46, 54, 118, 120], "last": [1, 88, 93, 99, 109, 112], "rais": [1, 15, 16, 18, 23, 27, 28, 34, 45, 51, 53, 55, 57, 121], "valueerror": [1, 15, 16, 18, 23, 27, 28, 34, 45, 51, 53, 57], "valid": [1, 13, 14, 15, 27, 28, 29, 70, 75, 76, 87, 93, 98, 99, 104, 108, 110, 113, 117, 118], "targetpipelinecr": [1, 92, 104, 112, 120], "target": [1, 2, 6, 7, 13, 14, 20, 25, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 55, 64, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 102, 104, 108, 110, 117, 118, 121], "properti": [1, 3, 7, 25, 48, 49], "get": [1, 3, 5, 6, 7, 10, 16, 20, 21, 25, 31, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 51, 75, 76, 79, 86, 87, 88, 93, 99, 108, 117], "have": [1, 5, 6, 7, 20, 28, 36, 37, 38, 39, 40, 41, 42, 48, 75, 78, 79, 80, 83, 86, 88, 94, 98, 99, 104, 105, 107, 110, 112, 117, 118, 120], "been": [1, 50, 110], "has_model": 1, "whether": [1, 12, 18, 23, 29, 34, 36, 42, 45, 53, 79, 83, 86, 105, 112], "ha": [1, 29, 36, 50, 75, 76, 77, 78, 79, 80, 83, 86, 87, 89, 93, 95, 98, 102, 105, 110, 112, 117, 120], "classmethod": 1, "from_list": 1, "model_param": [1, 29, 83, 121], "union": [1, 4, 25, 26, 30, 49, 58], "dict": [1, 5, 6, 7, 20, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 48], "kei": [1, 28, 29, 37, 41, 78, 88, 120], "being": [1, 107, 120], "pieplin": 1, "to_pipelin": [1, 2], "x_type": [1, 28, 29, 37, 38, 39, 41, 42, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112, 117, 120], "search_param": [1, 29, 94, 121], "data": [1, 5, 6, 7, 12, 13, 14, 15, 20, 25, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 70, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 108, 110, 112, 116, 118, 120], "inspect": [1, 29, 55, 64, 88, 90, 93, 99, 106, 108, 113, 117, 119], "fold": [1, 13, 15, 29, 55, 74, 75, 76, 81, 85, 86, 87, 90, 92, 93, 98, 99, 102], "wise": [1, 29, 55, 85, 90], "predict": [1, 7, 20, 28, 29, 33, 42, 48, 49, 55, 75, 76, 77, 78, 79, 80, 83, 85, 86, 90, 92, 93, 95, 99, 102, 104, 108, 112, 113, 116, 120], "preprocess": [1, 29, 55, 75, 76, 77, 79, 80, 83, 85, 86, 87, 90, 93, 98, 99, 102, 110, 116, 117, 118, 119], "varianc": [1, 12, 29, 55, 77, 85, 90, 104], "threshold": [1, 12, 29, 36, 42, 49, 55, 85, 90, 104, 110], "zscore": [1, 12, 29, 55, 75, 76, 77, 79, 80, 83, 85, 86, 87, 89, 90, 92, 94, 95, 98, 102, 104, 120], "pca": [1, 12, 29, 55, 85, 90, 93, 99, 104, 120], "variabl": [1, 2, 13, 14, 15, 27, 28, 29, 55, 76, 77, 79, 86, 91, 93, 96, 99, 102, 112, 117, 120, 121], "z": [1, 2, 29, 55, 86, 91, 96, 109, 120], "score": [1, 2, 7, 20, 29, 55, 64, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 101, 103, 108, 110, 112, 116, 119, 120, 121], "stack": [1, 29, 55, 91, 96, 98, 104, 108, 113], "tune": [1, 26, 29, 55, 91, 96, 108, 110, 113, 116, 120], "analysi": [1, 12, 15, 29, 55, 74, 81, 86, 91, 92, 96, 102, 104, 120], "confound": [1, 12, 14, 29, 37, 42, 49, 55, 78, 100, 104, 106, 108, 113, 121], "remov": [1, 12, 14, 29, 37, 42, 49, 55, 88, 97, 100, 104, 105, 108, 113, 121], "comparison": [1, 14, 29, 55, 84, 97, 100, 106, 108, 119], "analog": 2, "pipelinecr": [2, 29, 88, 89, 92, 93, 94, 95, 98, 99, 104, 110, 112, 118], "allow": [2, 18, 23, 34, 45, 53, 80, 98, 110, 112, 118, 121], "target_pipelin": [2, 112], "jutargetpipelin": [2, 48, 92], "easi": [2, 78, 108, 112, 118], "wai": [2, 80, 83, 105, 108, 112, 120], "out": [2, 17, 40, 42, 43, 52, 99, 104, 108, 109, 112, 118], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 74, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 104, 105, 106, 107, 108, 110, 113, 116, 117, 118, 120, 121], "column_typ": 3, "hold": 3, "regard": 3, "pd": [3, 5, 6, 7, 12, 20, 25, 29, 37, 38, 39, 40, 41, 42, 47, 48, 49, 75, 76, 77, 78, 86, 87, 88, 92, 93, 98, 102, 110, 112], "datafram": [3, 5, 6, 7, 12, 20, 25, 28, 29, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 108, 110, 112, 117, 121], "One": [3, 20, 78, 112, 116, 120], "instead": [3, 14, 15, 18, 23, 34, 36, 45, 53, 77, 112, 121], "also": [3, 75, 78, 80, 88, 93, 99, 105, 110, 112, 117, 120], "itself": 3, "self": [3, 5, 6, 20, 25, 36, 37, 38, 39, 40, 41, 42, 47, 48, 50], "updat": [3, 5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 107, 109, 121], "pattern": [3, 11, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 110], "regex": 3, "match": [3, 40, 78], "all": [3, 12, 17, 18, 22, 29, 32, 36, 37, 41, 42, 44, 49, 52, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 97, 98, 99, 101, 102, 104, 105, 107, 108, 109, 110, 112, 116, 118, 120], "to_type_selector": 3, "selector": [3, 11], "usabl": [3, 120], "compos": [3, 11], "columntransform": [3, 11], "callabl": [3, 30, 31, 34, 36, 121], "copi": [3, 77, 99, 105], "alia": [4, 56, 58], "needed_typ": [5, 6, 7, 25, 26, 40, 49], "estim": [5, 6, 7, 20, 26, 29, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 48, 86, 87, 88, 94, 95, 98, 99, 108, 110, 112, 119, 120], "everi": [5, 23, 28, 29, 45, 105, 107, 109, 117], "awar": [5, 107], "thu": [5, 86, 120], "thei": [5, 7, 20, 48, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102, 105, 120], "abl": [5, 105], "main": [5, 64, 98, 105, 108, 109], "differ": [5, 13, 14, 15, 23, 77, 78, 80, 83, 88, 93, 94, 95, 98, 99, 105, 107, 110, 117, 120], "between": [5, 14, 27, 76, 98, 105, 110, 112, 120], "baseestim": [5, 121], "purpos": [5, 77, 78, 120], "That": [5, 15, 110, 112, 120], "ar": [5, 6, 7, 15, 18, 20, 23, 25, 29, 34, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 53, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 105, 106, 107, 109, 110, 112, 116, 118, 120, 121], "get_needed_typ": [5, 6, 7, 37, 38, 39, 40, 41, 42, 48, 62], "get_apply_to": [5, 6, 7, 37, 38, 39, 40, 41, 42, 48, 62], "filter_column": [5, 6, 7, 37, 38, 39, 40, 41, 42, 48, 95, 104], "x": [5, 6, 7, 12, 13, 14, 15, 20, 25, 28, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 59, 60, 62, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 109, 110, 112, 117, 120], "panda": [5, 6, 7, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 48, 74, 75, 76, 77, 79, 80, 81, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 107, 108, 110, 112, 117], "filter": [5, 6, 7, 37, 38, 39, 40, 41, 42, 48, 104, 120], "get_param": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 59, 60, 61, 62], "deep": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 59, 60, 61, 62, 112], "true": [5, 6, 7, 18, 20, 23, 25, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 48, 53, 59, 60, 61, 62, 75, 76, 77, 80, 86, 89, 92, 93, 98, 99, 102, 112, 120], "contain": [5, 6, 7, 20, 28, 29, 32, 36, 37, 38, 39, 40, 41, 42, 48, 75, 76, 77, 80, 92, 93, 102, 117], "subobject": [5, 6, 7, 20, 36, 37, 38, 39, 41, 42, 48], "map": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 76, 99], "set_param": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 59, 60, 61, 62], "work": [5, 6, 7, 20, 25, 36, 37, 38, 39, 40, 41, 42, 47, 48, 74, 75, 76, 77, 79, 80, 81, 83, 86, 87, 88, 89, 92, 94, 98, 99, 102, 112, 121], "simpl": [5, 6, 7, 20, 29, 36, 37, 38, 39, 40, 41, 42, 48, 55, 74, 81, 82, 84, 86, 87, 88, 89, 94, 98, 99, 104, 105, 107, 110, 120], "well": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 110, 112, 117, 118, 120], "nest": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 110], "latter": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48], "form": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 117, 120], "compon": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 88, 93, 104, 120], "__": [5, 6, 7, 20, 36, 37, 38, 39, 40, 41, 42, 48, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "possibl": [5, 6, 7, 18, 20, 23, 34, 36, 37, 38, 39, 40, 41, 42, 45, 48, 53, 78, 108, 120], "each": [5, 6, 7, 13, 14, 15, 20, 28, 29, 36, 37, 38, 39, 40, 41, 42, 48, 49, 75, 76, 78, 79, 86, 87, 88, 89, 93, 98, 102, 104, 105, 110, 112, 120], "instanc": [5, 6, 7, 13, 14, 15, 20, 36, 37, 38, 39, 40, 41, 42, 48, 112, 120], "fit": [6, 7, 20, 25, 29, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 59, 60, 61, 62, 86, 87, 93, 99, 104, 110, 112, 120], "y": [6, 7, 13, 14, 15, 20, 25, 27, 28, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 59, 60, 61, 62, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 109, 110, 112, 116, 117, 120], "fit_param": [6, 7, 36, 37, 38, 39, 40, 41, 42, 48], "fit_transform": [6, 25, 36, 37, 38, 39, 40, 41, 42, 47, 49], "version": [6, 14, 36, 37, 38, 39, 40, 41, 42, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 105, 108, 121], "arrai": [6, 7, 13, 14, 15, 29, 36, 37, 38, 39, 40, 41, 42, 48], "like": [6, 7, 13, 14, 15, 23, 36, 37, 38, 39, 40, 41, 42, 45, 48, 93, 107, 116, 117, 120], "shape": [6, 7, 13, 14, 15, 36, 37, 38, 39, 40, 41, 42, 48, 75, 86], "n_sampl": [6, 7, 13, 14, 15, 36, 37, 38, 39, 40, 41, 42, 48, 88], "n_featur": [6, 13, 14, 15, 36, 37, 38, 39, 40, 41, 42, 88, 112], "input": [6, 25, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 70, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 110, 118, 119, 120], "sampl": [6, 7, 13, 14, 15, 20, 28, 36, 37, 38, 39, 40, 41, 42, 48, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 110], "n_output": [6, 36, 37, 38, 39, 40, 41, 42], "unsupervis": [6, 36, 37, 38, 39, 40, 41, 42], "addit": [6, 7, 20, 29, 36, 37, 38, 39, 40, 41, 42, 48, 108, 110], "x_new": [6, 36, 37, 38, 39, 40, 41, 42], "ndarrai": [6, 7, 13, 14, 15, 20, 36, 37, 38, 39, 40, 41, 42, 48], "n_features_new": [6, 36, 37, 38, 39, 40, 41, 42], "set_output": [6, 36, 37, 38, 39, 40, 41, 42], "output": [6, 12, 13, 14, 15, 29, 36, 37, 38, 39, 40, 41, 42, 55, 77, 98, 105, 119, 120], "see": [6, 13, 15, 21, 28, 29, 36, 37, 38, 39, 40, 41, 42, 55, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 112, 116, 118, 120], "introduc": [6, 36, 37, 38, 39, 40, 41, 42, 78, 112], "api": [6, 36, 37, 38, 39, 40, 41, 42, 64, 108, 118, 120], "exampl": [6, 36, 37, 38, 39, 40, 41, 42, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 107, 108, 110, 112, 117, 119, 120, 121], "configur": [6, 36, 37, 38, 39, 40, 41, 42, 55, 112], "format": [6, 36, 37, 38, 39, 40, 41, 42, 55, 76, 93, 94, 98, 105, 109, 112], "unchang": [6, 36, 37, 38, 39, 40, 41, 42], "wrap": [7, 48, 121], "make": [7, 11, 13, 14, 15, 20, 76, 78, 79, 86, 88, 93, 94, 98, 105, 107, 109, 112, 117, 120, 121], "modellik": [7, 20, 21, 23, 42, 48, 49], "datalik": [7, 20, 25, 39, 47, 48, 49], "pass": [7, 13, 14, 15, 20, 48, 104, 105, 116, 120], "float": [7, 14, 20, 28, 29, 33, 36, 42, 49, 75], "predict_proba": [7, 20, 48], "comput": [7, 20, 33, 36, 48, 80, 93, 102, 120], "probabl": [7, 20, 29, 48], "outcom": [7, 20, 48, 120], "np": [7, 13, 14, 15, 20, 36, 48, 75, 76, 79, 86, 93, 94, 110, 112], "correspond": [7, 20, 29, 48], "sort": [7, 20, 48, 79, 86, 104], "order": [7, 20, 48, 78, 79, 86, 98, 99, 105, 112], "appear": [7, 20, 48], "classes_": [7, 20, 48], "decision_funct": [7, 48, 86, 121], "evalu": [7, 29, 48, 71, 80, 86, 108, 116, 118, 120], "decis": [7, 48, 78, 79, 86, 94, 112], "n_class": [7, 48], "1": [7, 14, 20, 28, 29, 40, 48, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 107, 109, 110, 112, 117, 120], "2": [7, 13, 14, 15, 20, 48, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 107, 108, 112, 120], "predict_log_proba": 7, "kwarg": [7, 20, 21, 40, 47, 50, 59, 60, 61, 62], "new_typ": 8, "chang": [8, 14, 37, 94, 98, 104, 107, 109, 120], "new": [8, 86, 92, 99, 105, 108, 120], "attr": 9, "ensur": [9, 15, 37, 39, 41, 42], "check": [9, 25, 27, 30, 73, 78, 79, 86, 88, 98, 105, 108, 109, 121], "until": [12, 86, 88, 93, 99, 107], "with_column_typ": [12, 86], "fals": [12, 15, 18, 23, 29, 34, 38, 42, 45, 53, 55, 76, 77, 79, 80, 83, 86, 87, 88, 92, 93, 94, 95, 99, 102], "certain": [12, 117, 118], "inclus": [12, 99], "featur": [12, 13, 14, 15, 25, 28, 29, 36, 37, 38, 39, 40, 41, 42, 47, 49, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 107, 110, 116, 118], "svm": [12, 29, 55, 75, 80, 83, 85, 89, 90, 94, 95, 104, 120], "n_split": [13, 14, 15, 20, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "5": [13, 14, 15, 29, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 108, 110], "n_repeat": [13, 75, 83, 89], "10": [13, 36, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112], "random_st": [13, 14, 15, 20, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "repeat": [13, 75, 76, 93], "stratifi": [13, 14, 15, 29, 55, 74, 75, 81, 121], "group": [13, 14, 15, 27, 28, 29, 55, 74, 77, 81, 86, 93, 108, 110, 121], "k": [13, 15, 29, 55, 74, 75, 76, 79, 81, 86, 92, 93, 98, 104], "cross": [13, 14, 15, 27, 29, 75, 76, 87, 93, 98, 99, 104, 108, 110, 113, 117, 118], "stratifiedgroupskfold": [13, 77, 79, 121], "n": [13, 15, 75, 76, 77, 88, 92, 93, 102, 104, 109, 120], "time": [13, 15, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 107, 109, 110], "random": [13, 14, 15, 20, 29, 55, 79, 80, 83, 85, 88, 90, 94, 98, 104, 112, 120], "repetit": [13, 15, 75, 76, 93], "number": [13, 14, 15, 29, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 109, 120], "must": [13, 15, 40, 78, 79, 86, 93, 105, 109], "least": [13, 15, 29, 77, 98, 104], "randomst": [13, 14, 15], "control": [13, 14, 15, 78, 79, 86, 94, 101, 112], "gener": [13, 14, 15, 29, 40, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 120], "state": [13, 15, 19, 20, 24, 35, 46, 54, 112], "reproduc": [13, 14, 15, 20, 29], "across": [13, 14, 15, 76, 87, 92, 93, 102], "call": [13, 14, 15, 18, 31, 34, 112, 117, 120], "glossari": [13, 15], "note": [13, 14, 15, 29, 88, 98, 112], "cv": [13, 14, 15, 20, 27, 28, 29, 55, 74, 75, 76, 80, 81, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 104, 116, 119, 120, 121], "splitter": [13, 14, 15, 20, 29], "mai": [13, 14, 15, 110, 112], "result": [13, 14, 15, 25, 29, 47, 78, 86, 98, 99, 112], "split": [13, 14, 15, 20, 29, 75, 76, 77, 80, 83, 86, 92, 93, 102, 120], "ident": [13, 14, 15], "integ": [13, 14, 15], "get_n_split": [13, 14, 15], "iter": [13, 14, 15, 29, 88, 98, 110, 121], "alwai": [13, 14, 15, 80, 94, 98, 112], "ignor": [13, 14, 15, 99, 102], "exist": [13, 14, 15, 34, 55, 105], "zero": [13, 14, 15, 88], "placehold": [13, 14, 15], "label": [13, 14, 28, 29, 75, 80, 117, 120], "while": [13, 14, 29, 87, 98, 108, 112, 120], "dataset": [13, 14, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 110, 112, 117, 120], "test": [13, 14, 15, 20, 29, 49, 75, 76, 77, 83, 86, 92, 93, 94, 98, 107, 108, 112, 119, 120, 121], "indic": [13, 14, 15, 29, 38, 42, 86, 104, 120], "where": [13, 14, 15, 78, 105, 109, 118, 120, 121], "supervis": [13, 14], "learn": [13, 14, 16, 18, 29, 36, 37, 39, 40, 41, 42, 43, 47, 78, 80, 86, 87, 102, 104, 107, 108, 110, 112, 116, 117, 118, 120, 121], "yield": [13, 14, 15, 29], "test_siz": [14, 75, 76, 86, 92, 93, 98], "0": [14, 20, 28, 29, 36, 42, 49, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 107, 108, 110], "train_siz": [14, 86, 89, 98], "bootstrap": [14, 98], "resampl": 14, "replac": [14, 36, 87, 98, 105, 109], "respect": [14, 36, 104, 117, 120], "distribut": [14, 75, 79, 80, 83, 86, 87, 89, 94, 95, 98, 104, 112, 120], "re": [14, 120], "shuffl": [14, 15, 76, 77, 79, 80, 83, 86, 87, 88, 92, 93, 94, 95, 99, 102], "proport": 14, "round": 14, "up": [14, 29, 57, 88, 94, 99, 108, 110, 118, 120], "absolut": [14, 76, 92, 93, 102, 104], "complement": [14, 104], "size": [14, 110, 112], "21": [14, 78], "remain": 14, "unspecifi": 14, "otherwis": [14, 55], "automat": [14, 105, 107, 109], "produc": 14, "suffici": [14, 15], "henc": [14, 15], "actual": [14, 15, 36, 42, 75, 76, 93, 99, 102], "n_label": 14, "stratif": [14, 15, 77, 79], "done": [14, 105, 109, 120], "base": [14, 25, 47, 64, 104, 105, 107, 108, 112, 113, 117, 118, 120, 121], "particular": [15, 112, 120], "implement": [15, 36, 108, 110, 112, 120, 121], "searcher": [16, 17, 18, 19, 29, 121], "obj": [16, 18], "scikit": [16, 18, 29, 36, 37, 39, 40, 41, 42, 43, 47, 80, 86, 87, 102, 104, 107, 108, 110, 112, 116, 120, 121], "avail": [16, 17, 18, 22, 29, 31, 32, 44, 51, 52, 108, 120], "algorithm": [17, 18, 20, 29, 116, 120, 121], "A": [17, 22, 28, 29, 37, 41, 44, 52, 77, 78, 79, 80, 86, 94, 95, 110, 112, 116, 117, 120], "searcher_nam": 18, "overwrit": [18, 23, 34, 45, 53, 55, 121], "regist": [18, 19, 23, 24, 34, 35, 45, 46, 53, 54, 102, 121], "after": [18, 25, 42, 47, 49, 76, 77, 86, 88, 92, 93, 98, 99, 102, 105, 116], "referenc": [18, 23, 45, 53], "decid": [18, 23, 34, 53], "warn": [18, 23, 27, 28, 34, 45, 50, 53, 55, 63, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102, 121], "without": [18, 23, 34, 45, 53, 77, 79, 94, 98, 99, 104], "error": [18, 23, 28, 29, 34, 45, 53, 55, 57, 76, 78, 92, 93, 102, 105, 121], "alreadi": [18, 23, 34, 45, 53, 86, 88, 105, 112, 118, 120], "reset": [19, 24, 35, 46, 54, 78], "ensembl": 20, "ds_split": 20, "random_state_algorithm": 20, "deslib": [20, 104], "e": [20, 23, 29, 36, 42, 49, 55, 104, 107, 110, 112, 120], "g": [20, 23, 29, 55, 93, 104, 107], "randomforest": 20, "metad": 20, "singlebest": 20, "staticselect": 20, "stackedclassifi": 20, "knorau": 20, "knora": 20, "desp": 20, "ola": 20, "mcb": 20, "knop": 20, "consist": [20, 27, 108, 110, 113, 116, 117, 120, 121], "case": [20, 28, 29, 36, 78, 86, 92, 102, 105, 110, 112, 120], "sample_weight": 20, "weight": [20, 120], "when": [20, 77, 98, 104, 105, 110, 112, 120, 121], "run_cross_valid": [21, 23, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 110, 112, 118, 120, 121], "model_nam": 23, "classification_cl": 23, "regression_cl": 23, "afterward": [23, 45], "behav": [23, 45], "insid": [23, 120], "runtimewarn": [23, 27, 28, 45, 53, 63, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102], "unlik": [25, 47], "both": [25, 36, 47, 77, 79, 86, 98, 99, 112, 116, 120], "requir": [25, 47, 108, 120], "inform": [25, 29, 47, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112, 117, 118, 120, 121], "targetconfoundremov": [25, 47], "encod": [25, 47], "one": [25, 29, 37, 38, 39, 41, 47, 76, 77, 78, 79, 86, 88, 92, 93, 94, 95, 99, 102, 104, 105, 110, 112, 117, 118, 120, 121], "present": [25, 47, 99], "leakag": [25, 47, 108, 112, 116, 120], "drop": [25, 36, 38, 47, 77, 80, 83, 88, 99, 104], "tupl": [25, 36], "jutargettransform": [25, 51, 53], "transformerlik": [25, 29, 120], "perform": [25, 29, 75, 76, 77, 79, 80, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 105, 110, 112, 116, 120], "inverse_transform": 25, "invers": 25, "can_inverse_transform": 25, "factori": 26, "params_to_tun": 26, "juestimatorlik": 26, "estimatorlikefit1": [26, 58], "estimatorlikefit2": [26, 58], "estimatorlikef": [26, 58], "seri": [27, 28, 49], "inconsist": [27, 28], "might": [27, 28, 78, 80, 83, 87, 94, 105, 107, 112, 120], "still": [27, 78, 99, 107], "run": [27, 29, 36, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 107, 110, 112], "df": [28, 88, 117, 120], "pos_label": [28, 29, 80], "http": [28, 29, 36, 55, 77, 105, 107, 116], "juaml": [28, 29, 105, 107], "github": [28, 29, 107], "io": [28, 29], "html": [28, 29, 55, 77, 105, 116], "detail": [28, 29, 105], "interpret": [28, 29, 55, 98], "posit": [28, 29, 36, 76, 80, 110], "element": [28, 29, 55, 78, 88, 120, 121], "convert": [28, 29, 78, 98, 102], "equal": [28, 29, 104], "dictionari": [28, 29, 37, 41, 88, 99, 112, 120, 121], "df_x": 28, "df_y": 28, "df_group": 28, "return_estim": [29, 75, 76, 77, 79, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 110], "return_inspector": [29, 89], "return_train_scor": 29, "seed": [29, 80, 83, 88, 94, 98], "n_job": [29, 36, 121], "verbos": [29, 36, 121], "numpi": [29, 38, 42, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 110, 112], "string": [29, 55, 104, 117, 120, 121], "kind": [29, 75, 76, 79, 80, 83, 86, 87, 89, 94, 95, 98, 105], "categor": [29, 93, 99, 104], "multiple_class": 29, "binari": [29, 55, 74, 79, 81, 83, 86, 87, 89, 94, 95, 98, 104, 105, 109], "ordin": 29, "final": [29, 75, 76, 77, 78, 79, 86, 87, 88, 92, 93, 94, 95, 98, 99, 102, 105, 119, 120], "inspector": [29, 89], "strategi": 29, "kfold": [29, 76, 77, 79, 80, 83, 86, 87, 88, 92, 93, 94, 95, 99, 102], "scorerlik": [29, 30, 31, 34], "metric": [29, 64, 75, 76, 78, 80, 83, 93, 98, 102, 108], "org": [29, 36, 55, 77, 107, 116], "stabl": [29, 77, 116], "model_evalu": 29, "comprehens": 29, "scorer": [29, 31, 32, 34, 35, 102, 121], "defin": [29, 40, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 112, 117, 120], "follow": [29, 36, 40, 55, 57, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 99, 102, 104, 105, 106, 107, 109, 110, 112, 117, 118, 120], "step__paramet": 29, "sever": [29, 78, 79, 86], "svm__probabl": 29, "grid": [29, 86, 94], "go": [29, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 107, 117, 118, 120], "same": [29, 41, 55, 80, 83, 86, 94, 98, 102, 108, 110, 112, 120], "befor": [29, 48, 78, 98, 102, 105, 107, 120, 121], "oper": [29, 99], "level": [29, 55, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 110], "outer": [29, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 121], "joblib": [29, 36], "convernt": 29, "mean": [29, 36, 42, 49, 76, 77, 79, 80, 86, 88, 92, 93, 94, 98, 99, 102, 104, 112, 120], "print": [29, 55, 75, 76, 77, 78, 79, 80, 83, 86, 88, 89, 92, 93, 94, 95, 98, 99, 102], "larger": 29, "50": [29, 76, 77, 80, 83, 86, 87, 88, 89, 92, 93, 95, 98, 99, 102], "standard": [29, 36, 86, 88, 105, 112, 116, 120], "standrad": 29, "addition": [29, 55, 80, 83, 108, 109, 112, 117, 120], "fit_tim": [29, 75, 76, 83, 89, 92, 93, 99, 102], "And": [29, 79, 86, 98], "final_estim": 29, "parallel": [29, 36, 121], "job": [29, 36], "convent": [29, 36], "unless": 29, "parallel_backend": 29, "process": [29, 88, 93, 117, 120], "parallelis": 29, "multiclass": [29, 55, 74, 81, 104], "forest": [29, 55, 79, 83, 85, 88, 90, 98, 104, 120], "custom": [29, 34, 55, 103, 106, 108], "scalar": [31, 34], "greater": [31, 34], "better": [31, 34, 94], "Will": [31, 34], "y_true": [33, 75, 76, 80, 93, 102], "y_pred": [33, 75, 76, 80, 93, 102], "squar": [33, 102, 104], "pearson": [33, 102, 110], "product": [33, 102], "moment": [33, 102], "correl": [33, 36, 76, 102, 110], "coeffici": [33, 76, 102, 120], "arraylik": 33, "scorer_nam": [34, 102], "access": [34, 78, 119], "want": [34, 42, 75, 78, 79, 80, 86, 88, 98, 99, 102, 105, 107, 112, 117, 118, 120], "userwarn": [34, 77, 80], "significance_threshold": [36, 110], "05": [36, 93, 96, 98, 110], "corr_method": [36, 110], "pearsonr": [36, 102], "agg_method": [36, 110], "sum": [36, 75, 110, 121], "corr_sign": [36, 110], "posneg": [36, 110], "aggreg": [36, 110], "togeth": [36, 42, 76, 77, 92, 93, 99, 102, 104], "significantli": 36, "signific": [36, 83, 110], "neg": [36, 110], "aggregate": 36, "separ": [36, 86, 88, 120], "non": 36, "ones": 36, "choos": [36, 80, 83, 105], "In": [36, 78, 79, 80, 86, 87, 98, 99, 102, 105, 108, 110, 112, 117, 120], "procedur": [36, 116], "describ": [36, 76, 77, 88, 92, 93, 99, 102], "shen": [36, 110], "finn": [36, 110], "scheinost": 36, "d": [36, 75, 78, 79, 86, 94, 104, 110], "et": [36, 104, 110, 112, 120], "al": [36, 110, 112], "2016": [36, 78, 79, 86, 94, 110], "doi": [36, 112], "1038": 36, "nprot": 36, "178": 36, "p": [36, 75, 83, 98, 110], "scipi": [36, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 110], "stat": [36, 83, 102, 110], "axi": [36, 75, 76, 77, 92, 93, 102], "po": [36, 110], "correlation_valu": 36, "found": [36, 94], "used_corr_sign_": 36, "mani": [36, 79, 86, 112, 120], "log": [36, 55, 57, 63, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102], "y_mean_": 36, "show": [36, 74, 91, 97, 101, 120, 121], "wa": [36, 79, 86, 87, 88, 99], "x_y_correlations_": 36, "significant_mask_": 36, "origin": [36, 57, 105, 109], "had": [36, 94, 121], "pos_mask_": 36, "pos_significant_mask_": 36, "neg_significant_mask_": 36, "used_significant_mask_": 36, "threhsold": 36, "mask": [36, 38, 42], "per": [36, 75, 79, 86, 93], "get_feature_names_out": [36, 37, 39, 40, 41, 42], "input_featur": [36, 37, 39, 40, 41, 42], "x_types_renam": 37, "Not": [37, 38, 39, 40, 41, 98], "here": [37, 38, 39, 41, 77, 78, 79, 86, 88, 99, 108, 120], "kept": [37, 39, 40, 41, 42, 99], "get_support": [38, 42], "support": [38, 42, 48, 75, 79, 80, 86, 89, 94, 105, 108, 120], "support_mask": [38, 42], "keep": [39, 78, 80, 83, 87, 89, 93, 95, 98, 99, 105, 107, 108, 120], "junif": 40, "wrapper": [40, 48, 121], "around": 40, "directli": [40, 78, 108], "feature_names_in_": 40, "x0": 40, "x1": 40, "n_features_in_": 40, "model_confound": [42, 49], "keep_confound": [42, 99], "specif": [42, 80, 86, 88, 112, 116, 118], "subtract": [42, 49, 104], "given": [42, 86, 98, 104, 112, 117, 120], "regular": [42, 94, 104, 112], "express": 42, "syntax": 42, "independ": [42, 49, 86, 98, 104], "linearregress": [42, 49, 104], "By": [42, 49, 86, 87, 88, 99, 104, 110], "residu": [42, 49, 112], "fall": [42, 49, 110], "under": [42, 49, 102, 105, 107, 120], "deconfound": [42, 99], "o": 44, "transformer_nam": [45, 53], "transformer_cl": [45, 53], "arg": [47, 50, 59, 60, 61, 62], "_model_": 48, "confoundremov": [49, 99, 104, 112, 121], "notifi": [50, 55], "with_traceback": 50, "except": [50, 57], "tb": 50, "__traceback__": 50, "fname": 55, "output_format": 55, "debug": 55, "info": [55, 56, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "messag": [55, 57, 63, 105, 121], "pathlib": 55, "path": 55, "filenam": [55, 105], "stdout": 55, "file": [55, 78, 81, 84, 90, 96, 100, 103, 105], "statement": 55, "append": [55, 87, 98, 109], "entri": [55, 120], "doc": [55, 77, 105, 109, 121], "python": [55, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 107, 109, 121], "dev": [55, 105, 107, 108], "howto": 55, "asctim": 55, "levelnam": 55, "msg": [57, 63, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102], "klass": 57, "first": [57, 63, 75, 79, 80, 83, 86, 88, 92, 93, 94, 98, 99, 105, 110, 112, 117, 120], "subclass": [57, 63], "categori": [63, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102], "util": [64, 75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 105, 108], "prepar": [64, 78, 108, 110, 112], "julearn": [66, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 113, 117, 118, 121], "currentmodul": [70, 72, 73], "protocol": 73, "basic": [74, 105, 117, 118], "download": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102], "sourc": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 109], "code": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 107, 108, 112, 120], "00_starting_python": 74, "zip": [74, 82, 85, 91, 97, 101], "jupyt": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102], "notebook": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102], "00_starting_jupyt": 74, "galleri": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105], "sphinx": [74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105], "end": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 107], "full": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105], "iri": [75, 80, 83, 87, 89, 95, 98, 105, 117], "vector": [75, 79, 80, 86, 89, 94, 105, 120], "machin": [75, 78, 79, 80, 86, 89, 94, 105, 108, 110, 112, 117, 118, 120], "classifi": [75, 79, 80, 86, 87, 89, 94, 95, 98, 105, 120], "plot": [75, 76, 77, 86, 87, 88, 93, 98], "heatmap": [75, 76, 93], "accuraci": [75, 80, 94, 98, 112], "confus": [75, 88, 120], "matrix": 75, "author": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "shammi": [75, 76, 77, 79, 86, 88, 93, 98, 102, 112, 121], "fz": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "juelich": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "de": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112], "federico": [75, 76, 77, 78, 79, 80, 83, 86, 87, 89, 93, 94, 95, 98, 102], "raimondo": [75, 76, 77, 78, 79, 80, 83, 86, 87, 89, 93, 94, 95, 98, 102, 121], "f": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 93, 94, 95, 98, 102, 112], "licens": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "agpl": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "seaborn": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 105, 107, 108, 117], "sn": [75, 76, 77, 86, 87, 88, 92, 93, 98], "matplotlib": [75, 76, 77, 86, 87, 88, 92, 93, 98, 108], "pyplot": [75, 76, 77, 86, 87, 88, 92, 93, 98], "plt": [75, 76, 77, 86, 87, 88, 92, 93, 98], "load_dataset": [75, 78, 79, 80, 83, 86, 87, 89, 94, 95, 98, 105, 117], "model_select": [75, 76, 77, 79, 83, 86, 89, 92, 93, 98, 121], "train_test_split": [75, 76, 92, 93], "repeatedkfold": 75, "confusion_matrix": 75, "configure_log": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 105], "extra": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 104, 120], "2023": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "04": [75, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102], "26": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "12": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 107, 110, 112], "03": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 95, 96, 98], "40": [75, 76, 79], "914": 75, "lib": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102], "23": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102, 112], "3": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 107, 110, 112, 121], "dev154": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 102], "load": [75, 76, 77, 92, 93, 94, 98, 99, 102, 117], "df_iri": [75, 80, 83, 87, 89, 95, 98, 105], "sepal_length": [75, 80, 83, 87, 89, 95, 98, 120], "sepal_width": [75, 80, 83, 87, 89, 95, 98, 120], "petal_length": [75, 80, 83, 87, 89, 95, 98, 117, 120], "speci": [75, 80, 83, 87, 89, 95, 98, 105, 117, 120], "train_iri": 75, "test_iri": 75, "200": [75, 88, 89, 98], "we": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 107, 108, 112, 117, 120], "model_iri": [75, 87], "919": 75, "expand": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "treat": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102, 119], "home": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102], "runner": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102], "py": [75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 107], "238": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 94, 98, 102], "920": 75, "__continu": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102], "921": 75, "120": 75, "922": 75, "versicolor": [75, 80, 83, 87, 89, 95, 98, 105], "virginica": [75, 80, 83, 87, 89, 95, 98, 105], "setosa": 75, "dtype": [75, 76, 77, 79, 80, 83, 86, 87, 89, 92, 93, 94, 95, 98, 99, 102], "int64": [75, 79, 80, 83, 86, 87, 89, 94, 95, 98], "923": 75, "scheme": [75, 76, 77, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 116, 121], "multi": [75, 78], "detect": [75, 79, 80, 83, 86, 87, 89, 94, 95, 98], "head": [75, 76, 77, 78, 79, 86, 92, 93, 94, 98, 99, 102, 117, 120], "score_tim": [75, 76, 83, 89, 92, 93, 99, 102], "cv_mdsum": [75, 76, 89, 92, 93, 99, 102], "006028": 75, "003219": 75, "fa5ab7a2b930761687a8e82d9971ebca": 75, "005572": 75, "003164": 75, "005561": 75, "003148": 75, "005585": 75, "003147": 75, "4": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 107, 110], "005520": 75, "003141": 75, "8": [75, 76, 78, 79, 83, 86, 89, 92, 93, 99, 102, 107, 112], "now": [75, 76, 77, 78, 80, 86, 87, 89, 92, 93, 94, 98, 99, 102, 105, 109, 112, 120], "df_accuraci": 75, "set_index": [75, 76, 78, 93, 98], "test_accuraci": [75, 80, 98], "unstack": [75, 76, 93], "index": [75, 76, 77, 78, 79, 86, 88, 92, 93, 94, 98, 102, 105, 107, 108], "916667": 75, "833333": 75, "958333": 75, "875000": 75, "750000": 75, "000000": [75, 76, 77, 88, 92, 93, 99, 102], "791667": 75, "over": [75, 76, 80, 88, 93, 110, 112], "font_scal": [75, 76], "fig": [75, 76, 77, 86, 87, 88, 93], "ax": [75, 76, 77, 86, 87, 88, 93], "subplot": [75, 76, 77, 86, 87, 88, 93], "figsiz": [75, 76, 77, 86, 87, 88, 93], "7": [75, 76, 77, 78, 79, 83, 86, 89, 93, 98, 108, 121], "cmap": [75, 76, 93], "ylgnbu": [75, 76, 93], "titl": [75, 76, 93, 105], "text": [75, 76, 86, 88, 93, 105], "our": [75, 78, 79, 80, 86, 88, 95, 99, 108, 112, 120], "annot": [75, 76], "cm": 75, "uniqu": [75, 79, 86], "9": [75, 76, 78, 79, 83, 86, 88, 89, 93, 99, 112, 120], "let": [75, 76, 77, 78, 79, 86, 88, 92, 93, 94, 98, 99, 102, 108, 112, 117, 120], "build": [75, 79, 86, 91, 108, 109, 110, 120], "anoth": [75, 78, 88, 102, 120], "cm_sum": 75, "keepdim": 75, "cm_perc": 75, "astyp": 75, "100": [75, 80, 83, 87, 88, 89, 95, 98], "empty_lik": 75, "nrow": 75, "ncol": 75, "rang": [75, 78, 88, 104], "j": [75, 112], "c": [75, 78, 79, 86, 94, 120], "els": 75, "1f": [75, 76], "fmt": [75, 76], "total": [75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103], "script": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 105, 109], "minut": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "616": [75, 81], "second": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 112], "plot_cm_acc_multiclass": [75, 81], "ipynb": [75, 76, 77, 78, 79, 80, 83, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102], "diabet": [76, 77, 92, 93, 102], "ridg": [76, 92, 93, 102, 104], "load_diabet": [76, 77, 92, 93, 99, 102], "mean_absolute_error": [76, 93], "42": [76, 80, 83, 86, 94, 98], "102": 76, "103": 76, "return_x_i": [76, 77, 92, 93, 99, 102], "as_fram": [76, 77, 92, 93, 99, 102], "ten": [76, 77, 92, 93, 102], "ag": [76, 77, 78, 92, 93, 99, 102], "sex": [76, 77, 92, 93, 99, 102, 112], "bodi": [76, 77, 92, 93, 102], "mass": [76, 77, 92, 93, 102], "averag": [76, 77, 92, 93, 99, 102, 110], "blood": [76, 77, 92, 93, 99, 102], "pressur": [76, 77, 92, 93, 99, 102], "six": [76, 77, 92, 93, 102], "serum": [76, 77, 92, 93, 102], "measur": [76, 77, 92, 93, 99, 102, 112, 116], "s1": [76, 77, 78, 79, 86, 92, 93, 99, 102], "s6": [76, 77, 78, 79, 86, 92, 93, 99, 102], "patient": [76, 77, 92, 93, 102], "quantit": [76, 77, 92, 93, 102], "diseas": [76, 77, 92, 93, 102], "progress": [76, 77, 92, 93, 102], "year": [76, 77, 92, 93, 102], "baselin": [76, 77, 92, 93, 102], "interest": [76, 77, 80, 92, 93, 98, 102, 118, 120], "bmi": [76, 77, 92, 93, 99, 102], "s4": [76, 77, 78, 79, 86, 92, 93, 99, 102], "s5": [76, 77, 78, 79, 86, 92, 93, 94, 99, 102], "038076": [76, 77, 92, 93, 99, 102], "050680": [76, 77, 92, 93, 99, 102], "061696": [76, 77, 92, 93, 99, 102], "002592": [76, 77, 92, 93, 99, 102], "019907": [76, 77, 92, 93, 99, 102], "017646": [76, 77, 92, 93, 99, 102], "001882": [76, 77, 92, 93, 99, 102], "044642": [76, 77, 92, 93, 99, 102], "051474": [76, 77, 92, 93, 99, 102], "039493": [76, 77, 92, 93, 99, 102], "068332": [76, 77, 92, 93, 99, 102], "092204": [76, 77, 92, 93, 99, 102], "085299": [76, 77, 92, 93, 99, 102], "044451": [76, 77, 92, 93, 99, 102], "002861": [76, 77, 92, 93, 99, 102], "025930": [76, 77, 92, 93, 99, 102], "089063": [76, 77, 92, 93, 99, 102], "011595": [76, 77, 92, 93, 99, 102], "034309": [76, 77, 92, 93, 99, 102], "022688": [76, 77, 92, 93, 99, 102], "009362": [76, 77, 92, 93, 99, 102], "005383": [76, 77, 92, 93, 99, 102], "036385": [76, 77, 92, 93, 99, 102], "031988": [76, 77, 92, 93, 99, 102], "046641": [76, 77, 92, 93, 99, 102], "count": [76, 77, 79, 86, 88, 92, 93, 99, 102], "442": [76, 77, 92, 93, 99, 102], "152": [76, 77, 87, 92, 93, 99, 102, 120, 121], "133484": [76, 77, 92, 93, 99, 102], "std": [76, 77, 88, 92, 93, 99, 102, 112], "77": [76, 77, 92, 93, 99, 102, 121], "093005": [76, 77, 92, 93, 99, 102], "min": [76, 77, 88, 92, 93, 99, 102], "25": [76, 77, 78, 88, 92, 93, 99, 102], "87": [76, 77, 92, 93, 99, 102], "140": [76, 77, 86, 92, 93, 99, 102], "500000": [76, 77, 92, 93, 99, 102], "75": [76, 77, 80, 83, 88, 92, 93, 99, 102], "211": [76, 77, 92, 93, 99, 102], "max": [76, 77, 88, 92, 93, 99, 102, 104], "346": [76, 77, 92, 93, 99, 102], "float64": [76, 77, 80, 83, 88, 92, 93, 95, 99, 102], "combin": [76, 77, 78, 92, 93, 98, 102, 120], "data_diabet": [76, 92, 93, 102], "concat": [76, 77, 87, 92, 93, 98, 102], "bp": [76, 77, 92, 93, 99, 102], "s2": [76, 77, 78, 79, 86, 92, 93, 99, 102], "s3": [76, 77, 78, 79, 86, 92, 93, 99, 102], "calcul": 76, "heat": 76, "corr": [76, 93], "xticklabel": 76, "yticklabel": 76, "train_diabet": [76, 92, 93], "test_diabet": [76, 92, 93], "neg_mean_absolute_error": [76, 77, 88, 92, 102], "400": 76, "401": [76, 102], "402": [76, 102], "403": [76, 102], "404": [76, 102], "309": [76, 92, 93], "006136": 76, "003020": 76, "b10eef89b4192178d482d7a1587a248a": [76, 92, 93, 99, 102], "005580": 76, "002958": 76, "005555": 76, "002938": 76, "005513": 76, "002943": 76, "005510": 76, "002945": 76, "test_scor": [76, 77, 79, 80, 83, 86, 92, 93, 94, 95, 102], "45": 76, "444084441470615": 76, "mae": [76, 93], "df_mae": [76, 93], "48": [76, 78, 87], "783874": 76, "47": [76, 83, 89], "573568": 76, "37": 76, "617474": 76, "686852": 76, "558655": 76, "coef_": [76, 99], "sort_valu": 76, "ascend": 76, "inplac": 76, "barh": 76, "color": [76, 77, 86, 98], "blue": 76, "red": 76, "xlabel": [76, 93], "249999999999986": 76, "scatterplot": [76, 86, 88, 93], "v": [76, 93, 105, 109, 120], "2f": [76, 93], "corrcoef": [76, 93], "set_styl": [76, 77, 93], "darkgrid": [76, 77, 93], "scatter": [76, 88, 93], "xmin": [76, 93], "xmax": [76, 93], "get_xlim": [76, 86, 93], "ymin": [76, 93], "ymax": [76, 93], "get_ylim": [76, 86, 93], "ylabel": [76, 93], "01": [76, 81, 83, 88, 90, 93, 94, 110], "verticalalign": [76, 93], "top": [76, 93, 105, 108], "horizontalalign": [76, 93], "right": [76, 93, 94, 105], "fontsiz": [76, 93], "scale": [76, 93, 94, 104, 120], "649999999999999": 76, "347": [76, 102], "35": [76, 78], "791": [76, 80, 81], "plot_example_regress": [76, 81], "leonard": [77, 88, 98], "sass": [77, 88, 98], "l": [77, 78, 79, 86, 88, 92, 94, 98], "math": 77, "41": 77, "689": 77, "690": 77, "some": [77, 78, 79, 86, 87, 105, 107, 110, 112, 119], "outlier": 77, "data_df": 77, "new_df": 77, "145": [77, 86, 87, 93], "150": [77, 87, 112], "590": 77, "580": [77, 93], "597": 77, "595": 77, "600": 77, "reset_index": [77, 78, 79, 86, 94, 98], "00_start": 77, "plot_stratified_kfold_reg": [77, 81], "53": [77, 95], "settingwithcopywarn": 77, "try": [77, 79, 80, 83, 86, 89, 94, 95], "slice": 77, "loc": 77, "row_index": 77, "col_index": 77, "caveat": 77, "pydata": 77, "user_guid": 77, "view": [77, 105], "versu": 77, "bin": 77, "num_split": 77, "num_bin": 77, "floor": 77, "len": [77, 98, 99, 112], "num": 77, "bins_on": 77, "qc": 77, "cut": 77, "tolist": [77, 117], "divid": 77, "linear": [77, 83, 94, 99, 110, 112, 120], "cv_stratifi": [77, 79], "scores_strat": 77, "linreg": [77, 99, 104, 110, 112], "714": 77, "715": 77, "716": 77, "717": 77, "718": 77, "449": 77, "opt": [77, 80], "hostedtoolcach": [77, 80], "11": [77, 78, 79, 80, 83, 86, 89, 102, 107, 110, 112], "x64": [77, 80], "python3": [77, 80], "site": [77, 80], "packag": [77, 80, 105, 107], "_split": 77, "700": 77, "popul": [77, 98], "member": 77, "less": [77, 88, 108], "793": 77, "794": 77, "795": 77, "796": 77, "797": 77, "compar": [77, 83, 98, 105, 112, 120], "two": [77, 78, 80, 83, 86, 87, 88, 89, 93, 95, 98, 99, 102, 105, 110, 112, 120], "With": 77, "df_score": 77, "boxplot": [77, 98], "much": [77, 94], "higher": [77, 98], "were": [77, 78, 79, 86, 87, 98], "swarmplot": [77, 87], "310": [77, 81], "fmri": [78, 79, 86, 94], "bse": 78, "waskom": [78, 79, 86, 94], "m": [78, 79, 86, 94, 109, 120], "frank": [78, 79, 86, 94], "wagner": [78, 79, 86, 94], "adapt": [78, 79, 86, 94], "engag": [78, 79, 86, 94], "cognit": [78, 79, 86, 94], "context": [78, 79, 86, 94], "depend": [78, 79, 86, 94, 107, 116], "cerebr": [78, 79, 86, 94], "cortex": [78, 79, 86, 94], "known": [78, 117, 120], "excel": 78, "spreadsheet": 78, "csv": 78, "ideal": 78, "everyth": [78, 105, 117, 118, 120], "tabul": 78, "organis": [78, 112], "your": [78, 107, 110, 112, 116, 117, 118, 120], "demograph": [78, 112], "diagnost": 78, "behaviour": [78, 108], "manual": [78, 120], "edit": [78, 105, 107], "sure": [78, 86, 105, 107, 109, 112], "readi": [78, 105, 120], "do": [78, 86, 88, 93, 94, 98, 99, 102, 104, 108, 109, 112, 117, 118, 120], "howev": [78, 86, 87, 88, 99, 107, 112, 117, 120], "prune": 78, "fortun": 78, "tool": [78, 105, 116], "deal": [78, 110, 117], "task": [78, 86, 99], "collect": [78, 98], "start": [78, 105, 106, 108, 120], "df_fmri": [78, 79, 86, 94], "subject": [78, 79, 86, 94], "timepoint": [78, 79, 86, 94], "event": [78, 79, 86, 94], "region": [78, 79, 86, 94], "signal": [78, 79, 86, 94], "s13": [78, 79, 86, 94], "18": [78, 79, 86, 89, 94, 110, 112], "stim": [78, 79, 86, 94], "pariet": [78, 79, 86, 94], "017552": [78, 79, 86, 94], "14": [78, 79, 86, 88, 89, 94, 112], "080883": [78, 79, 86, 94], "s12": [78, 79, 86, 94], "081033": [78, 79, 86, 94], "s11": [78, 79, 86, 94], "046134": [78, 79, 86, 94], "s10": [78, 79, 86, 94], "037970": [78, 79, 86, 94], "seen": [78, 120], "pivot": [78, 79, 86, 94], "tabl": [78, 79, 86], "extract": [78, 79, 86], "becom": [78, 120], "identifi": [78, 80, 110, 112], "rule": [78, 104, 120], "t": [78, 83, 86, 119, 120], "duplic": 78, "frontal": [78, 79, 86, 94], "s0": [78, 79, 86, 94], "cue": [78, 79, 86, 94], "007766": [78, 94], "006899": [78, 94], "021452": [78, 94], "039327": [78, 94], "016440": [78, 94], "000300": [78, 94], "021054": [78, 94], "035735": [78, 94], "024296": [78, 94], "033220": [78, 94], "sutil": 78, "For": [78, 80, 83, 88, 93, 99, 104, 105, 110, 117, 120], "place": [78, 105], "scan": 78, "metadata": 78, "31": 78, "29": 78, "43": [78, 83], "28": 78, "34": 78, "scanner": 78, "6": [78, 79, 83, 86, 87, 88, 89, 99, 107, 108, 110], "b": [78, 105, 120], "df_meta": 78, "s7": [78, 79, 86], "s8": [78, 79, 86], "s9": [78, 79, 86], "13": [78, 79, 86, 89, 112], "16": [78, 79, 86, 88, 89], "036739": 78, "131641": 78, "17": [78, 79, 86, 88, 89], "004900": 78, "036362": 78, "030099": 78, "121574": 78, "000643": 78, "051040": 78, "009959": 78, "103513": 78, "532": [78, 79, 86, 94], "suppos": [78, 80, 112], "dure": [78, 79, 86, 110, 112], "There": [78, 105, 120], "009038": 78, "009642": 78, "047859": 78, "026727": 78, "085040": 78, "086399": 78, "069775": 78, "070558": 78, "115321": 78, "154058": 78, "010535": 78, "061817": 78, "034386": 78, "130267": 78, "15": [78, 79, 86, 88, 89, 112], "002170": 78, "048007": 78, "038257": 78, "134828": 78, "004290": 78, "035395": 78, "266": [78, 79, 86, 94, 98], "sinc": [78, 83, 88, 92, 120], "previou": [78, 87, 88, 120], "multiindex": 78, "trick": 78, "underscor": 78, "_": [78, 87, 98, 120], "frontal_cu": 78, "parietal_stim": 78, "511": [78, 81], "run_combine_panda": [78, 81], "groupkfold": 79, "kimia": 79, "nazarzadeh": 79, "necessari": [79, 112, 120], "librari": [79, 108], "38": [79, 80], "937": 79, "infer": [79, 86], "studi": [79, 86, 112], "brain": [79, 86, 108, 110, 112, 116], "condit": [79, 86], "groupbi": [79, 86], "1064": [79, 86], "exactli": [79, 86, 120], "rf": [79, 83, 87, 88, 95, 98, 104], "962": 79, "963": 79, "964": 79, "965": 79, "966": 79, "6841826838300122": 79, "39": 79, "835": 79, "836": 79, "837": 79, "838": 79, "839": 79, "5902255639097744": 79, "322": 79, "323": 79, "324": 79, "325": 79, "326": [79, 81], "327": [79, 112], "6879699248120301": 79, "877": [79, 81], "run_grouped_cv": [79, 81], "626": 80, "three": [80, 83, 87, 89, 95, 98, 105, 107, 108], "isin": [80, 83, 87, 89, 95, 98, 105], "sepal": [80, 83, 89, 95, 98, 120], "length": [80, 83, 89, 95, 98], "width": [80, 83, 89, 95, 98], "petal": [80, 83, 89, 95, 98, 117, 120], "673": 80, "675": 80, "676": 80, "677": 80, "678": 80, "90": [80, 83], "95": [80, 83, 88, 89, 93, 95, 98], "70": [80, 83], "assess": [80, 83, 112], "unbalanc": [80, 83], "df_unbalanc": [80, 83], "20": [80, 83, 89, 98, 112], "value_count": [80, 83], "30": [80, 83, 86, 88, 112], "account": [80, 105, 112], "imbal": 80, "suitabl": [80, 107], "balanced_accuraci": [80, 83], "balanc": 80, "test_balanced_accuraci": [80, 83], "730": 80, "731": 80, "732": 80, "80": [80, 83], "733": 80, "734": 80, "_classif": 80, "2184": 80, "8625": 80, "8678571428571429": 80, "u": [80, 87, 98, 99, 107, 112], "good": [80, 94, 107, 116], "correctli": [80, 105], "precis": 80, "ratio": 80, "tp": 80, "precision_scor": 80, "787": 80, "788": 80, "789": 80, "790": 80, "792": 80, "222": [80, 81], "run_simple_binary_classif": [80, 81], "00": [81, 83, 84, 88, 90, 94, 95, 96, 100, 103], "execut": [81, 84, 90, 96, 100, 103, 105], "auto_examples_00_start": 81, "mb": [81, 84, 90, 96, 100, 103], "01_model_comparison_python": 82, "01_model_comparison_jupyt": 82, "At": [83, 108, 120], "statist": [83, 88, 98], "repeatedstratifiedkfold": [83, 89], "corrected_ttest": 83, "053": 83, "057": 83, "058": 83, "059": 83, "060": 83, "061": 83, "roc_auc": [83, 98], "scores1": 83, "111": 83, "112": 83, "113": 83, "114": 83, "115": 83, "scores2": 83, "452": 83, "453": 83, "454": 83, "455": 83, "456": 83, "third": 83, "kernel": [83, 94, 112, 120], "scores3": 83, "svm__kernel": [83, 94], "svm_linear": 83, "stats_df": 83, "282": [83, 102], "283": [83, 102], "284": 83, "285": 83, "286": 83, "model_2": 83, "val": 83, "correct": 83, "541": 83, "991373": 83, "273086e": 83, "997372": 83, "856025e": 83, "546": 83, "502208": 83, "502348e": 83, "287": 83, "894678": 83, "674595e": 83, "432031": 83, "950933e": 83, "311": 83, "445997": 83, "538296e": 83, "44": [83, 102], "175075": 83, "000000e": [83, 88], "062567": 83, "956618e": 83, "151390": 83, "827413e": 83, "test_roc_auc": [83, 98], "108944": 83, "353309e": 83, "236153": 83, "850917e": 83, "669010": 83, "243310e": 83, "599": [83, 84], "run_simple_model_comparison": [83, 84], "auto_examples_01_model_comparison": 84, "demonstr": [85, 120], "02_inspection_python": 85, "02_inspection_jupyt": 85, "analys": [86, 87, 94, 112], "groupshufflesplit": 86, "037": 86, "062": 86, "063": 86, "064": 86, "065": 86, "066": 86, "7218303650149884": 86, "decod": [86, 112, 116], "look": [86, 88, 93, 99, 104, 110, 117, 118, 120], "claim": [86, 98], "acquir": 86, "randomli": 86, "could": [86, 88, 99, 108, 110, 117, 120], "characterist": 86, "unseen": 86, "whom": 86, "either": [86, 88, 104, 105, 107, 112, 116, 120], "later": [86, 89, 105, 117], "141": 86, "142": 86, "143": 86, "144": [86, 87, 120], "7210526315789474": 86, "visual": [86, 108], "interact": 86, "part": [86, 108, 110, 120], "doe": [86, 105, 116, 120], "raw": [86, 88, 120], "hue": [86, 98], "set_titl": [86, 87, 88], "pre_x": 86, "pre_df": 86, "join": 86, "parietal__": 86, "frontal__": 86, "noth": 86, "scaler": [86, 120], "seem": [86, 94, 98], "quit": [86, 107, 110], "linearli": 86, "clf": 86, "figur": [86, 105], "xlim": 86, "ylim": 86, "xx": 86, "linspac": 86, "yy": 86, "meshgrid": 86, "xy": 86, "vstack": 86, "ravel": 86, "xy_df": 86, "reshap": 86, "contour": 86, "alpha": [86, 110], "linestyl": 86, "boundari": 86, "559": [86, 90], "plot_groupcv_inspect_svm": [86, 90], "148": 87, "149": 87, "151": [87, 121], "intern": [87, 120], "_important_": 87, "caution": 87, "read": [87, 108, 109, 116, 120], "proper": [87, 98, 109, 118], "to_plot": 87, "feature_importances_": [87, 98], "barplot": 87, "tight_layout": [87, 98], "review": [87, 105], "myself": 87, "wander": 87, "about": [87, 112, 118, 120], "entir": [87, 120], "49": [87, 112], "085": 87, "086": [87, 92, 96], "087": 87, "088": 87, "089": 87, "090": 87, "i_fold": [87, 98], "enumer": [87, 98], "this_import": [87, 98], "785": [87, 90], "plot_inspect_random_forest": [87, 90], "make_regress": [88, 110, 112], "pre": [88, 107, 109, 120, 121], "low": [88, 104, 110], "normal": [88, 99, 104, 105, 112, 120, 121], "reduct": 88, "719": 88, "720": 88, "n_inform": 88, "nois": [88, 112], "first_two": 88, "determin": 88, "belong": [88, 99, 120], "x_to_zscor": 88, "summari": 88, "111790": 88, "141618": 88, "023682": 88, "167718": 88, "686170": 88, "977322": 88, "972988": 88, "087946": 88, "895011": 88, "79": [88, 105], "741431": 88, "069985": 88, "772593": 88, "552990": 88, "659172": 88, "204": [88, 102, 103], "293317": 88, "751257": 88, "484100": 88, "759419": 88, "688891": 88, "64": 88, "724008": 88, "206729": 88, "194442": 88, "028152": 88, "174160": 88, "789944": 88, "421885": 88, "724302": 88, "772156": 88, "408321": 88, "392804": 88, "943621": 88, "256723": 88, "383145": 88, "259309": 88, "216": 88, "221085": 88, "explicitli": [88, 112], "declar": 88, "keyword": [88, 110], "argument": [88, 99], "init": 88, "special": 88, "cannot": [88, 120], "tree": [88, 104], "pipeline_cr": [88, 93, 95, 99, 112], "select_vari": [88, 104], "n_compon": [88, 93, 120], "n_estim": 88, "becaus": [88, 99, 112, 118, 120], "creator": [88, 89, 92, 93, 94, 98, 99, 110, 120], "simpli": [88, 105, 110, 112, 120], "did": [88, 94], "hand": [88, 110, 112], "r2": [88, 93, 112], "x_after_pca": 88, "earlier": 88, "x_after_zscor": 88, "high": [88, 110], "pca__pca0": [88, 99], "pca__pca1": [88, 99], "739": 88, "740": 88, "__x_to_zscor": 88, "741": [88, 112], "742": 88, "744": 88, "745": 88, "725696": 88, "582295": 88, "314458": 88, "942935": 88, "977336": 88, "463217": 88, "525139": 88, "219493": 88, "618559": 88, "908592": 88, "395105": 88, "743192": 88, "96": [88, 89, 121], "328111": 88, "670912": 88, "97": [88, 89, 98], "573900": 88, "401304": 88, "98": [88, 89], "918034": 88, "137435": 88, "99": [88, 89], "894566": 88, "357729": 88, "1__": 88, "4__": 88, "013728": 88, "426259": 88, "364686": 88, "944446": 88, "118838": 88, "931848": 88, "004437": 88, "030684": 88, "309092": 88, "523891": 88, "206189": 88, "157667": 88, "099154": 88, "028182": 88, "335538": 88, "252795": 88, "049139": 88, "133702": 88, "240085": 88, "443863": 88, "deviat": [88, 112], "02": [88, 99], "689893e": 88, "387779e": 88, "005038e": 88, "013728e": 88, "010202e": 88, "576015e": 88, "463286e": 88, "763131e": 88, "456486e": 88, "488094e": 88, "018781e": 88, "113700e": 88, "184776e": 88, "859": [88, 90], "plot_preprocess": [88, 90], "shufflesplit": 89, "752": 89, "753": 89, "756": 89, "757": [89, 94], "request": [89, 108], "758": [89, 94], "759": [89, 94], "760": [89, 94, 112], "005763": 89, "003187": 89, "42489ff0163b2f12752440a6b7ef74c7": 89, "005622": 89, "003117": 89, "005495": 89, "003116": 89, "005432": 89, "003122": 89, "005418": 89, "003138": 89, "005470": 89, "003159": 89, "005426": 89, "003115": 89, "005409": 89, "003101": 89, "005431": 89, "003075": 89, "005461": 89, "003110": 89, "003118": 89, "005412": 89, "005416": 89, "003058": 89, "005400": 89, "003102": 89, "005384": 89, "003084": 89, "005442": 89, "003077": 89, "005378": 89, "003137": 89, "005394": 89, "003112": 89, "19": [89, 110], "005414": 89, "003063": 89, "cv_predict": 89, "repeat_0": 89, "repeat_1": 89, "repeat_2": 89, "repeat_3": 89, "_pipelin": 89, "pipelineinspector": 89, "0x7f9af83b1840": 89, "292": [89, 90], "run_binary_inspect_fold": [89, 90], "496": 90, "auto_examples_02_inspect": 90, "03_complex_models_python": 91, "03_complex_models_jupyt": 91, "Then": [92, 99, 105, 120], "lya": 92, "paa": 92, "olivero": 92, "sami": [92, 99, 112, 121], "hamdan": [92, 99, 112, 121], "crucial": [92, 112], "52": [92, 95], "703": 92, "target_cr": 92, "target_pipeline_cr": 92, "0x7f9af82d9660": 92, "723": 92, "724": 92, "725": 92, "726": 92, "727": 92, "005660": 92, "002877": 92, "005088": 92, "005063": 92, "002850": 92, "005022": 92, "002848": 92, "005024": 92, "002833": 92, "51": 92, "51357151914368": 92, "run_apply_to_target": [92, 96], "reduc": [93, 99, 120], "dimension": [93, 99, 110, 120], "subset": 93, "georgio": 93, "antonopoulo": 93, "kaustubh": [93, 121], "r": [93, 102, 105, 107], "patil": [93, 121], "556": 93, "557": 93, "assign": 93, "pca1": 93, "pca2": 93, "pca_feats1": 93, "pca_feats2": 93, "575": 93, "__pca1": 93, "576": 93, "__pca2": 93, "__categor": 93, "0x7f9af843b2e0": 93, "577": 93, "578": 93, "579": 93, "581": 93, "017567": 93, "007934": 93, "016605": 93, "007904": 93, "016450": 93, "007884": 93, "016399": 93, "007891": 93, "016587": 93, "007883": 93, "3107976743678922": 93, "untouch": 93, "data_processed1": 93, "data_processed2": 93, "pca_feats1__pca0": 93, "161": 93, "063175": 93, "133274": 93, "108111": 93, "075741": 93, "085907": 93, "054779": 93, "030464": 93, "033246": 93, "015491": 93, "098172": 93, "033216": 93, "015999": 93, "050783": 93, "032289": 93, "012577": 93, "067737": 93, "013504": 93, "315": [93, 94], "045025": 93, "031454": 93, "010903": 93, "001078": 93, "pca_feats2__pca0": 93, "234716": 93, "012141": 93, "078784": 93, "006290": 93, "026190": 93, "341472": 93, "348168": 93, "269257": 93, "286067": 93, "309025": 93, "362": 93, "472": [93, 96], "run_example_pca_featset": [93, 96], "58": 94, "296": 94, "attempt": 94, "314": 94, "316": 94, "317": 94, "318": 94, "5939164168576971": 94, "optim": [94, 107, 120], "find": [94, 105, 118], "best": [94, 120], "speed": 94, "392": 94, "393": 94, "394": 94, "395": 94, "svm__c": 94, "inner": [94, 121], "396": 94, "397": 94, "588308940222183": 94, "explor": [94, 99], "too": 94, "rbf": 94, "poli": 94, "761": 94, "762": 94, "7087109857168048": 94, "best_params_": 94, "lest": 94, "gamma": 94, "1e": 94, "59": 94, "705": 94, "706": 94, "001": 94, "707": 94, "708": 94, "svm__gamma": 94, "709": 94, "710": 94, "5188855581026275": 94, "happen": 94, "432": 94, "433": 94, "434": 94, "435": 94, "436": 94, "437": 94, "best_estimator_": 94, "_gamma": 94, "159": [94, 96], "run_hyperparameter_tun": [94, 96], "logist": [95, 104, 120], "887": 95, "888": 95, "petal_width": [95, 98, 117, 120], "model_sep": 95, "model_pet": 95, "891": 95, "892": 95, "__sepal": 95, "893": 95, "__petal": 95, "0x7f9af821f610": 95, "0x7f9af821d7b0": 95, "894": 95, "895": 95, "896": 95, "898": 95, "024": 95, "025": 95, "026": 95, "85": 95, "313": [95, 96], "run_stacked_model": [95, 96], "09": 96, "030": 96, "auto_examples_03_complex_model": 96, "relat": [97, 105, 112, 117], "04_confounds_python": 97, "04_confounds_jupyt": 97, "stratifiedbootstrap": 98, "186": [98, 99], "hypothesi": 98, "ml": [98, 108], "classic": 98, "frequentist": 98, "altern": 98, "contrast": 98, "gap": 98, "approach": [98, 110, 120], "confid": 98, "interv": 98, "ci": [98, 109], "abov": [98, 112], "below": [98, 107, 110], "2000": 98, "n_bootstrap": 98, "n_element": 98, "scores_ncr": 98, "190": [98, 99], "191": 98, "192": 98, "193": 98, "194": 98, "next": [98, 107, 117, 120], "again": [98, 112, 120], "tell": [98, 112], "confound_remov": [98, 99, 112], "scores_cr": 98, "06": 98, "__confound": 98, "__featur": 98, "267": 98, "268": 98, "269": 98, "270": 98, "271": 98, "272": 98, "easier": [98, 120], "long": 98, "df_ncr_metric": 98, "df_cr_metric": 98, "df_metric": 98, "catplot": 98, "col": 98, "swarm": 98, "them": [98, 105, 110, 120], "pair": 98, "systemat": 98, "differec": 98, "df_diff_metr": 98, "whisker": 98, "box": 98, "whi": 98, "axhlin": 98, "roc": 98, "auc": 98, "term": 98, "mayb": [98, 116], "percentil": [98, 104], "amount": [98, 108], "But": [98, 99, 117, 118, 120], "point": [98, 105, 107, 112, 120], "ncr_fi": 98, "cr_fi": 98, "feature_import": 98, "dodg": 98, "diff_fi": 98, "axvlin": 98, "928": [98, 100], "plot_confound_removal_classif": [98, 100], "most": [99, 107, 108, 110, 112, 116, 120], "remove_confound": [99, 104], "sometim": [99, 112], "even": [99, 120], "discuss": 99, "df_featur": 99, "furthermor": 99, "consid": [99, 109, 112], "put": [99, 112], "184": [99, 112], "185": 99, "0x7f9af85df940": 99, "feature_nam": 99, "187": 99, "188": 99, "189": 99, "df_deconfound": 99, "assum": 99, "closer": [99, 104], "understand": [99, 112, 116, 120], "achiev": [99, 112, 120], "autoclass": 99, "029271": 99, "057228": 99, "009658": 99, "019424": 99, "012310": 99, "028194": 99, "005874": 99, "047538": 99, "015568": 99, "024667": 99, "061639": 99, "082913": 99, "076494": 99, "039983": 99, "017885": 99, "004736": 99, "036479": 99, "081307": 99, "007659": 99, "025897": 99, "049135": 99, "029380": 99, "000071": 99, "013139": 99, "032449": 99, "032631": 99, "012234": 99, "025295": 99, "037349": 99, "479": 99, "480": 99, "0x7f9b097ca3e0": 99, "481": 99, "482": 99, "483": 99, "484": 99, "df_transform": 99, "pca__pca2": 99, "pca__pca7": 99, "pca__pca8": 99, "014051": 99, "075715": 99, "017395": 99, "008604": 99, "002330": 99, "099883": 99, "062829": 99, "014516": 99, "024022": 99, "002075": 99, "029015": 99, "053253": 99, "032477": 99, "001197": 99, "002579": 99, "035162": 99, "001324": 99, "106807": 99, "006566": 99, "003545": 99, "003951": 99, "025445": 99, "000421": 99, "002095": 99, "000517": 99, "lastli": [99, 112], "801": 99, "802": 99, "803": 99, "804": 99, "805": 99, "806": 99, "032205": 99, "012060": 99, "031665": 99, "012022": 99, "031760": 99, "011985": 99, "031993": 99, "012044": 99, "031759": 99, "012023": 99, "912": [99, 100], "run_return_confound": [99, 100], "08": 100, "840": 100, "auto_examples_04_confound": 100, "07": 100, "extend": 101, "variou": 101, "aspect": [101, 120], "05_customization_python": 101, "05_customization_jupyt": 101, "make_scor": 102, "register_scor": 102, "260": 102, "261": 102, "279": 102, "280": 102, "281": 102, "005911": 102, "002896": 102, "005478": 102, "005456": 102, "002906": 102, "005434": 102, "002891": 102, "005487": 102, "002860": 102, "26465394827188": 102, "thing": [102, 120], "r2_corr": 102, "344": 102, "345": 102, "test_neg_mean_absolute_error": 102, "test_r2_corr": 102, "264654": 102, "486498": 102, "take": [102, 120], "def": 102, "pearson_scor": 102, "squeez": 102, "405": 102, "run_custom_scorers_regress": [102, 103], "auto_examples_05_custom": 103, "descript": [104, 105, 120], "give": [104, 112, 118], "short": 104, "underli": [104, 112], "link": [104, 105, 108, 109, 118, 120], "unit": 104, "standardscal": 104, "scaler_robust": 104, "median": 104, "iqr": 104, "robustscal": 104, "scaler_minmax": 104, "minmaxscal": 104, "scaler_maxab": 104, "maxabsscal": 104, "scaler_norm": 104, "norm": 104, "scaler_quantil": 104, "uniform": [104, 121], "robust": 104, "quantiletransform": 104, "scaler_pow": 104, "gaussianis": 104, "powertransform": 104, "select_univari": 104, "genericunivariateselect": 104, "select_percentil": 104, "rank": 104, "selectpercentil": 104, "select_k": 104, "selectkbest": 104, "select_fdr": 104, "fdr": 104, "selectfdr": 104, "select_fpr": 104, "fpr": 104, "selectfpr": 104, "select_fw": 104, "fwe": 104, "selectfw": 104, "variancethreshold": 104, "drop_column": 104, "dropcolumn": 104, "change_column_typ": 104, "changecolumntyp": 104, "filtercolumn": 104, "princip": [104, 120], "cbpm": [104, 108, 113, 121], "connectom": [104, 108, 113], "svc": 104, "svr": 104, "randomforestclassifi": 104, "randomforestregressor": 104, "extratreesclassifi": 104, "extratreesregressor": 104, "adaboost": 104, "adaboostclassifi": 104, "adaboostregressor": 104, "bag": 104, "baggingclassifi": 104, "baggingregressor": 104, "gradientboost": 104, "gradient": 104, "boost": 104, "gradientboostingclassifi": 104, "gradientboostingregressor": 104, "stackingclassifi": 104, "stackingregressor": 104, "gauss": 104, "gaussianprocessclassifi": 104, "gaussianprocessregressor": 104, "logit": 104, "aka": 104, "maxent": 104, "logisticregress": 104, "logitcv": 104, "logisticregressioncv": 104, "l2": 104, "ridgeclassifi": 104, "ridgecv": 104, "built": [104, 105, 108, 120], "ridgeclassifiercv": 104, "sgd": 104, "minim": 104, "empir": 104, "loss": [104, 112], "sgdclassifi": 104, "sgdregressor": 104, "nb_bernoulli": 104, "multivari": 104, "bernoulli": 104, "bernoullinb": 104, "nb_categor": 104, "categoricalnb": 104, "nb_complement": 104, "complementnb": 104, "nb_gaussian": 104, "gaussiannb": 104, "nb_multinomi": 104, "multinomi": 104, "multinomialnb": 104, "dynamicselect": [104, 121], "dummyclassifi": 104, "dummyregressor": 104, "accord": [105, 110, 121], "guidelin": 105, "folder": [105, 107], "clone": [105, 107], "git": [105, 109], "com": [105, 107, 116], "omit": 105, "highli": 105, "recommend": [105, 107], "interfer": 105, "project": 105, "venv": [105, 107], "conda": [105, 107], "env": [105, 107], "within": [105, 110, 117, 120], "stage": 105, "pip": [105, 107], "cd": [105, 107], "txt": [105, 107], "mode": [105, 107], "setup": [105, 108, 118], "histori": [105, 107], "nevertheless": [105, 107, 120], "_version": [105, 107], "stash": [105, 107], "forget": [105, 107], "local": 105, "issu": [105, 109, 121], "address": 105, "idea": 105, "merg": [105, 109], "fix": [105, 121], "close": [105, 109], "permiss": 105, "click": [105, 118], "button": 105, "corner": 105, "onc": [105, 109], "usernam": 105, "fraimondo": 105, "remot": 105, "current": [105, 108], "latest": [105, 109, 121], "checkout": [105, 109], "rebas": [105, 109], "command": 105, "branch_nam": 105, "prefer": [105, 112], "editor": 105, "line": 105, "inc": [105, 109], "briefli": 105, "made": [105, 118], "yourself": 105, "contributor": 105, "workflow": [105, 110, 112, 117, 118, 120], "pr": [105, 109], "style": 105, "flake8": 105, "spell": 105, "codespel": 105, "pytest": 105, "open": [105, 109], "_build": 105, "situat": 105, "clean": [105, 107], "rerun": 105, "fail": 105, "back": 105, "happi": 105, "navig": 105, "fill": [105, 120], "contact": 105, "manitain": 105, "who": 105, "suggest": [105, 108], "everyon": 105, "releas": [105, 121], "displai": 105, "sub": 105, "directori": [105, 107], "advanc": 105, "plot_": 105, "run_": 105, "dependend": 105, "block": 105, "comment": 105, "direct": 105, "rst": [105, 109, 119], "rest": 105, "render": 105, "emb": 105, "shall": 105, "preced": 105, "0rc1": 107, "bokeh": 107, "panel": 107, "0b1": 107, "although": 107, "strongli": 107, "virtual": 107, "environ": [107, 108], "help": [107, 108, 112, 116, 120], "promin": 107, "improv": 107, "therefor": [107, 110, 112, 117, 120], "oftentim": 107, "newest": 107, "sens": 107, "aim": [107, 108, 120], "usag": [107, 120], "miss": [107, 121], "yet": [107, 117], "offici": 107, "publish": [107, 109], "pypi": [107, 109], "OR": 107, "testpypi": [107, 109], "url": 107, "choic": 107, "switch": 107, "commit": [107, 109], "orient": 108, "aml": 108, "institut": 108, "neurosci": [108, 110], "medicin": 108, "inm": 108, "thought": [108, 120], "research": [108, 110, 112], "simpler": 108, "abstract": 108, "power": [108, 116], "minor": [108, 109], "flexibilii": 108, "video": 108, "tutori": 108, "offer": [108, 117], "essenti": 108, "benefit": 108, "therebi": 108, "avoid": [108, 112, 116], "nice": [108, 117, 120], "todo": 108, "bett": 108, "magic": [108, 118], "docu": 108, "runcv": 108, "instal": [108, 121], "deeper": [108, 118], "topic": [108, 118], "hyper": [108, 113, 120], "overview": [108, 120], "contribut": 108, "develop": [108, 109, 121], "pull": [108, 109], "write": [108, 120], "maintain": 108, "major": 109, "micro": 109, "devn": 109, "distanc": 109, "setuptools_scm": 109, "plugin": 109, "tag": 109, "increment": [109, 120], "segment": 109, "push": 109, "mileston": 109, "reach": 109, "renam": 109, "whats_new": 109, "sync": 109, "branch": 109, "vx": 109, "system": 109, "setuptools_scm_debug": 109, "dir": 109, "dist": 109, "applic": [110, 112], "neuroimag": [110, 112], "typic": 110, "problemat": 110, "due": 110, "curs": 110, "especi": 110, "recent": 110, "propos": 110, "fluid": 110, "intellig": 110, "sustain": 110, "attent": 110, "connect": [110, 112], "nutshel": 110, "These": 110, "summar": [110, 116], "subsequ": 110, "commonli": [110, 120], "principl": [110, 120], "apporach": 110, "leverag": 110, "to_list": 110, "cbpm_pipeline_cr": 110, "final_model": 110, "customis": 110, "increas": 110, "noteworthi": 110, "sign": 110, "spearmanr": 110, "guess": 110, "spearman": 110, "func": 110, "xilin": 110, "individu": 110, "behavior": [110, 112, 121], "nat": 110, "protoc": 110, "2017": [110, 112], "mar": [110, 112], "506": 110, "518": 110, "emili": 110, "fingerprint": 110, "2015": 110, "nov": 110, "1664": 110, "71": 110, "rosenberg": 110, "monica": 110, "neuromark": 110, "whole": 110, "jan": [110, 112], "165": 110, "ultim": 112, "real": 112, "world": 112, "scenario": [112, 117, 120], "relationship": 112, "un": 112, "observ": 112, "effect": 112, "potenti": 112, "often": [112, 120], "similarli": 112, "veri": [112, 116, 117, 120], "rather": 112, "jointli": 112, "prevent": 112, "laid": 112, "rel": 112, "littl": 112, "involv": 112, "simul": 112, "artifici": [112, 120], "normal_dist_conf_on": 112, "normal_dist_conf_two": 112, "noise_conf_on": 112, "rand": 112, "noise_conf_two": 112, "multipli": 112, "factor": 112, "confound_on": 112, "confound_two": 112, "common": 112, "human": 112, "readabl": 112, "feature_": 112, "confound_1": 112, "confound_2": 112, "my_target": 112, "distinguish": [112, 120], "predictor": 112, "accordingli": [112, 116], "think": 112, "parametris": 112, "initialis": 112, "cours": 112, "adjust": 112, "insert": 112, "fashion": 112, "reason": 112, "further": 112, "consider": 112, "why": [112, 118], "mitig": 112, "bia": 112, "accur": 112, "On": 112, "argu": 112, "appropri": 112, "valuabl": 112, "difficult": 112, "challeng": 112, "ineffect": 112, "fact": 112, "collid": 112, "spuriou": 112, "evid": 112, "leak": 112, "bias": 112, "care": [112, 120], "question": 112, "thorough": 112, "strength": 112, "limit": 112, "techniqu": [112, 120], "rao": 112, "anil": 112, "presenc": 112, "volum": 112, "april": 112, "snoek": 112, "luka": 112, "januari": 112, "2019": 112, "he": 112, "tong": 112, "neural": [112, 120], "network": [112, 120], "206": 112, "februari": 112, "2020": 112, "116276": 112, "practic": 112, "knowledg": 112, "discoveri": 112, "databas": 112, "scienc": [112, 116], "demo": 112, "track": 112, "2021": 112, "12461": 112, "chyzhyk": 112, "darya": 112, "biomark": 112, "gigasci": 112, "2022": 112, "holmberg": 112, "mathia": 112, "jama": 112, "1282": 112, "1283": 112, "1001": 112, "1820": 112, "arxiv": 112, "2210": 112, "09232": 112, "revis": 112, "27": 112, "oct": 112, "ressourc": 116, "cite": 116, "www": 116, "sciencedirect": 116, "articl": 116, "pii": 116, "s105381191630595x": 116, "paper": 116, "particularli": 116, "primer": 116, "concept": 116, "imag": 116, "natur": 116, "s41746": 116, "022": 116, "00592": 116, "improp": 116, "s1053811917305311": 116, "scikitlearn": 116, "cross_valid": [116, 118], "importantli": [116, 120], "manner": [116, 117, 120], "among": 116, "exact": 116, "wiht": 117, "iloc": 117, "far": [117, 120], "would": 117, "come": [117, 120], "costum": 117, "handi": [117, 120], "depth": 117, "_petal_": [117, 120], "some_nam": 117, "saw": 117, "focu": 117, "backbon": 118, "goe": 118, "via": 118, "along": 118, "chapter": 118, "essenc": 118, "familiar": 118, "fanci": 118, "stuff": 118, "pick": 118, "content": 119, "run_cv": 119, "extern": 119, "skl": 119, "autom": 120, "pipe": 120, "fed": 120, "modifi": 120, "_fitting_": 120, "_predicts_": 120, "friendli": 120, "safe": 120, "notic": 120, "contin": 120, "discret": 120, "explicit": 120, "voil\u00e0": 120, "resembl": 120, "never": 120, "wish": 120, "usual": 120, "examplar": 120, "decomposit": 120, "previous": 120, "intranspar": 120, "simplifi": 120, "neat": 120, "straightforward": 120, "desir": 120, "awesom": 120, "cover": 120, "jump": 120, "aren": 120, "shouldn": 120, "ye": 120, "turn": 120, "save": 120, "_configur": 120, "experi": 120, "similar": 120, "heurist": 120, "thumb": 120, "_tuned_": 120, "rate": 120, "sigma": 120, "with_mean": 120, "basi": 120, "comma": 120, "wonder": 120, "besid": 120, "straight": 120, "forward": 120, "definit": 120, "exemplarili": 120, "_pca_": 120, "_iris_": 120, "slightli": 120, "receiv": 120, "therfor": 120, "ot": 120, "ref": 120, "transfom": 120, "cann": 120, "targettransfomr": 120, "creatro": 120, "pipelincreagor": 120, "target_preprocess": 120, "corss": 120, "boser": 120, "guyon": 120, "vapnik": 120, "margin": 120, "colt": 120, "92": 120, "proceed": 120, "fifth": 120, "annual": 120, "workshop": 120, "theori": 120, "1992": 120, "jul": 120, "170": 121, "bump": 121, "minimum": 121, "fede": 121, "refactor": 121, "capabl": 121, "face": 121, "create_pipelin": 121, "repeatedstratifiedgroupskfold": 121, "tranform_until": 121, "63": 121, "register_model": 121, "105": 121, "instruct": 121, "94": 121, "24": 121, "108": 121, "multiprocess": 121, "nos": 121, "extendeddataframepipelin": 121, "135": 121, "122": 121, "surround": 121, "deprec": 121, "146": 121}, "objects": {"julearn": [[1, 0, 1, "", "PipelineCreator"], [2, 0, 1, "", "TargetPipelineCreator"], [66, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [65, 3, 0, "-", "inspect"], [67, 3, 0, "-", "model_selection"], [68, 3, 0, "-", "models"], [69, 3, 0, "-", "pipeline"], [70, 3, 0, "-", "prepare"], [29, 5, 1, "", "run_cross_validation"], [71, 3, 0, "-", "scoring"], [72, 3, 0, "-", "transformers"], [73, 3, 0, "-", "utils"]], "julearn.PipelineCreator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "add"], [1, 1, 1, "", "from_list"], [1, 1, 1, "", "has_model"], [1, 2, 1, "", "steps"], [1, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "to_pipeline"]], "julearn.base": [[3, 0, 1, "", "ColumnTypes"], [4, 4, 1, "", "ColumnTypesLike"], [5, 0, 1, "", "JuBaseEstimator"], [6, 0, 1, "", "JuTransformer"], [7, 0, 1, "", "WrapModel"], [8, 5, 1, "", "change_column_type"], [9, 5, 1, "", "ensure_column_types"], [10, 5, 1, "", "get_column_type"], [11, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "copy"], [3, 2, 1, "", "pattern"], [3, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "filter_columns"], [5, 1, 1, "", "get_apply_to"], [5, 1, 1, "", "get_needed_types"], [5, 1, 1, "", "get_params"], [5, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "fit_transform"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_output"], [6, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "classes_"], [7, 1, 1, "", "decision_function"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "predict_log_proba"], [7, 1, 1, "", "predict_proba"], [7, 1, 1, "", "score"], [7, 1, 1, "", "set_params"]], "julearn.inspect": [[12, 5, 1, "", "preprocess"]], "julearn.model_selection": [[13, 0, 1, "", "RepeatedStratifiedGroupsKFold"], [14, 0, 1, "", "StratifiedBootstrap"], [15, 0, 1, "", "StratifiedGroupsKFold"], [16, 5, 1, "", "get_searcher"], [17, 5, 1, "", "list_searchers"], [18, 5, 1, "", "register_searcher"], [19, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.RepeatedStratifiedGroupsKFold": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_n_splits"], [13, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "get_n_splits"], [14, 1, 1, "", "split"]], "julearn.model_selection.StratifiedGroupsKFold": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "get_n_splits"], [15, 1, 1, "", "split"]], "julearn.models.dynamic": [[20, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "fit"], [20, 1, 1, "", "get_params"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_proba"], [20, 1, 1, "", "score"], [20, 1, 1, "", "set_params"]], "julearn.models": [[21, 5, 1, "", "get_model"], [22, 5, 1, "", "list_models"], [23, 5, 1, "", "register_model"], [24, 5, 1, "", "reset_model_register"]], "julearn.pipeline": [[25, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[25, 1, 1, "", "__init__"], [25, 1, 1, "", "can_inverse_transform"], [25, 1, 1, "", "fit"], [25, 1, 1, "", "fit_transform"], [25, 1, 1, "", "inverse_transform"], [25, 2, 1, "", "needed_types"], [25, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[26, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[26, 1, 1, "", "__init__"], [26, 4, 1, "", "apply_to"], [26, 4, 1, "", "estimator"], [26, 4, 1, "", "name"], [26, 4, 1, "", "needed_types"], [26, 4, 1, "", "params_to_tune"], [26, 4, 1, "", "row_select_col_type"], [26, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[27, 5, 1, "", "check_consistency"], [28, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[30, 5, 1, "", "check_scoring"], [31, 5, 1, "", "get_scorer"], [32, 5, 1, "", "list_scorers"], [71, 3, 0, "-", "metrics"], [34, 5, 1, "", "register_scorer"], [35, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[33, 5, 1, "", "r2_corr"]], "julearn.transformers": [[36, 0, 1, "", "CBPM"], [37, 0, 1, "", "ChangeColumnTypes"], [38, 0, 1, "", "DropColumns"], [39, 0, 1, "", "FilterColumns"], [40, 0, 1, "", "JuColumnTransformer"], [41, 0, 1, "", "SetColumnTypes"], [43, 5, 1, "", "get_transformer"], [44, 5, 1, "", "list_transformers"], [45, 5, 1, "", "register_transformer"], [46, 5, 1, "", "reset_transformer_register"], [72, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[36, 1, 1, "", "__init__"], [36, 1, 1, "", "aggregate"], [36, 1, 1, "", "fit"], [36, 1, 1, "", "fit_transform"], [36, 1, 1, "", "get_feature_names_out"], [36, 1, 1, "", "get_params"], [36, 1, 1, "", "set_output"], [36, 1, 1, "", "set_params"], [36, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[37, 1, 1, "", "__init__"], [37, 1, 1, "", "filter_columns"], [37, 1, 1, "", "fit"], [37, 1, 1, "", "fit_transform"], [37, 1, 1, "", "get_apply_to"], [37, 1, 1, "", "get_feature_names_out"], [37, 1, 1, "", "get_needed_types"], [37, 1, 1, "", "get_params"], [37, 1, 1, "", "set_output"], [37, 1, 1, "", "set_params"], [37, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[38, 1, 1, "", "__init__"], [38, 1, 1, "", "filter_columns"], [38, 1, 1, "", "fit"], [38, 1, 1, "", "fit_transform"], [38, 1, 1, "", "get_apply_to"], [38, 1, 1, "", "get_needed_types"], [38, 1, 1, "", "get_params"], [38, 1, 1, "", "get_support"], [38, 1, 1, "", "set_output"], [38, 1, 1, "", "set_params"], [38, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[39, 1, 1, "", "__init__"], [39, 1, 1, "", "filter_columns"], [39, 1, 1, "", "fit"], [39, 1, 1, "", "fit_transform"], [39, 1, 1, "", "get_apply_to"], [39, 1, 1, "", "get_feature_names_out"], [39, 1, 1, "", "get_needed_types"], [39, 1, 1, "", "get_params"], [39, 1, 1, "", "set_output"], [39, 1, 1, "", "set_params"], [39, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[40, 1, 1, "", "__init__"], [40, 1, 1, "", "filter_columns"], [40, 1, 1, "", "fit"], [40, 1, 1, "", "fit_transform"], [40, 1, 1, "", "get_apply_to"], [40, 1, 1, "", "get_feature_names_out"], [40, 1, 1, "", "get_needed_types"], [40, 1, 1, "", "get_params"], [40, 1, 1, "", "set_output"], [40, 1, 1, "", "set_params"], [40, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[41, 1, 1, "", "__init__"], [41, 1, 1, "", "filter_columns"], [41, 1, 1, "", "fit"], [41, 1, 1, "", "fit_transform"], [41, 1, 1, "", "get_apply_to"], [41, 1, 1, "", "get_feature_names_out"], [41, 1, 1, "", "get_needed_types"], [41, 1, 1, "", "get_params"], [41, 1, 1, "", "set_output"], [41, 1, 1, "", "set_params"], [41, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[42, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[42, 1, 1, "", "__init__"], [42, 1, 1, "", "filter_columns"], [42, 1, 1, "", "fit"], [42, 1, 1, "", "fit_transform"], [42, 1, 1, "", "get_apply_to"], [42, 1, 1, "", "get_feature_names_out"], [42, 1, 1, "", "get_needed_types"], [42, 1, 1, "", "get_params"], [42, 1, 1, "", "get_support"], [42, 1, 1, "", "set_output"], [42, 1, 1, "", "set_params"], [42, 1, 1, "", "transform"]], "julearn.transformers.target": [[47, 0, 1, "", "JuTargetTransformer"], [48, 0, 1, "", "JuTransformedTargetModel"], [49, 0, 1, "", "TargetConfoundRemover"], [50, 0, 1, "", "TransformedTargetWarning"], [51, 5, 1, "", "get_target_transformer"], [52, 5, 1, "", "list_target_transformers"], [53, 5, 1, "", "register_target_transformer"], [54, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[48, 1, 1, "", "__init__"], [48, 2, 1, "", "classes_"], [48, 1, 1, "", "decision_function"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "predict"], [48, 1, 1, "", "predict_proba"], [48, 1, 1, "", "set_params"]], "julearn.transformers.target.TargetConfoundRemover": [[49, 1, 1, "", "__init__"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "fit_transform"], [49, 2, 1, "", "needed_types"], [49, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[50, 1, 1, "", "__init__"], [50, 4, 1, "", "args"], [50, 1, 1, "", "with_traceback"]], "julearn.utils": [[55, 5, 1, "", "configure_logging"], [56, 4, 1, "", "logger"], [57, 5, 1, "", "raise_error"], [73, 3, 0, "-", "typing"], [63, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[58, 4, 1, "", "EstimatorLike"], [59, 0, 1, "", "EstimatorLikeFit1"], [60, 0, 1, "", "EstimatorLikeFit2"], [61, 0, 1, "", "EstimatorLikeFity"], [62, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[59, 1, 1, "", "__init__"], [59, 1, 1, "", "fit"], [59, 1, 1, "", "get_params"], [59, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[60, 1, 1, "", "__init__"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "get_params"], [60, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[61, 1, 1, "", "__init__"], [61, 1, 1, "", "fit"], [61, 1, 1, "", "get_params"], [61, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[62, 1, 1, "", "__init__"], [62, 1, 1, "", "fit"], [62, 1, 1, "", "get_apply_to"], [62, 1, 1, "", "get_needed_types"], [62, 1, 1, "", "get_params"], [62, 1, 1, "", "set_params"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 110], "julearn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 105, 108, 109, 110, 112, 120], "pipelinecr": [1, 120], "exampl": [1, 2, 12, 14, 15, 29, 34, 55, 105, 106], "us": [1, 2, 12, 14, 15, 29, 34, 55, 99, 112], "targetpipelinecr": 2, "columntyp": 3, "columntypeslik": 4, "jubaseestim": 5, "jutransform": 6, "wrapmodel": 7, "change_column_typ": 8, "ensure_column_typ": 9, "get_column_typ": 10, "make_type_selector": 11, "inspect": [12, 65, 85, 86, 87, 89, 114], "preprocess": [12, 88, 120], "model_select": [13, 14, 15, 16, 17, 18, 19], "repeatedstratifiedgroupskfold": 13, "stratifiedbootstrap": 14, "stratifiedgroupskfold": 15, "get_search": 16, "list_search": 17, "register_search": 18, "reset_searcher_regist": 19, "model": [20, 21, 22, 23, 24, 67, 68, 82, 83, 86, 87, 91, 98, 104, 110, 114, 115, 119], "dynam": [20, 104], "dynamicselect": 20, "get_model": 21, "list_model": 22, "register_model": 23, "reset_model_regist": 24, "pipelin": [25, 26, 69, 104, 120], "jutargetpipelin": 25, "pipeline_cr": 26, "step": [26, 104], "prepar": [27, 28, 70], "check_consist": 27, "prepare_input_data": 28, "run_cross_valid": [29, 108, 116, 117], "score": [30, 31, 32, 33, 34, 35, 71, 92, 102], "check_scor": 30, "get_scor": 31, "list_scor": 32, "metric": [33, 71], "r2_corr": 33, "register_scor": 34, "reset_scorer_regist": 35, "transform": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 72, 92, 104], "cbpm": [36, 110], "changecolumntyp": 37, "dropcolumn": 38, "filtercolumn": 39, "jucolumntransform": 40, "setcolumntyp": 41, "confound_remov": 42, "confoundremov": 42, "get_transform": 43, "list_transform": 44, "register_transform": 45, "reset_transformer_regist": 46, "target": [47, 48, 49, 50, 51, 52, 53, 54, 72, 92, 112, 120], "jutargettransform": 47, "jutransformedtargetmodel": 48, "targetconfoundremov": 49, "transformedtargetwarn": 50, "get_target_transform": 51, "list_target_transform": 52, "register_target_transform": 53, "reset_target_transformer_regist": 54, "util": [55, 56, 57, 58, 59, 60, 61, 62, 63, 73], "configure_log": 55, "logger": 56, "raise_error": 57, "type": [58, 59, 60, 61, 62, 73, 117, 120], "estimatorlik": 58, "estimatorlikefit1": 59, "estimatorlikefit2": 60, "estimatorlikef": 61, "juestimatorlik": 62, "warn_with_log": 63, "refer": [64, 78, 79, 86, 94, 110, 112, 120], "main": 66, "api": [66, 121], "select": [67, 104, 113], "start": [74, 107], "multiclass": 75, "classif": [75, 80, 95], "regress": [76, 77, 93, 102, 112], "analysi": [76, 77, 93], "stratifi": 77, "k": 77, "fold": [77, 89], "cv": [77, 79], "work": 78, "panda": 78, "from": [78, 112], "long": 78, "wide": 78, "format": 78, "merg": 78, "join": 78, "data": [78, 117], "frame": 78, "reshap": 78, "more": 78, "complex": [78, 91], "group": 79, "deal": [79, 86], "cross": [79, 86, 112, 116, 120], "valid": [79, 86, 112, 116, 120], "techniqu": [79, 86], "simpl": [80, 83], "binari": 80, "comput": [81, 84, 90, 96, 100, 103], "time": [81, 84, 90, 96, 100, 103], "comparison": [82, 83, 98], "svm": 86, "random": 87, "forest": 87, "variabl": [87, 92], "import": 87, "varianc": 88, "threshold": 88, "zscore": 88, "pca": 88, "wise": 89, "predict": [89, 110], "z": 92, "tune": [94, 111], "hyperparamet": [94, 120], "stack": [95, 115], "confound": [97, 98, 99, 112], "remov": [98, 99, 112], "return": 99, "typic": 99, "case": 99, "custom": [101, 102, 104], "function": 102, "overview": 104, "avail": 104, "scaler": 104, "featur": [104, 112, 117, 120], "datafram": 104, "oper": 104, "decomposit": 104, "estim": 104, "support": 104, "vector": 104, "machin": 104, "ensembl": 104, "gaussian": 104, "process": 104, "linear": 104, "naiv": 104, "bay": 104, "dummi": 104, "contribut": 105, "set": 105, "up": 105, "develop": [105, 107], "environ": 105, "download": 105, "sourc": 105, "code": 105, "creat": 105, "virtual": 105, "instal": [105, 107], "requir": [105, 107], "pull": 105, "request": 105, "fork": 105, "github": 105, "repositori": [105, 107], "branch": 105, "your": 105, "modif": 105, "do": 105, "chang": [105, 121], "commit": 105, "push": 105, "test": 105, "build": 105, "document": [105, 108], "write": 105, "content": [106, 108, 113], "get": 107, "setup": 107, "suggest": 107, "latest": 107, "stabl": 107, "releas": [107, 109], "version": [107, 109], "local": 107, "git": 107, "welcom": 108, "": [108, 121], "what": [108, 118, 121], "i": [108, 112], "why": [108, 116], "backbon": 108, "tabl": [108, 113], "indic": 108, "maintain": 109, "new": [109, 121], "connectom": 110, "hyper": 111, "paramet": 111, "consist": 112, "should": 112, "deeper": 113, "topic": 113, "The": 116, "essenc": 116, "input": 117, "give": 117, "column": 117, "specif": [117, 120], "you": 118, "realli": 118, "need": 118, "know": 118, "evalu": 119, "basic": 120, "made": 120, "easi": 120, "how": 120, "specifi": 120, "appli": 120, "onli": 120, "certain": 120, "current": 121, "0": 121, "2": 121, "6": 121, "dev": 121, "enhanc": 121, "bug": 121, "5": 121}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Base": [[0, "module-julearn.base"]], "julearn.PipelineCreator": [[1, "julearn-pipelinecreator"]], "Examples using julearn.PipelineCreator": [[1, "examples-using-julearn-pipelinecreator"]], "julearn.TargetPipelineCreator": [[2, "julearn-targetpipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[2, "examples-using-julearn-targetpipelinecreator"]], "julearn.base.ColumnTypes": [[3, "julearn-base-columntypes"]], "julearn.base.ColumnTypesLike": [[4, "julearn-base-columntypeslike"]], "julearn.base.JuBaseEstimator": [[5, "julearn-base-jubaseestimator"]], "julearn.base.JuTransformer": [[6, "julearn-base-jutransformer"]], "julearn.base.WrapModel": [[7, "julearn-base-wrapmodel"]], "julearn.base.change_column_type": [[8, "julearn-base-change-column-type"]], "julearn.base.ensure_column_types": [[9, "julearn-base-ensure-column-types"]], "julearn.base.get_column_type": [[10, "julearn-base-get-column-type"]], "julearn.base.make_type_selector": [[11, "julearn-base-make-type-selector"]], "julearn.inspect.preprocess": [[12, "julearn-inspect-preprocess"]], "Examples using julearn.inspect.preprocess": [[12, "examples-using-julearn-inspect-preprocess"]], "julearn.model_selection.RepeatedStratifiedGroupsKFold": [[13, "julearn-model-selection-repeatedstratifiedgroupskfold"]], "julearn.model_selection.StratifiedBootstrap": [[14, "julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[14, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "julearn.model_selection.StratifiedGroupsKFold": [[15, "julearn-model-selection-stratifiedgroupskfold"]], "Examples using julearn.model_selection.StratifiedGroupsKFold": [[15, "examples-using-julearn-model-selection-stratifiedgroupskfold"]], "julearn.model_selection.get_searcher": [[16, "julearn-model-selection-get-searcher"]], "julearn.model_selection.list_searchers": [[17, "julearn-model-selection-list-searchers"]], "julearn.model_selection.register_searcher": [[18, "julearn-model-selection-register-searcher"]], "julearn.model_selection.reset_searcher_register": [[19, "julearn-model-selection-reset-searcher-register"]], "julearn.models.dynamic.DynamicSelection": [[20, "julearn-models-dynamic-dynamicselection"]], "julearn.models.get_model": [[21, "julearn-models-get-model"]], "julearn.models.list_models": [[22, "julearn-models-list-models"]], "julearn.models.register_model": [[23, "julearn-models-register-model"]], "julearn.models.reset_model_register": [[24, "julearn-models-reset-model-register"]], "julearn.pipeline.JuTargetPipeline": [[25, "julearn-pipeline-jutargetpipeline"]], "julearn.pipeline.pipeline_creator.Step": [[26, "julearn-pipeline-pipeline-creator-step"]], "julearn.prepare.check_consistency": [[27, "julearn-prepare-check-consistency"]], "julearn.prepare.prepare_input_data": [[28, "julearn-prepare-prepare-input-data"]], "julearn.run_cross_validation": [[29, "julearn-run-cross-validation"]], "Examples using julearn.run_cross_validation": [[29, "examples-using-julearn-run-cross-validation"]], "julearn.scoring.check_scoring": [[30, "julearn-scoring-check-scoring"]], "julearn.scoring.get_scorer": [[31, "julearn-scoring-get-scorer"]], "julearn.scoring.list_scorers": [[32, "julearn-scoring-list-scorers"]], "julearn.scoring.metrics.r2_corr": [[33, "julearn-scoring-metrics-r2-corr"]], "julearn.scoring.register_scorer": [[34, "julearn-scoring-register-scorer"]], "Examples using julearn.scoring.register_scorer": [[34, "examples-using-julearn-scoring-register-scorer"]], "julearn.scoring.reset_scorer_register": [[35, "julearn-scoring-reset-scorer-register"]], "julearn.transformers.CBPM": [[36, "julearn-transformers-cbpm"]], "julearn.transformers.ChangeColumnTypes": [[37, "julearn-transformers-changecolumntypes"]], "julearn.transformers.DropColumns": [[38, "julearn-transformers-dropcolumns"]], "julearn.transformers.FilterColumns": [[39, "julearn-transformers-filtercolumns"]], "julearn.transformers.JuColumnTransformer": [[40, "julearn-transformers-jucolumntransformer"]], "julearn.transformers.SetColumnTypes": [[41, "julearn-transformers-setcolumntypes"]], "julearn.transformers.confound_remover.ConfoundRemover": [[42, "julearn-transformers-confound-remover-confoundremover"]], "julearn.transformers.get_transformer": [[43, "julearn-transformers-get-transformer"]], "julearn.transformers.list_transformers": [[44, "julearn-transformers-list-transformers"]], "julearn.transformers.register_transformer": [[45, "julearn-transformers-register-transformer"]], "julearn.transformers.reset_transformer_register": [[46, "julearn-transformers-reset-transformer-register"]], "julearn.transformers.target.JuTargetTransformer": [[47, "julearn-transformers-target-jutargettransformer"]], "julearn.transformers.target.JuTransformedTargetModel": [[48, "julearn-transformers-target-jutransformedtargetmodel"]], "julearn.transformers.target.TargetConfoundRemover": [[49, "julearn-transformers-target-targetconfoundremover"]], "julearn.transformers.target.TransformedTargetWarning": [[50, "julearn-transformers-target-transformedtargetwarning"]], "julearn.transformers.target.get_target_transformer": [[51, "julearn-transformers-target-get-target-transformer"]], "julearn.transformers.target.list_target_transformers": [[52, "julearn-transformers-target-list-target-transformers"]], "julearn.transformers.target.register_target_transformer": [[53, "julearn-transformers-target-register-target-transformer"]], "julearn.transformers.target.reset_target_transformer_register": [[54, "julearn-transformers-target-reset-target-transformer-register"]], "julearn.utils.configure_logging": [[55, "julearn-utils-configure-logging"]], "Examples using julearn.utils.configure_logging": [[55, "examples-using-julearn-utils-configure-logging"]], "julearn.utils.logger": [[56, "julearn-utils-logger"]], "julearn.utils.raise_error": [[57, "julearn-utils-raise-error"]], "julearn.utils.typing.EstimatorLike": [[58, "julearn-utils-typing-estimatorlike"]], "julearn.utils.typing.EstimatorLikeFit1": [[59, "julearn-utils-typing-estimatorlikefit1"]], "julearn.utils.typing.EstimatorLikeFit2": [[60, "julearn-utils-typing-estimatorlikefit2"]], "julearn.utils.typing.EstimatorLikeFity": [[61, "julearn-utils-typing-estimatorlikefity"]], "julearn.utils.typing.JuEstimatorLike": [[62, "julearn-utils-typing-juestimatorlike"]], "julearn.utils.warn_with_log": [[63, "julearn-utils-warn-with-log"]], "Reference": [[64, "reference"]], "Inspect": [[65, "module-julearn.inspect"]], "Main API": [[66, "module-julearn.api"]], "Model Selection": [[67, "module-julearn.model_selection"]], "Models": [[68, "module-julearn.models"]], "Pipeline": [[69, "module-julearn.pipeline"], [120, "pipeline"]], "Prepare": [[70, "module-julearn.prepare"]], "Scoring": [[71, "module-julearn.scoring"]], "Scoring Metrics": [[71, "module-julearn.scoring.metrics"]], "Transformers": [[72, "module-julearn.transformers"], [104, "transformers"]], "Target Transformers": [[72, "module-julearn.transformers.target"]], "Utils": [[73, "module-julearn.utils"]], "Typing": [[73, "module-julearn.utils.typing"]], "Starting with julearn": [[74, "starting-with-julearn"]], "Multiclass Classification.": [[75, "multiclass-classification"]], "Regression Analysis": [[76, "regression-analysis"], [93, "regression-analysis"]], "Stratified K-fold CV for regression analysis": [[77, "stratified-k-fold-cv-for-regression-analysis"]], "Working with pandas": [[78, "working-with-pandas"]], "References": [[78, "references"], [79, "references"], [86, "references"], [94, "references"]], "From long to wide format": [[78, "from-long-to-wide-format"]], "Merging or joining data frames": [[78, "merging-or-joining-data-frames"]], "Reshaping data frames (more complex)": [[78, "reshaping-data-frames-more-complex"]], "Grouped CV.": [[79, "grouped-cv"]], "Dealing with Cross-Validation techniques": [[79, "dealing-with-cross-validation-techniques"], [86, "dealing-with-cross-validation-techniques"]], "Simple Binary Classification": [[80, "simple-binary-classification"]], "Computation times": [[81, "computation-times"], [84, "computation-times"], [90, "computation-times"], [96, "computation-times"], [100, "computation-times"], [103, "computation-times"]], "Model Comparison": [[82, "model-comparison"]], "Simple Model Comparison": [[83, "simple-model-comparison"]], "Inspection": [[85, "inspection"]], "Inspecting SVM models.": [[86, "inspecting-svm-models"]], "Inspecting Random Forest models": [[87, "inspecting-random-forest-models"]], "Random Forest variable importance": [[87, "random-forest-variable-importance"]], "Preprocessing with variance threshold, zscore and PCA": [[88, "preprocessing-with-variance-threshold-zscore-and-pca"]], "Inspecting the fold-wise predictions": [[89, "inspecting-the-fold-wise-predictions"]], "Complex Models": [[91, "complex-models"]], "Transforming target variable with z-score.": [[92, "transforming-target-variable-with-z-score"]], "Tuning Hyperparameters": [[94, "tuning-hyperparameters"]], "Stacking Classification": [[95, "stacking-classification"]], "Confounds": [[97, "confounds"]], "Confound Removal (model comparison)": [[98, "confound-removal-model-comparison"]], "Return Confounds in Confound Removal": [[99, "return-confounds-in-confound-removal"]], "Confound Removal Typical Use Case": [[99, "confound-removal-typical-use-case"]], "Customization": [[101, "customization"]], "Custom Scoring Function for Regression": [[102, "custom-scoring-function-for-regression"]], "Overview of available Pipeline Steps": [[104, "overview-of-available-pipeline-steps"]], "Scalers": [[104, "scalers"]], "Feature Selection": [[104, "feature-selection"]], "DataFrame operations": [[104, "dataframe-operations"]], "Decomposition": [[104, "decomposition"]], "Custom": [[104, "custom"]], "Models (Estimators)": [[104, "models-estimators"]], "Support Vector Machines": [[104, "support-vector-machines"]], "Ensemble": [[104, "ensemble"]], "Gaussian Processes": [[104, "gaussian-processes"]], "Linear Models": [[104, "linear-models"]], "Naive Bayes": [[104, "naive-bayes"]], "Dynamic Selection": [[104, "dynamic-selection"]], "Dummy": [[104, "dummy"]], "Contributing to julearn": [[105, "contributing-to-julearn"]], "Setting up the development environment": [[105, "setting-up-the-development-environment"]], "Download the source code": [[105, "download-the-source-code"]], "Create a virtual environment": [[105, "create-a-virtual-environment"]], "Install the requirements": [[105, "install-the-requirements"]], "Install julearn": [[105, "install-julearn"]], "Contributing with a pull request": [[105, "contributing-with-a-pull-request"]], "Fork the julearn Github repository": [[105, "fork-the-julearn-github-repository"]], "Create a branch for your modifications": [[105, "create-a-branch-for-your-modifications"]], "Do the changes": [[105, "do-the-changes"]], "Commit and Push": [[105, "commit-and-push"]], "Test and build the documentation": [[105, "test-and-build-the-documentation"]], "Create a pull request": [[105, "create-a-pull-request"]], "Writing Examples": [[105, "writing-examples"]], "Examples": [[106, "examples"]], "Contents:": [[106, null]], "Getting started": [[107, "getting-started"]], "Requirements": [[107, "requirements"]], "Setup suggestion": [[107, "setup-suggestion"]], "Installing": [[107, "installing"]], "Latest Stable Release": [[107, "latest-stable-release"]], "Latest Development Version": [[107, "latest-development-version"]], "Local git repository (for developers)": [[107, "local-git-repository-for-developers"]], "Welcome to julearn\u2019s documentation!": [[108, "welcome-to-julearn-s-documentation"]], "What is Julearn?": [[108, "what-is-julearn"]], "Why Julearn?": [[108, "why-julearn"]], "Julearn\u2019s backbone - run_cross_validation()": [[108, "julearn-s-backbone-run-cross-validation"]], "Table of Contents": [[108, "table-of-contents"], [113, null]], "Indices and tables": [[108, "indices-and-tables"]], "Maintaining julearn": [[109, "maintaining-julearn"]], "Versioning": [[109, "versioning"]], "Releasing a new version": [[109, "releasing-a-new-version"]], "Connectome-based Predictive Modeling (CBPM)": [[110, "connectome-based-predictive-modeling-cbpm"]], "CBPM in Julearn": [[110, "cbpm-in-julearn"]], "References:": [[110, null], [112, null], [120, null]], "Hyper Parameter Tuning": [[111, "hyper-parameter-tuning"]], "Cross-validation consistent Confound Removal": [[112, "cross-validation-consistent-confound-removal"]], "Confound Removal in Julearn": [[112, "confound-removal-in-julearn"]], "Removing Confounds from the Features": [[112, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[112, "removing-confounds-from-the-target"]], "Should I use Confound Regression?": [[112, "should-i-use-confound-regression"]], "Selected deeper topics": [[113, "selected-deeper-topics"]], "Inspecting Models": [[114, "inspecting-models"]], "Stacking Models": [[115, "stacking-models"]], "Why cross validation?": [[116, "why-cross-validation"]], "The essence of run_cross_validation()": [[116, "the-essence-of-run-cross-validation"]], "Data": [[117, "data"]], "Input data to run_cross_validation()": [[117, "input-data-to-run-cross-validation"]], "Give the feature columns a specific type": [[117, "give-the-feature-columns-a-specific-type"]], "What you really need to know": [[118, "what-you-really-need-to-know"]], "Model evaluation": [[119, "model-evaluation"]], "Basic cross validation with Julearn": [[120, "basic-cross-validation-with-julearn"]], "(Feature) preprocessing": [[120, "feature-preprocessing"]], "Pipeline specification made easy with the PipelineCreator": [[120, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "How to specify hyperparameters": [[120, "how-to-specify-hyperparameters"]], "Applying preprocessing only to certain feature types": [[120, "applying-preprocessing-only-to-certain-feature-types"]], "Applying preprocessing to the target": [[120, "applying-preprocessing-to-the-target"]], "What\u2019s new": [[121, "what-s-new"]], "Current (0.2.6.dev)": [[121, "current-0-2-6-dev"]], "Enhancements": [[121, "enhancements"], [121, "id3"]], "Bugs": [[121, "bugs"], [121, "id4"]], "API changes": [[121, "api-changes"], [121, "id5"]], "0.2.5": [[121, "id1"]]}, "indexentries": {"julearn.base": [[0, "module-julearn.base"]], "module": [[0, "module-julearn.base"], [65, "module-julearn.inspect"], [66, "module-julearn.api"], [67, "module-julearn.model_selection"], [68, "module-julearn.models"], [69, "module-julearn.pipeline"], [70, "module-julearn.prepare"], [71, "module-julearn.scoring"], [71, "module-julearn.scoring.metrics"], [72, "module-julearn.transformers"], [72, "module-julearn.transformers.target"], [73, "module-julearn.utils"], [73, "module-julearn.utils.typing"]], "pipelinecreator (class in julearn)": [[1, "julearn.PipelineCreator"]], "__init__() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.__init__"]], "add() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.add"]], "from_list() (julearn.pipelinecreator class method)": [[1, "julearn.PipelineCreator.from_list"]], "has_model() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.has_model"]], "steps (julearn.pipelinecreator property)": [[1, "julearn.PipelineCreator.steps"]], "to_pipeline() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.to_pipeline"]], "targetpipelinecreator (class in julearn)": [[2, "julearn.TargetPipelineCreator"]], "__init__() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.__init__"]], "add() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.add"]], "to_pipeline() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.to_pipeline"]], "columntypes (class in julearn.base)": [[3, "julearn.base.ColumnTypes"]], "__init__() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.__init__"]], "add() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.add"]], "copy() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.copy"]], "pattern (julearn.base.columntypes property)": [[3, "julearn.base.ColumnTypes.pattern"]], "to_type_selector() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.to_type_selector"]], "columntypeslike (in module julearn.base)": [[4, "julearn.base.ColumnTypesLike"]], "jubaseestimator (class in julearn.base)": [[5, "julearn.base.JuBaseEstimator"]], "__init__() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.__init__"]], "filter_columns() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.filter_columns"]], "get_apply_to() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_apply_to"]], "get_needed_types() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_needed_types"]], "get_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_params"]], "set_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.set_params"]], "jutransformer (class in julearn.base)": [[6, "julearn.base.JuTransformer"]], "__init__() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.__init__"]], "filter_columns() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.filter_columns"]], "fit() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit"]], "fit_transform() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit_transform"]], "get_apply_to() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_apply_to"]], "get_needed_types() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_needed_types"]], "get_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_params"]], "set_output() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_output"]], "set_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_params"]], "wrapmodel (class in julearn.base)": [[7, "julearn.base.WrapModel"]], "__init__() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.__init__"]], "classes_ (julearn.base.wrapmodel property)": [[7, "julearn.base.WrapModel.classes_"]], "decision_function() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.decision_function"]], "filter_columns() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.filter_columns"]], "fit() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.fit"]], "get_apply_to() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_apply_to"]], "get_needed_types() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_needed_types"]], "get_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_params"]], "predict() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict"]], "predict_log_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_log_proba"]], "predict_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_proba"]], "score() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.score"]], "set_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.set_params"]], "change_column_type() (in module julearn.base)": [[8, "julearn.base.change_column_type"]], "ensure_column_types() (in module julearn.base)": [[9, "julearn.base.ensure_column_types"]], "get_column_type() (in module julearn.base)": [[10, "julearn.base.get_column_type"]], "make_type_selector() (in module julearn.base)": [[11, "julearn.base.make_type_selector"]], "preprocess() (in module julearn.inspect)": [[12, "julearn.inspect.preprocess"]], "repeatedstratifiedgroupskfold (class in julearn.model_selection)": [[13, "julearn.model_selection.RepeatedStratifiedGroupsKFold"]], "__init__() (julearn.model_selection.repeatedstratifiedgroupskfold method)": [[13, "julearn.model_selection.RepeatedStratifiedGroupsKFold.__init__"]], "get_n_splits() (julearn.model_selection.repeatedstratifiedgroupskfold method)": [[13, "julearn.model_selection.RepeatedStratifiedGroupsKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedstratifiedgroupskfold method)": [[13, "julearn.model_selection.RepeatedStratifiedGroupsKFold.split"]], "stratifiedbootstrap (class in julearn.model_selection)": [[14, "julearn.model_selection.StratifiedBootstrap"]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[14, "julearn.model_selection.StratifiedBootstrap.__init__"]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[14, "julearn.model_selection.StratifiedBootstrap.get_n_splits"]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[14, "julearn.model_selection.StratifiedBootstrap.split"]], "stratifiedgroupskfold (class in julearn.model_selection)": [[15, "julearn.model_selection.StratifiedGroupsKFold"]], "__init__() (julearn.model_selection.stratifiedgroupskfold method)": [[15, "julearn.model_selection.StratifiedGroupsKFold.__init__"]], "get_n_splits() (julearn.model_selection.stratifiedgroupskfold method)": [[15, "julearn.model_selection.StratifiedGroupsKFold.get_n_splits"]], "split() (julearn.model_selection.stratifiedgroupskfold method)": [[15, "julearn.model_selection.StratifiedGroupsKFold.split"]], "get_searcher() (in module julearn.model_selection)": [[16, "julearn.model_selection.get_searcher"]], "list_searchers() (in module julearn.model_selection)": [[17, "julearn.model_selection.list_searchers"]], "register_searcher() (in module julearn.model_selection)": [[18, "julearn.model_selection.register_searcher"]], "reset_searcher_register() (in module julearn.model_selection)": [[19, "julearn.model_selection.reset_searcher_register"]], "dynamicselection (class in julearn.models.dynamic)": [[20, "julearn.models.dynamic.DynamicSelection"]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.__init__"]], "fit() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.fit"]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.get_params"]], "predict() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.predict"]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.predict_proba"]], "score() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.score"]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[20, "julearn.models.dynamic.DynamicSelection.set_params"]], "get_model() (in module julearn.models)": [[21, "julearn.models.get_model"]], "list_models() (in module julearn.models)": [[22, "julearn.models.list_models"]], "register_model() (in module julearn.models)": [[23, "julearn.models.register_model"]], "reset_model_register() (in module julearn.models)": [[24, "julearn.models.reset_model_register"]], "jutargetpipeline (class in julearn.pipeline)": [[25, "julearn.pipeline.JuTargetPipeline"]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[25, "julearn.pipeline.JuTargetPipeline.__init__"]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[25, "julearn.pipeline.JuTargetPipeline.can_inverse_transform"]], "fit() (julearn.pipeline.jutargetpipeline method)": [[25, "julearn.pipeline.JuTargetPipeline.fit"]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[25, "julearn.pipeline.JuTargetPipeline.fit_transform"]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[25, "julearn.pipeline.JuTargetPipeline.inverse_transform"]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[25, "julearn.pipeline.JuTargetPipeline.needed_types"]], "transform() (julearn.pipeline.jutargetpipeline method)": [[25, "julearn.pipeline.JuTargetPipeline.transform"]], "step (class in julearn.pipeline.pipeline_creator)": [[26, "julearn.pipeline.pipeline_creator.Step"]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[26, "julearn.pipeline.pipeline_creator.Step.__init__"]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.apply_to"]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.estimator"]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.name"]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.needed_types"]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.params_to_tune"]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.row_select_col_type"]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[26, "julearn.pipeline.pipeline_creator.Step.row_select_vals"]], "check_consistency() (in module julearn.prepare)": [[27, "julearn.prepare.check_consistency"]], "prepare_input_data() (in module julearn.prepare)": [[28, "julearn.prepare.prepare_input_data"]], "run_cross_validation() (in module julearn)": [[29, "julearn.run_cross_validation"]], "check_scoring() (in module julearn.scoring)": [[30, "julearn.scoring.check_scoring"]], "get_scorer() (in module julearn.scoring)": [[31, "julearn.scoring.get_scorer"]], "list_scorers() (in module julearn.scoring)": [[32, "julearn.scoring.list_scorers"]], "r2_corr() (in module julearn.scoring.metrics)": [[33, "julearn.scoring.metrics.r2_corr"]], "register_scorer() (in module julearn.scoring)": [[34, "julearn.scoring.register_scorer"]], "reset_scorer_register() (in module julearn.scoring)": [[35, "julearn.scoring.reset_scorer_register"]], "cbpm (class in julearn.transformers)": [[36, "julearn.transformers.CBPM"]], "__init__() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.__init__"]], "aggregate() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.aggregate"]], "fit() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.fit"]], "fit_transform() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.fit_transform"]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.get_feature_names_out"]], "get_params() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.get_params"]], "set_output() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.set_output"]], "set_params() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.set_params"]], "transform() (julearn.transformers.cbpm method)": [[36, "julearn.transformers.CBPM.transform"]], "changecolumntypes (class in julearn.transformers)": [[37, "julearn.transformers.ChangeColumnTypes"]], "__init__() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.__init__"]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.filter_columns"]], "fit() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.fit"]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.get_feature_names_out"]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.get_params"]], "set_output() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.set_output"]], "set_params() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.set_params"]], "transform() (julearn.transformers.changecolumntypes method)": [[37, "julearn.transformers.ChangeColumnTypes.transform"]], "dropcolumns (class in julearn.transformers)": [[38, "julearn.transformers.DropColumns"]], "__init__() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.__init__"]], "filter_columns() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.filter_columns"]], "fit() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.fit"]], "fit_transform() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.fit_transform"]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.get_apply_to"]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.get_needed_types"]], "get_params() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.get_params"]], "get_support() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.get_support"]], "set_output() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.set_output"]], "set_params() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.set_params"]], "transform() (julearn.transformers.dropcolumns method)": [[38, "julearn.transformers.DropColumns.transform"]], "filtercolumns (class in julearn.transformers)": [[39, "julearn.transformers.FilterColumns"]], "__init__() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.__init__"]], "filter_columns() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.filter_columns"]], "fit() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.fit"]], "fit_transform() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.fit_transform"]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.get_apply_to"]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.get_feature_names_out"]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.get_needed_types"]], "get_params() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.get_params"]], "set_output() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.set_output"]], "set_params() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.set_params"]], "transform() (julearn.transformers.filtercolumns method)": [[39, "julearn.transformers.FilterColumns.transform"]], "jucolumntransformer (class in julearn.transformers)": [[40, "julearn.transformers.JuColumnTransformer"]], "__init__() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.__init__"]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.filter_columns"]], "fit() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.fit"]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.fit_transform"]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.get_apply_to"]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.get_feature_names_out"]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.get_needed_types"]], "get_params() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.get_params"]], "set_output() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.set_output"]], "set_params() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.set_params"]], "transform() (julearn.transformers.jucolumntransformer method)": [[40, "julearn.transformers.JuColumnTransformer.transform"]], "setcolumntypes (class in julearn.transformers)": [[41, "julearn.transformers.SetColumnTypes"]], "__init__() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.__init__"]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.filter_columns"]], "fit() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.fit"]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.get_feature_names_out"]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.get_params"]], "set_output() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.set_output"]], "set_params() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.set_params"]], "transform() (julearn.transformers.setcolumntypes method)": [[41, "julearn.transformers.SetColumnTypes.transform"]], "confoundremover (class in julearn.transformers.confound_remover)": [[42, "julearn.transformers.confound_remover.ConfoundRemover"]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.__init__"]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns"]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.fit"]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform"]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to"]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out"]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types"]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.get_params"]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.get_support"]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.set_output"]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.set_params"]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[42, "julearn.transformers.confound_remover.ConfoundRemover.transform"]], "get_transformer() (in module julearn.transformers)": [[43, "julearn.transformers.get_transformer"]], "list_transformers() (in module julearn.transformers)": [[44, "julearn.transformers.list_transformers"]], "register_transformer() (in module julearn.transformers)": [[45, "julearn.transformers.register_transformer"]], "reset_transformer_register() (in module julearn.transformers)": [[46, "julearn.transformers.reset_transformer_register"]], "jutargettransformer (class in julearn.transformers.target)": [[47, "julearn.transformers.target.JuTargetTransformer"]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[47, "julearn.transformers.target.JuTargetTransformer.__init__"]], "fit() (julearn.transformers.target.jutargettransformer method)": [[47, "julearn.transformers.target.JuTargetTransformer.fit"]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[47, "julearn.transformers.target.JuTargetTransformer.fit_transform"]], "transform() (julearn.transformers.target.jutargettransformer method)": [[47, "julearn.transformers.target.JuTargetTransformer.transform"]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[48, "julearn.transformers.target.JuTransformedTargetModel"]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.__init__"]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[48, "julearn.transformers.target.JuTransformedTargetModel.classes_"]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.decision_function"]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.filter_columns"]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.fit"]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to"]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types"]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.get_params"]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.predict"]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.predict_proba"]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[48, "julearn.transformers.target.JuTransformedTargetModel.set_params"]], "targetconfoundremover (class in julearn.transformers.target)": [[49, "julearn.transformers.target.TargetConfoundRemover"]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[49, "julearn.transformers.target.TargetConfoundRemover.__init__"]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[49, "julearn.transformers.target.TargetConfoundRemover.fit"]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[49, "julearn.transformers.target.TargetConfoundRemover.fit_transform"]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[49, "julearn.transformers.target.TargetConfoundRemover.needed_types"]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[49, "julearn.transformers.target.TargetConfoundRemover.transform"]], "transformedtargetwarning (class in julearn.transformers.target)": [[50, "julearn.transformers.target.TransformedTargetWarning"]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[50, "julearn.transformers.target.TransformedTargetWarning.__init__"]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[50, "julearn.transformers.target.TransformedTargetWarning.args"]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[50, "julearn.transformers.target.TransformedTargetWarning.with_traceback"]], "get_target_transformer() (in module julearn.transformers.target)": [[51, "julearn.transformers.target.get_target_transformer"]], "list_target_transformers() (in module julearn.transformers.target)": [[52, "julearn.transformers.target.list_target_transformers"]], "register_target_transformer() (in module julearn.transformers.target)": [[53, "julearn.transformers.target.register_target_transformer"]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[54, "julearn.transformers.target.reset_target_transformer_register"]], "configure_logging() (in module julearn.utils)": [[55, "julearn.utils.configure_logging"]], "logger (in module julearn.utils)": [[56, "julearn.utils.logger"]], "raise_error() (in module julearn.utils)": [[57, "julearn.utils.raise_error"]], "estimatorlike (in module julearn.utils.typing)": [[58, "julearn.utils.typing.EstimatorLike"]], "estimatorlikefit1 (class in julearn.utils.typing)": [[59, "julearn.utils.typing.EstimatorLikeFit1"]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[59, "julearn.utils.typing.EstimatorLikeFit1.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[59, "julearn.utils.typing.EstimatorLikeFit1.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[59, "julearn.utils.typing.EstimatorLikeFit1.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[59, "julearn.utils.typing.EstimatorLikeFit1.set_params"]], "estimatorlikefit2 (class in julearn.utils.typing)": [[60, "julearn.utils.typing.EstimatorLikeFit2"]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[60, "julearn.utils.typing.EstimatorLikeFit2.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[60, "julearn.utils.typing.EstimatorLikeFit2.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[60, "julearn.utils.typing.EstimatorLikeFit2.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[60, "julearn.utils.typing.EstimatorLikeFit2.set_params"]], "estimatorlikefity (class in julearn.utils.typing)": [[61, "julearn.utils.typing.EstimatorLikeFity"]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[61, "julearn.utils.typing.EstimatorLikeFity.__init__"]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[61, "julearn.utils.typing.EstimatorLikeFity.fit"]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[61, "julearn.utils.typing.EstimatorLikeFity.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[61, "julearn.utils.typing.EstimatorLikeFity.set_params"]], "juestimatorlike (class in julearn.utils.typing)": [[62, "julearn.utils.typing.JuEstimatorLike"]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[62, "julearn.utils.typing.JuEstimatorLike.__init__"]], "fit() (julearn.utils.typing.juestimatorlike method)": [[62, "julearn.utils.typing.JuEstimatorLike.fit"]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[62, "julearn.utils.typing.JuEstimatorLike.get_apply_to"]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[62, "julearn.utils.typing.JuEstimatorLike.get_needed_types"]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[62, "julearn.utils.typing.JuEstimatorLike.get_params"]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[62, "julearn.utils.typing.JuEstimatorLike.set_params"]], "warn_with_log() (in module julearn.utils)": [[63, "julearn.utils.warn_with_log"]], "julearn.inspect": [[65, "module-julearn.inspect"]], "julearn.api": [[66, "module-julearn.api"]], "julearn.model_selection": [[67, "module-julearn.model_selection"]], "julearn.models": [[68, "module-julearn.models"]], "julearn.pipeline": [[69, "module-julearn.pipeline"]], "julearn.prepare": [[70, "module-julearn.prepare"]], "julearn.scoring": [[71, "module-julearn.scoring"]], "julearn.scoring.metrics": [[71, "module-julearn.scoring.metrics"]], "julearn.transformers": [[72, "module-julearn.transformers"]], "julearn.transformers.target": [[72, "module-julearn.transformers.target"]], "julearn.utils": [[73, "module-julearn.utils"]], "julearn.utils.typing": [[73, "module-julearn.utils.typing"]]}})