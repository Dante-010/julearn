
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/basic/run_apply_to_target.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_basic_run_apply_to_target.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_basic_run_apply_to_target.py:


Transforming target variable with z-score.
===========================================

This example uses the sklearn "diabetes" regression dataset, and transforms the
target variable, in this case, using z-score. Then, we perform a regression
analysis using Ridge Regression model.

.. GENERATED FROM PYTHON SOURCE LINES 10-27

.. code-block:: default

    # Authors: Lya K. Paas Oliveros <l.paas.oliveros@fz-juelich.de>
    #          Sami Hamdan <s.hamdan@fz-juelich.de>
    #
    # License: AGPL

    import pandas as pd
    import seaborn as sns
    import matplotlib.pyplot as plt
    from sklearn.datasets import load_diabetes
    from sklearn.model_selection import train_test_split

    from julearn import run_cross_validation
    from julearn.utils import configure_logging
    # this is crucial for creating the model in the new version
    from julearn.pipeline import PipelineCreator









.. GENERATED FROM PYTHON SOURCE LINES 28-29

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 29-32

.. code-block:: default

    configure_logging(level='INFO')






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-12-08 11:48:52,286 - julearn - INFO - ===== Lib Versions =====
    2022-12-08 11:48:52,286 - julearn - INFO - numpy: 1.23.5
    2022-12-08 11:48:52,286 - julearn - INFO - scipy: 1.9.3
    2022-12-08 11:48:52,286 - julearn - INFO - sklearn: 1.2.0rc1
    2022-12-08 11:48:52,286 - julearn - INFO - pandas: 1.5.2
    2022-12-08 11:48:52,287 - julearn - INFO - julearn: 0.1.dev1
    2022-12-08 11:48:52,287 - julearn - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 33-34

Load the diabetes dataset from sklearn as a pandas dataframe

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default

    features, target = load_diabetes(return_X_y=True, as_frame=True)









.. GENERATED FROM PYTHON SOURCE LINES 38-42

Dataset contains ten variables age, sex, body mass index, average  blood
pressure, and six blood serum measurements (s1-s6) diabetes patients and
a quantitative measure of disease progression one year after baseline which
is the target we are interested in predicting.

.. GENERATED FROM PYTHON SOURCE LINES 42-46

.. code-block:: default

    print('Features: \n', features.head())
    print('Target: \n', target.describe())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Features: 
             age       sex       bmi  ...        s4        s5        s6
    0  0.038076  0.050680  0.061696  ... -0.002592  0.019907 -0.017646
    1 -0.001882 -0.044642 -0.051474  ... -0.039493 -0.068332 -0.092204
    2  0.085299  0.050680  0.044451  ... -0.002592  0.002861 -0.025930
    3 -0.089063 -0.044642 -0.011595  ...  0.034309  0.022688 -0.009362
    4  0.005383 -0.044642 -0.036385  ... -0.002592 -0.031988 -0.046641

    [5 rows x 10 columns]
    Target: 
     count    442.000000
    mean     152.133484
    std       77.093005
    min       25.000000
    25%       87.000000
    50%      140.500000
    75%      211.500000
    max      346.000000
    Name: target, dtype: float64




.. GENERATED FROM PYTHON SOURCE LINES 47-49

Let's combine features and target together in one dataframe and define X
and y

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: default

    data_diabetes = pd.concat([features, target], axis=1)

    X = ['age', 'sex', 'bmi', 'bp', 's1', 's2', 's3', 's4', 's5', 's6']
    y = 'target'








.. GENERATED FROM PYTHON SOURCE LINES 55-56

Split the dataset into train and test

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default

    train_diabetes, test_diabetes = train_test_split(data_diabetes, test_size=0.3)









.. GENERATED FROM PYTHON SOURCE LINES 60-65

Let's create the model. To note, in PipelineCreator the only reserved key is
target. That means, there is no need to name it, i.e., by stating
apply_to="target", it already knows which is the target.
Here, it is important that if you define the PipelineCreator you include the
model and do not define the model in run_cross_validation

.. GENERATED FROM PYTHON SOURCE LINES 65-81

.. code-block:: default

    creator = PipelineCreator(problem_type="regression")
    creator.add("zscore", apply_to="target")
    creator.add("ridge")

    scores, model = run_cross_validation(
        X=X,
        y=y,
        data=train_diabetes,
        model=creator,
        return_estimator="final",
        scoring='neg_mean_absolute_error'
    )

    print(scores.head(5))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-12-08 11:48:52,310 - julearn - INFO - Adding step zscore that applies to <julearn.base.column_types.ColumnTypes object at 0x7ff7860ff8b0>
    2022-12-08 11:48:52,310 - julearn - INFO - Step added
    2022-12-08 11:48:52,310 - julearn - INFO - Adding step ridge that applies to <julearn.base.column_types.ColumnTypes object at 0x7ff7860feb60>
    2022-12-08 11:48:52,310 - julearn - INFO - Step added
    2022-12-08 11:48:52,310 - julearn - INFO - ==== Input Data ====
    2022-12-08 11:48:52,310 - julearn - INFO - Using dataframe as input
    2022-12-08 11:48:52,310 - julearn - INFO -      Features: ['age', 'sex', 'bmi', 'bp', 's1', 's2', 's3', 's4', 's5', 's6']
    2022-12-08 11:48:52,310 - julearn - INFO -      Target: target
    2022-12-08 11:48:52,311 - julearn - INFO - ====================
    2022-12-08 11:48:52,311 - julearn - INFO - 
    2022-12-08 11:48:52,313 - julearn - INFO - = Model Parameters =
    2022-12-08 11:48:52,313 - julearn - INFO - ====================
    2022-12-08 11:48:52,313 - julearn - INFO - 
    2022-12-08 11:48:52,313 - julearn - INFO - Using outer CV scheme KFold(n_splits=5, random_state=None, shuffle=False)
       fit_time  score_time  test_score  repeat  fold
    0  0.009848    0.003534  -45.975447       0     0
    1  0.008728    0.003501  -44.766836       0     1
    2  0.007692    0.003501  -55.565397       0     2
    3  0.007533    0.003423  -50.495938       0     3
    4  0.007506    0.003395  -60.249163       0     4




.. GENERATED FROM PYTHON SOURCE LINES 82-83

Mean value of mean absolute error across CV

.. GENERATED FROM PYTHON SOURCE LINES 83-84

.. code-block:: default

    print(scores['test_score'].mean() * -1)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    51.41055609328796





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.138 seconds)


.. _sphx_glr_download_auto_examples_basic_run_apply_to_target.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_apply_to_target.py <run_apply_to_target.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_apply_to_target.ipynb <run_apply_to_target.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
