
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/basic/run_simple_binary_classification.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_basic_run_simple_binary_classification.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_basic_run_simple_binary_classification.py:


Simple Binary Classification
============================

This example uses the 'iris' dataset and performs a simple binary
classification using a Support Vector Machine classifier.

.. include:: ../../links.inc

.. GENERATED FROM PYTHON SOURCE LINES 10-17

.. code-block:: default

    # Authors: Federico Raimondo <f.raimondo@fz-juelich.de>
    #
    # License: AGPL
    from seaborn import load_dataset
    from julearn import run_cross_validation
    from julearn.utils import configure_logging








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    configure_logging(level="INFO")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-13 09:24:27,560 - julearn - INFO - ===== Lib Versions =====
    2023-04-13 09:24:27,560 - julearn - INFO - numpy: 1.23.5
    2023-04-13 09:24:27,560 - julearn - INFO - scipy: 1.10.1
    2023-04-13 09:24:27,560 - julearn - INFO - sklearn: 1.2.2
    2023-04-13 09:24:27,560 - julearn - INFO - pandas: 1.5.3
    2023-04-13 09:24:27,560 - julearn - INFO - julearn: 0.3.0.dev148
    2023-04-13 09:24:27,560 - julearn - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. code-block:: default

    df_iris = load_dataset("iris")








.. GENERATED FROM PYTHON SOURCE LINES 25-27

The dataset has three kind of species. We will keep two to perform a binary
classification.

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: default

    df_iris = df_iris[df_iris["species"].isin(["versicolor", "virginica"])]








.. GENERATED FROM PYTHON SOURCE LINES 30-32

As features, we will use the sepal length, width and petal length.
We will try to predict the species.

.. GENERATED FROM PYTHON SOURCE LINES 32-46

.. code-block:: default


    X = ["sepal_length", "sepal_width", "petal_length"]
    y = "species"
    scores = run_cross_validation(
        X=X,
        y=y,
        data=df_iris,
        model="svm",
        problem_type="classification",
        preprocess="zscore",
    )

    print(scores["test_score"])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-13 09:24:27,564 - julearn - INFO - ==== Input Data ====
    2023-04-13 09:24:27,564 - julearn - INFO - Using dataframe as input
    2023-04-13 09:24:27,564 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-13 09:24:27,564 - julearn - INFO -      Target: species
    2023-04-13 09:24:27,564 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-13 09:24:27,564 - julearn - INFO -      X_types:{}
    2023-04-13 09:24:27,564 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-13 09:24:27,565 - julearn - INFO - ====================
    2023-04-13 09:24:27,565 - julearn - INFO - 
    2023-04-13 09:24:27,565 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-13 09:24:27,566 - julearn - INFO - Step added
    2023-04-13 09:24:27,566 - julearn - INFO - Adding step svm that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-13 09:24:27,566 - julearn - INFO - Step added
    2023-04-13 09:24:27,566 - julearn - INFO - = Model Parameters =
    2023-04-13 09:24:27,567 - julearn - INFO - ====================
    2023-04-13 09:24:27,567 - julearn - INFO - 
    2023-04-13 09:24:27,567 - julearn - INFO - = Data Information =
    2023-04-13 09:24:27,567 - julearn - INFO -      Problem type: classification
    2023-04-13 09:24:27,567 - julearn - INFO -      Number of samples: 100
    2023-04-13 09:24:27,567 - julearn - INFO -      Number of features: 3
    2023-04-13 09:24:27,567 - julearn - INFO - ====================
    2023-04-13 09:24:27,567 - julearn - INFO - 
    2023-04-13 09:24:27,567 - julearn - INFO -      Number of classes: 2
    2023-04-13 09:24:27,567 - julearn - INFO -      Target type: object
    2023-04-13 09:24:27,568 - julearn - INFO -      Class distributions: versicolor    50
    virginica     50
    Name: species, dtype: int64
    2023-04-13 09:24:27,568 - julearn - INFO - Using outer CV scheme KFold(n_splits=5, random_state=None, shuffle=False)
    2023-04-13 09:24:27,568 - julearn - INFO - Binary classification problem detected.
    0    0.90
    1    0.75
    2    0.95
    3    0.70
    4    0.90
    Name: test_score, dtype: float64




.. GENERATED FROM PYTHON SOURCE LINES 47-51

Additionally, we can choose to assess the performance of the model using
different scoring functions.

For example, we might have an unbalanced dataset:

.. GENERATED FROM PYTHON SOURCE LINES 51-55

.. code-block:: default


    df_unbalanced = df_iris[20:]  # drop the first 20 versicolor samples
    print(df_unbalanced["species"].value_counts())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    virginica     50
    versicolor    30
    Name: species, dtype: int64




.. GENERATED FROM PYTHON SOURCE LINES 56-61

If we compute the `accuracy`, we might not account for this imbalance. A more
suitable metric is the `balanced_accuracy`. More information in scikit-learn:
`Balanced Accuracy`_

We will also set the random seed so we always split the data in the same way.

.. GENERATED FROM PYTHON SOURCE LINES 61-76

.. code-block:: default

    scores = run_cross_validation(
        X=X,
        y=y,
        data=df_unbalanced,
        model="svm",
        seed=42,
        preprocess="zscore",
        problem_type="classification",
        scoring=["accuracy", "balanced_accuracy"],
    )

    print(scores["test_accuracy"].mean())
    print(scores["test_balanced_accuracy"].mean())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-13 09:24:27,619 - julearn - INFO - Setting random seed to 42
    2023-04-13 09:24:27,619 - julearn - INFO - ==== Input Data ====
    2023-04-13 09:24:27,619 - julearn - INFO - Using dataframe as input
    2023-04-13 09:24:27,619 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-13 09:24:27,619 - julearn - INFO -      Target: species
    2023-04-13 09:24:27,619 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-13 09:24:27,619 - julearn - INFO -      X_types:{}
    2023-04-13 09:24:27,619 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-13 09:24:27,620 - julearn - INFO - ====================
    2023-04-13 09:24:27,620 - julearn - INFO - 
    2023-04-13 09:24:27,620 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-13 09:24:27,621 - julearn - INFO - Step added
    2023-04-13 09:24:27,621 - julearn - INFO - Adding step svm that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-13 09:24:27,621 - julearn - INFO - Step added
    2023-04-13 09:24:27,621 - julearn - INFO - = Model Parameters =
    2023-04-13 09:24:27,621 - julearn - INFO - ====================
    2023-04-13 09:24:27,621 - julearn - INFO - 
    2023-04-13 09:24:27,622 - julearn - INFO - = Data Information =
    2023-04-13 09:24:27,622 - julearn - INFO -      Problem type: classification
    2023-04-13 09:24:27,622 - julearn - INFO -      Number of samples: 80
    2023-04-13 09:24:27,622 - julearn - INFO -      Number of features: 3
    2023-04-13 09:24:27,622 - julearn - INFO - ====================
    2023-04-13 09:24:27,622 - julearn - INFO - 
    2023-04-13 09:24:27,622 - julearn - INFO -      Number of classes: 2
    2023-04-13 09:24:27,622 - julearn - INFO -      Target type: object
    2023-04-13 09:24:27,623 - julearn - INFO -      Class distributions: virginica     50
    versicolor    30
    Name: species, dtype: int64
    2023-04-13 09:24:27,623 - julearn - INFO - Using outer CV scheme KFold(n_splits=5, random_state=None, shuffle=False)
    2023-04-13 09:24:27,623 - julearn - INFO - Binary classification problem detected.
    /opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/sklearn/metrics/_classification.py:2184: UserWarning: y_pred contains classes not in y_true
      warnings.warn("y_pred contains classes not in y_true")
    /opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/sklearn/metrics/_classification.py:2184: UserWarning: y_pred contains classes not in y_true
      warnings.warn("y_pred contains classes not in y_true")
    /opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/sklearn/metrics/_classification.py:2184: UserWarning: y_pred contains classes not in y_true
      warnings.warn("y_pred contains classes not in y_true")
    /opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/sklearn/metrics/_classification.py:2184: UserWarning: y_pred contains classes not in y_true
      warnings.warn("y_pred contains classes not in y_true")
    0.8625
    0.8678571428571429




.. GENERATED FROM PYTHON SOURCE LINES 77-87

Other kind of metrics allows us to evaluate how good our model is to detect
specific targets. Suppose we want to create a model that correctly identifies
the `versicolor` samples.

Now we might want to evaluate the precision score, or the ratio of true
positives (tp) over all positives (true and false positives). More
information in scikit-learn: `Precision`_

For this metric to work, we need to define which are our `positive` values.
In this example, we are interested in detecting `versicolor`.

.. GENERATED FROM PYTHON SOURCE LINES 87-99

.. code-block:: default

    precision_scores = run_cross_validation(
        X=X,
        y=y,
        data=df_unbalanced,
        model="svm",
        preprocess="zscore",
        problem_type="classification",
        seed=42,
        scoring="precision",
        pos_labels="versicolor",
    )
    print(precision_scores["test_score"].mean())




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-13 09:24:27,675 - julearn - INFO - Setting random seed to 42
    2023-04-13 09:24:27,675 - julearn - INFO - ==== Input Data ====
    2023-04-13 09:24:27,675 - julearn - INFO - Using dataframe as input
    2023-04-13 09:24:27,675 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-13 09:24:27,675 - julearn - INFO -      Target: species
    2023-04-13 09:24:27,675 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-13 09:24:27,675 - julearn - INFO -      X_types:{}
    2023-04-13 09:24:27,675 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-13 09:24:27,676 - julearn - INFO - Setting the following as positive labels ['versicolor']
    2023-04-13 09:24:27,677 - julearn - INFO - ====================
    2023-04-13 09:24:27,677 - julearn - INFO - 
    2023-04-13 09:24:27,677 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-13 09:24:27,677 - julearn - INFO - Step added
    2023-04-13 09:24:27,677 - julearn - INFO - Adding step svm that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-13 09:24:27,677 - julearn - INFO - Step added
    2023-04-13 09:24:27,678 - julearn - INFO - = Model Parameters =
    2023-04-13 09:24:27,678 - julearn - INFO - ====================
    2023-04-13 09:24:27,678 - julearn - INFO - 
    2023-04-13 09:24:27,678 - julearn - INFO - = Data Information =
    2023-04-13 09:24:27,678 - julearn - INFO -      Problem type: classification
    2023-04-13 09:24:27,678 - julearn - INFO -      Number of samples: 80
    2023-04-13 09:24:27,678 - julearn - INFO -      Number of features: 3
    2023-04-13 09:24:27,678 - julearn - INFO - ====================
    2023-04-13 09:24:27,678 - julearn - INFO - 
    2023-04-13 09:24:27,678 - julearn - INFO -      Number of classes: 2
    2023-04-13 09:24:27,678 - julearn - INFO -      Target type: int64
    2023-04-13 09:24:27,679 - julearn - INFO -      Class distributions: 0    50
    1    30
    Name: species, dtype: int64
    2023-04-13 09:24:27,679 - julearn - INFO - Using outer CV scheme KFold(n_splits=5, random_state=None, shuffle=False)
    2023-04-13 09:24:27,679 - julearn - INFO - Binary classification problem detected.
    0.4





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.173 seconds)


.. _sphx_glr_download_auto_examples_basic_run_simple_binary_classification.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_simple_binary_classification.py <run_simple_binary_classification.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_simple_binary_classification.ipynb <run_simple_binary_classification.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
