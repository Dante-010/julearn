
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/advanced/dis_run_target_confound_removal.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_advanced_dis_run_target_confound_removal.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_advanced_dis_run_target_confound_removal.py:


Confound Removal (model comparison)
===================================

This example uses the 'iris' dataset, performs simple binary classification
with and without confound removal using a Random Forest classifier.

.. GENERATED FROM PYTHON SOURCE LINES 9-26

.. code-block:: default


    # Authors: Shammi More <s.more@fz-juelich.de>
    #          Federico Raimondo <f.raimondo@fz-juelich.de>
    #          Leonard Sasse <l.sasse@fz-juelich.de>
    # License: AGPL

    import matplotlib.pyplot as plt
    import pandas as pd
    import seaborn as sns
    from seaborn import load_dataset

    from julearn import run_cross_validation
    from julearn.model_selection import StratifiedBootstrap
    from julearn.pipeline import PipelineCreator, TargetPipelineCreator
    from julearn.utils import configure_logging



.. GENERATED FROM PYTHON SOURCE LINES 27-28

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 28-30

.. code-block:: default

    configure_logging(level="INFO")


.. GENERATED FROM PYTHON SOURCE LINES 31-32

Load the iris data from seaborn

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    df_iris = load_dataset("iris")


.. GENERATED FROM PYTHON SOURCE LINES 35-37

The dataset has three kind of species. We will keep two to perform a binary
classification.

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default

    df_iris = df_iris[df_iris["species"].isin(["versicolor", "virginica"])]



.. GENERATED FROM PYTHON SOURCE LINES 41-43

As features, we will use the sepal length, width and petal length and use
petal width as confound.

.. GENERATED FROM PYTHON SOURCE LINES 43-74

.. code-block:: default


    X = ["sepal_length", "sepal_width"]
    y = "petal_length"
    confounds = ["petal_width"]


    # In order to tell 'run_cross_validation' which columns are confounds,
    # and which columns are features, we have to define the X_types:
    X_types = {"features": X, "confound": confounds}

    target_creator = TargetPipelineCreator()
    target_creator.add("zscore")
    target_creator.add("confound_removal", confounds="confound")

    creator = PipelineCreator(problem_type="regression", apply_to="features")
    creator.add("zscore", apply_to=["features", "confound"])
    creator.add(target_creator, apply_to="target")
    creator.add("rf")

    scores_cr = run_cross_validation(
        X=X + confounds,
        y=y,
        data=df_iris,
        model=creator,
        cv=5,
        X_types=X_types,
        scoring=["r2"],
        seed=200,
        pos_labels=["virginica"],
    )

    print(scores_cr)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_advanced_dis_run_target_confound_removal.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: dis_run_target_confound_removal.py <dis_run_target_confound_removal.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: dis_run_target_confound_removal.ipynb <dis_run_target_confound_removal.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
