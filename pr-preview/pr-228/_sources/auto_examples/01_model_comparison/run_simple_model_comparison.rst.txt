
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/01_model_comparison/run_simple_model_comparison.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_01_model_comparison_run_simple_model_comparison.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_01_model_comparison_run_simple_model_comparison.py:


Simple Model Comparison
=======================

This example uses the 'iris' dataset and performs binary classifications
using different models. At the end, it compares the performance of the models
using different scoring functions and performs a statistical test to assess
whether the difference in performance is significant.

.. include:: ../../links.inc

.. GENERATED FROM PYTHON SOURCE LINES 12-22

.. code-block:: default

    # Authors: Federico Raimondo <f.raimondo@fz-juelich.de>
    #
    # License: AGPL

    from seaborn import load_dataset
    from sklearn.model_selection import RepeatedStratifiedKFold
    from julearn import run_cross_validation
    from julearn.utils import configure_logging
    from julearn.stats.corrected_ttest import corrected_ttest








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    configure_logging(level="INFO")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-25 08:56:39,076 - julearn - INFO - ===== Lib Versions =====
    2023-04-25 08:56:39,077 - julearn - INFO - numpy: 1.23.5
    2023-04-25 08:56:39,077 - julearn - INFO - scipy: 1.10.1
    2023-04-25 08:56:39,077 - julearn - INFO - sklearn: 1.2.2
    2023-04-25 08:56:39,077 - julearn - INFO - pandas: 1.5.3
    2023-04-25 08:56:39,077 - julearn - INFO - julearn: 0.2.6.dev223
    2023-04-25 08:56:39,077 - julearn - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: default

    df_iris = load_dataset("iris")








.. GENERATED FROM PYTHON SOURCE LINES 30-32

The dataset has three kind of species. We will keep two to perform a binary
classification.

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    df_iris = df_iris[df_iris["species"].isin(["versicolor", "virginica"])]








.. GENERATED FROM PYTHON SOURCE LINES 35-37

As features, we will use the sepal length, width and petal length.
We will try to predict the species.

.. GENERATED FROM PYTHON SOURCE LINES 37-51

.. code-block:: default


    X = ["sepal_length", "sepal_width", "petal_length"]
    y = "species"
    scores = run_cross_validation(
        X=X,
        y=y,
        data=df_iris,
        model="svm",
        problem_type="classification",
        preprocess="zscore",
    )

    print(scores["test_score"])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-25 08:56:39,081 - julearn - INFO - ==== Input Data ====
    2023-04-25 08:56:39,081 - julearn - INFO - Using dataframe as input
    2023-04-25 08:56:39,081 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:39,081 - julearn - INFO -      Target: species
    2023-04-25 08:56:39,081 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:39,081 - julearn - INFO -      X_types:{}
    2023-04-25 08:56:39,081 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-25 08:56:39,082 - julearn - INFO - ====================
    2023-04-25 08:56:39,082 - julearn - INFO - 
    2023-04-25 08:56:39,082 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:39,082 - julearn - INFO - Step added
    2023-04-25 08:56:39,082 - julearn - INFO - Adding step svm that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:39,083 - julearn - INFO - Step added
    2023-04-25 08:56:39,083 - julearn - INFO - = Model Parameters =
    2023-04-25 08:56:39,083 - julearn - INFO - ====================
    2023-04-25 08:56:39,083 - julearn - INFO - 
    2023-04-25 08:56:39,083 - julearn - INFO - = Data Information =
    2023-04-25 08:56:39,083 - julearn - INFO -      Problem type: classification
    2023-04-25 08:56:39,083 - julearn - INFO -      Number of samples: 100
    2023-04-25 08:56:39,083 - julearn - INFO -      Number of features: 3
    2023-04-25 08:56:39,084 - julearn - INFO - ====================
    2023-04-25 08:56:39,084 - julearn - INFO - 
    2023-04-25 08:56:39,084 - julearn - INFO -      Number of classes: 2
    2023-04-25 08:56:39,084 - julearn - INFO -      Target type: object
    2023-04-25 08:56:39,084 - julearn - INFO -      Class distributions: versicolor    50
    virginica     50
    Name: species, dtype: int64
    2023-04-25 08:56:39,085 - julearn - INFO - Using outer CV scheme KFold(n_splits=5, random_state=None, shuffle=False)
    2023-04-25 08:56:39,085 - julearn - INFO - Binary classification problem detected.
    0    0.90
    1    0.75
    2    0.95
    3    0.70
    4    0.90
    Name: test_score, dtype: float64




.. GENERATED FROM PYTHON SOURCE LINES 52-56

Additionally, we can choose to assess the performance of the model using
different scoring functions.

For example, we might have an unbalanced dataset:

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: default


    df_unbalanced = df_iris[20:]  # drop the first 20 versicolor samples
    print(df_unbalanced["species"].value_counts())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    virginica     50
    versicolor    30
    Name: species, dtype: int64




.. GENERATED FROM PYTHON SOURCE LINES 61-63

So we will choose to use the `balanced_accuracy` and `roc_auc` metrics.


.. GENERATED FROM PYTHON SOURCE LINES 63-65

.. code-block:: default

    scoring = ["balanced_accuracy", "roc_auc"]








.. GENERATED FROM PYTHON SOURCE LINES 66-68

Since we are comparing the performance of different models, we will need
to use the same random seed to split the data in the same way.

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: default


    cv = RepeatedStratifiedKFold(n_splits=5, n_repeats=5, random_state=42)








.. GENERATED FROM PYTHON SOURCE LINES 72-73

First we will use a default SVM model.

.. GENERATED FROM PYTHON SOURCE LINES 73-86

.. code-block:: default

    scores1 = run_cross_validation(
        X=X,
        y=y,
        data=df_unbalanced,
        model="svm",
        preprocess="zscore",
        problem_type="classification",
        scoring=scoring,
        cv=cv,
    )

    scores1["model"] = "svm"





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-25 08:56:39,136 - julearn - INFO - ==== Input Data ====
    2023-04-25 08:56:39,136 - julearn - INFO - Using dataframe as input
    2023-04-25 08:56:39,136 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:39,136 - julearn - INFO -      Target: species
    2023-04-25 08:56:39,136 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:39,136 - julearn - INFO -      X_types:{}
    2023-04-25 08:56:39,136 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-25 08:56:39,137 - julearn - INFO - ====================
    2023-04-25 08:56:39,137 - julearn - INFO - 
    2023-04-25 08:56:39,137 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:39,137 - julearn - INFO - Step added
    2023-04-25 08:56:39,137 - julearn - INFO - Adding step svm that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:39,138 - julearn - INFO - Step added
    2023-04-25 08:56:39,138 - julearn - INFO - = Model Parameters =
    2023-04-25 08:56:39,138 - julearn - INFO - ====================
    2023-04-25 08:56:39,138 - julearn - INFO - 
    2023-04-25 08:56:39,138 - julearn - INFO - = Data Information =
    2023-04-25 08:56:39,138 - julearn - INFO -      Problem type: classification
    2023-04-25 08:56:39,138 - julearn - INFO -      Number of samples: 80
    2023-04-25 08:56:39,138 - julearn - INFO -      Number of features: 3
    2023-04-25 08:56:39,138 - julearn - INFO - ====================
    2023-04-25 08:56:39,138 - julearn - INFO - 
    2023-04-25 08:56:39,139 - julearn - INFO -      Number of classes: 2
    2023-04-25 08:56:39,139 - julearn - INFO -      Target type: object
    2023-04-25 08:56:39,139 - julearn - INFO -      Class distributions: virginica     50
    versicolor    30
    Name: species, dtype: int64
    2023-04-25 08:56:39,140 - julearn - INFO - Using outer CV scheme RepeatedStratifiedKFold(n_repeats=5, n_splits=5, random_state=42)
    2023-04-25 08:56:39,140 - julearn - INFO - Binary classification problem detected.




.. GENERATED FROM PYTHON SOURCE LINES 87-88

Second we will use a default Random Forest model.

.. GENERATED FROM PYTHON SOURCE LINES 88-101

.. code-block:: default

    scores2 = run_cross_validation(
        X=X,
        y=y,
        data=df_unbalanced,
        model="rf",
        preprocess="zscore",
        problem_type="classification",
        scoring=scoring,
        cv=cv,
    )

    scores2["model"] = "rf"





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-25 08:56:39,479 - julearn - INFO - ==== Input Data ====
    2023-04-25 08:56:39,480 - julearn - INFO - Using dataframe as input
    2023-04-25 08:56:39,480 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:39,480 - julearn - INFO -      Target: species
    2023-04-25 08:56:39,480 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:39,480 - julearn - INFO -      X_types:{}
    2023-04-25 08:56:39,480 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-25 08:56:39,481 - julearn - INFO - ====================
    2023-04-25 08:56:39,481 - julearn - INFO - 
    2023-04-25 08:56:39,481 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:39,481 - julearn - INFO - Step added
    2023-04-25 08:56:39,481 - julearn - INFO - Adding step rf that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:39,481 - julearn - INFO - Step added
    2023-04-25 08:56:39,482 - julearn - INFO - = Model Parameters =
    2023-04-25 08:56:39,482 - julearn - INFO - ====================
    2023-04-25 08:56:39,482 - julearn - INFO - 
    2023-04-25 08:56:39,482 - julearn - INFO - = Data Information =
    2023-04-25 08:56:39,482 - julearn - INFO -      Problem type: classification
    2023-04-25 08:56:39,482 - julearn - INFO -      Number of samples: 80
    2023-04-25 08:56:39,482 - julearn - INFO -      Number of features: 3
    2023-04-25 08:56:39,482 - julearn - INFO - ====================
    2023-04-25 08:56:39,482 - julearn - INFO - 
    2023-04-25 08:56:39,483 - julearn - INFO -      Number of classes: 2
    2023-04-25 08:56:39,483 - julearn - INFO -      Target type: object
    2023-04-25 08:56:39,483 - julearn - INFO -      Class distributions: virginica     50
    versicolor    30
    Name: species, dtype: int64
    2023-04-25 08:56:39,484 - julearn - INFO - Using outer CV scheme RepeatedStratifiedKFold(n_repeats=5, n_splits=5, random_state=42)
    2023-04-25 08:56:39,484 - julearn - INFO - Binary classification problem detected.




.. GENERATED FROM PYTHON SOURCE LINES 102-103

The third model will be a SVM with a linear kernel.

.. GENERATED FROM PYTHON SOURCE LINES 103-118

.. code-block:: default

    scores3 = run_cross_validation(
        X=X,
        y=y,
        data=df_unbalanced,
        model="svm",
        model_params={"svm__kernel": "linear"},
        preprocess="zscore",
        problem_type="classification",
        scoring=scoring,
        cv=cv,
    )

    scores3["model"] = "svm_linear"

    stats_df = corrected_ttest(scores1, scores2, scores3)
    print(stats_df)



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-04-25 08:56:43,315 - julearn - INFO - ==== Input Data ====
    2023-04-25 08:56:43,315 - julearn - INFO - Using dataframe as input
    2023-04-25 08:56:43,315 - julearn - INFO -      Features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:43,315 - julearn - INFO -      Target: species
    2023-04-25 08:56:43,315 - julearn - INFO -      Expanded features: ['sepal_length', 'sepal_width', 'petal_length']
    2023-04-25 08:56:43,315 - julearn - INFO -      X_types:{}
    2023-04-25 08:56:43,316 - julearn - WARNING - The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
    /home/runner/work/julearn/julearn/julearn/utils/logging.py:238: RuntimeWarning: The following columns are not defined in X_types: ['sepal_length', 'sepal_width', 'petal_length']. They will be treated as continuous.
      warn(msg, category=category)
    2023-04-25 08:56:43,316 - julearn - INFO - ====================
    2023-04-25 08:56:43,317 - julearn - INFO - 
    2023-04-25 08:56:43,317 - julearn - INFO - Adding step zscore that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:43,317 - julearn - INFO - Step added
    2023-04-25 08:56:43,317 - julearn - INFO - Adding step svm that applies to ColumnTypes<types={'continuous'}; pattern=(?:__:type:__continuous)>
    2023-04-25 08:56:43,317 - julearn - INFO - Setting hyperparameter kernel = linear
    2023-04-25 08:56:43,317 - julearn - INFO - Step added
    2023-04-25 08:56:43,318 - julearn - INFO - = Model Parameters =
    2023-04-25 08:56:43,318 - julearn - INFO - ====================
    2023-04-25 08:56:43,318 - julearn - INFO - 
    2023-04-25 08:56:43,318 - julearn - INFO - = Data Information =
    2023-04-25 08:56:43,318 - julearn - INFO -      Problem type: classification
    2023-04-25 08:56:43,318 - julearn - INFO -      Number of samples: 80
    2023-04-25 08:56:43,318 - julearn - INFO -      Number of features: 3
    2023-04-25 08:56:43,318 - julearn - INFO - ====================
    2023-04-25 08:56:43,318 - julearn - INFO - 
    2023-04-25 08:56:43,318 - julearn - INFO -      Number of classes: 2
    2023-04-25 08:56:43,318 - julearn - INFO -      Target type: object
    2023-04-25 08:56:43,319 - julearn - INFO -      Class distributions: virginica     50
    versicolor    30
    Name: species, dtype: int64
    2023-04-25 08:56:43,319 - julearn - INFO - Using outer CV scheme RepeatedStratifiedKFold(n_repeats=5, n_splits=5, random_state=42)
    2023-04-25 08:56:43,319 - julearn - INFO - Binary classification problem detected.
                        metric      t-stat  ...     model_2 p-val-corrected
    0                 fit_time -482.525527  ...          rf    6.949674e-49
    4                 fit_time    0.460649  ...  svm_linear    1.000000e+00
    8                 fit_time  452.916749  ...  svm_linear    3.176440e-48
    1               score_time -200.498829  ...          rf    9.846752e-40
    5               score_time    1.552634  ...  svm_linear    4.007972e-01
    9               score_time  220.883453  ...  svm_linear    9.651331e-41
    2   test_balanced_accuracy   -0.175075  ...          rf    1.000000e+00
    6   test_balanced_accuracy   -1.062567  ...  svm_linear    8.956618e-01
    10  test_balanced_accuracy   -1.151390  ...  svm_linear    7.827413e-01
    3             test_roc_auc    1.108944  ...          rf    8.353309e-01
    7             test_roc_auc   -1.236153  ...  svm_linear    6.850917e-01
    11            test_roc_auc   -1.669010  ...  svm_linear    3.243310e-01

    [12 rows x 6 columns]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.613 seconds)


.. _sphx_glr_download_auto_examples_01_model_comparison_run_simple_model_comparison.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_simple_model_comparison.py <run_simple_model_comparison.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_simple_model_comparison.ipynb <run_simple_model_comparison.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
