Search.setIndex({"docnames": ["api/base", "api/generated/julearn.PipelineCreator", "api/generated/julearn.TargetPipelineCreator", "api/generated/julearn.base.ColumnTypes", "api/generated/julearn.base.ColumnTypesLike", "api/generated/julearn.base.JuBaseEstimator", "api/generated/julearn.base.JuTransformer", "api/generated/julearn.base.WrapModel", "api/generated/julearn.base.change_column_type", "api/generated/julearn.base.ensure_column_types", "api/generated/julearn.base.get_column_type", "api/generated/julearn.base.make_type_selector", "api/generated/julearn.inspect.FoldsInspector", "api/generated/julearn.inspect.Inspector", "api/generated/julearn.inspect.preprocess", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.ContinuousStratifiedKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold", "api/generated/julearn.model_selection.StratifiedBootstrap", "api/generated/julearn.model_selection.get_searcher", "api/generated/julearn.model_selection.list_searchers", "api/generated/julearn.model_selection.register_searcher", "api/generated/julearn.model_selection.reset_searcher_register", "api/generated/julearn.models.dynamic.DynamicSelection", "api/generated/julearn.models.get_model", "api/generated/julearn.models.list_models", "api/generated/julearn.models.register_model", "api/generated/julearn.models.reset_model_register", "api/generated/julearn.pipeline.JuTargetPipeline", "api/generated/julearn.pipeline.pipeline_creator.Step", "api/generated/julearn.prepare.check_consistency", "api/generated/julearn.prepare.prepare_input_data", "api/generated/julearn.run_cross_validation", "api/generated/julearn.scoring.check_scoring", "api/generated/julearn.scoring.get_scorer", "api/generated/julearn.scoring.list_scorers", "api/generated/julearn.scoring.metrics.r2_corr", "api/generated/julearn.scoring.metrics.r_corr", "api/generated/julearn.scoring.register_scorer", "api/generated/julearn.scoring.reset_scorer_register", "api/generated/julearn.stats.corrected_ttest", "api/generated/julearn.transformers.CBPM", "api/generated/julearn.transformers.ChangeColumnTypes", "api/generated/julearn.transformers.DropColumns", "api/generated/julearn.transformers.FilterColumns", "api/generated/julearn.transformers.JuColumnTransformer", "api/generated/julearn.transformers.SetColumnTypes", "api/generated/julearn.transformers.confound_remover.ConfoundRemover", "api/generated/julearn.transformers.get_transformer", "api/generated/julearn.transformers.list_transformers", "api/generated/julearn.transformers.register_transformer", "api/generated/julearn.transformers.reset_transformer_register", "api/generated/julearn.transformers.target.JuTargetTransformer", "api/generated/julearn.transformers.target.JuTransformedTargetModel", "api/generated/julearn.transformers.target.TargetConfoundRemover", "api/generated/julearn.transformers.target.TransformedTargetWarning", "api/generated/julearn.transformers.target.get_target_transformer", "api/generated/julearn.transformers.target.list_target_transformers", "api/generated/julearn.transformers.target.register_target_transformer", "api/generated/julearn.transformers.target.reset_target_transformer_register", "api/generated/julearn.utils.configure_logging", "api/generated/julearn.utils.logger", "api/generated/julearn.utils.raise_error", "api/generated/julearn.utils.typing.EstimatorLike", "api/generated/julearn.utils.typing.EstimatorLikeFit1", "api/generated/julearn.utils.typing.EstimatorLikeFit2", "api/generated/julearn.utils.typing.EstimatorLikeFity", "api/generated/julearn.utils.typing.JuEstimatorLike", "api/generated/julearn.utils.warn_with_log", "api/generated/julearn.viz.plot_scores", "api/index", "api/inspect", "api/main", "api/model_selection", "api/models", "api/pipeline", "api/prepare", "api/scoring", "api/stats", "api/transformers", "api/utils", "api/viz", "auto_examples/00_starting/index", "auto_examples/00_starting/plot_cm_acc_multiclass", "auto_examples/00_starting/plot_example_regression", "auto_examples/00_starting/plot_stratified_kfold_reg", "auto_examples/00_starting/run_combine_pandas", "auto_examples/00_starting/run_grouped_cv", "auto_examples/00_starting/run_simple_binary_classification", "auto_examples/00_starting/sg_execution_times", "auto_examples/01_model_comparison/index", "auto_examples/01_model_comparison/plot_simple_model_comparison", "auto_examples/01_model_comparison/sg_execution_times", "auto_examples/02_inspection/index", "auto_examples/02_inspection/plot_groupcv_inspect_svm", "auto_examples/02_inspection/plot_inspect_random_forest", "auto_examples/02_inspection/plot_preprocess", "auto_examples/02_inspection/run_binary_inspect_folds", "auto_examples/02_inspection/sg_execution_times", "auto_examples/03_complex_models/index", "auto_examples/03_complex_models/run_apply_to_target", "auto_examples/03_complex_models/run_example_pca_featsets", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids", "auto_examples/03_complex_models/run_hyperparameter_tuning", "auto_examples/03_complex_models/run_stacked_models", "auto_examples/03_complex_models/sg_execution_times", "auto_examples/04_confounds/index", "auto_examples/04_confounds/plot_confound_removal_classification", "auto_examples/04_confounds/run_return_confounds", "auto_examples/04_confounds/sg_execution_times", "auto_examples/05_customization/index", "auto_examples/05_customization/run_custom_scorers_regression", "auto_examples/05_customization/sg_execution_times", "available_pipeline_steps", "configuration", "contributing", "examples", "faq", "getting_started", "index", "maintaining", "selected_deeper_topics/CBPM", "selected_deeper_topics/confound_removal", "selected_deeper_topics/cross_validation_splitter", "selected_deeper_topics/hyperparameter_tuning", "selected_deeper_topics/index", "selected_deeper_topics/model_inspect", "selected_deeper_topics/stacked_models", "selected_deeper_topics/target_transformers", "what_really_need_know/cross_validation", "what_really_need_know/data", "what_really_need_know/index", "what_really_need_know/model_comparison", "what_really_need_know/model_evaluation", "what_really_need_know/pipeline", "whats_new"], "filenames": ["api/base.rst", "api/generated/julearn.PipelineCreator.rst", "api/generated/julearn.TargetPipelineCreator.rst", "api/generated/julearn.base.ColumnTypes.rst", "api/generated/julearn.base.ColumnTypesLike.rst", "api/generated/julearn.base.JuBaseEstimator.rst", "api/generated/julearn.base.JuTransformer.rst", "api/generated/julearn.base.WrapModel.rst", "api/generated/julearn.base.change_column_type.rst", "api/generated/julearn.base.ensure_column_types.rst", "api/generated/julearn.base.get_column_type.rst", "api/generated/julearn.base.make_type_selector.rst", "api/generated/julearn.inspect.FoldsInspector.rst", "api/generated/julearn.inspect.Inspector.rst", "api/generated/julearn.inspect.preprocess.rst", "api/generated/julearn.model_selection.ContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.ContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.rst", "api/generated/julearn.model_selection.RepeatedContinuousStratifiedKFold.rst", "api/generated/julearn.model_selection.StratifiedBootstrap.rst", "api/generated/julearn.model_selection.get_searcher.rst", "api/generated/julearn.model_selection.list_searchers.rst", "api/generated/julearn.model_selection.register_searcher.rst", "api/generated/julearn.model_selection.reset_searcher_register.rst", "api/generated/julearn.models.dynamic.DynamicSelection.rst", "api/generated/julearn.models.get_model.rst", "api/generated/julearn.models.list_models.rst", "api/generated/julearn.models.register_model.rst", "api/generated/julearn.models.reset_model_register.rst", "api/generated/julearn.pipeline.JuTargetPipeline.rst", "api/generated/julearn.pipeline.pipeline_creator.Step.rst", "api/generated/julearn.prepare.check_consistency.rst", "api/generated/julearn.prepare.prepare_input_data.rst", "api/generated/julearn.run_cross_validation.rst", "api/generated/julearn.scoring.check_scoring.rst", "api/generated/julearn.scoring.get_scorer.rst", "api/generated/julearn.scoring.list_scorers.rst", "api/generated/julearn.scoring.metrics.r2_corr.rst", "api/generated/julearn.scoring.metrics.r_corr.rst", "api/generated/julearn.scoring.register_scorer.rst", "api/generated/julearn.scoring.reset_scorer_register.rst", "api/generated/julearn.stats.corrected_ttest.rst", "api/generated/julearn.transformers.CBPM.rst", "api/generated/julearn.transformers.ChangeColumnTypes.rst", "api/generated/julearn.transformers.DropColumns.rst", "api/generated/julearn.transformers.FilterColumns.rst", "api/generated/julearn.transformers.JuColumnTransformer.rst", "api/generated/julearn.transformers.SetColumnTypes.rst", "api/generated/julearn.transformers.confound_remover.ConfoundRemover.rst", "api/generated/julearn.transformers.get_transformer.rst", "api/generated/julearn.transformers.list_transformers.rst", "api/generated/julearn.transformers.register_transformer.rst", "api/generated/julearn.transformers.reset_transformer_register.rst", "api/generated/julearn.transformers.target.JuTargetTransformer.rst", "api/generated/julearn.transformers.target.JuTransformedTargetModel.rst", "api/generated/julearn.transformers.target.TargetConfoundRemover.rst", "api/generated/julearn.transformers.target.TransformedTargetWarning.rst", "api/generated/julearn.transformers.target.get_target_transformer.rst", "api/generated/julearn.transformers.target.list_target_transformers.rst", "api/generated/julearn.transformers.target.register_target_transformer.rst", "api/generated/julearn.transformers.target.reset_target_transformer_register.rst", "api/generated/julearn.utils.configure_logging.rst", "api/generated/julearn.utils.logger.rst", "api/generated/julearn.utils.raise_error.rst", "api/generated/julearn.utils.typing.EstimatorLike.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit1.rst", "api/generated/julearn.utils.typing.EstimatorLikeFit2.rst", "api/generated/julearn.utils.typing.EstimatorLikeFity.rst", "api/generated/julearn.utils.typing.JuEstimatorLike.rst", "api/generated/julearn.utils.warn_with_log.rst", "api/generated/julearn.viz.plot_scores.rst", "api/index.rst", "api/inspect.rst", "api/main.rst", "api/model_selection.rst", "api/models.rst", "api/pipeline.rst", "api/prepare.rst", "api/scoring.rst", "api/stats.rst", "api/transformers.rst", "api/utils.rst", "api/viz.rst", "auto_examples/00_starting/index.rst", "auto_examples/00_starting/plot_cm_acc_multiclass.rst", "auto_examples/00_starting/plot_example_regression.rst", "auto_examples/00_starting/plot_stratified_kfold_reg.rst", "auto_examples/00_starting/run_combine_pandas.rst", "auto_examples/00_starting/run_grouped_cv.rst", "auto_examples/00_starting/run_simple_binary_classification.rst", "auto_examples/00_starting/sg_execution_times.rst", "auto_examples/01_model_comparison/index.rst", "auto_examples/01_model_comparison/plot_simple_model_comparison.rst", "auto_examples/01_model_comparison/sg_execution_times.rst", "auto_examples/02_inspection/index.rst", "auto_examples/02_inspection/plot_groupcv_inspect_svm.rst", "auto_examples/02_inspection/plot_inspect_random_forest.rst", "auto_examples/02_inspection/plot_preprocess.rst", "auto_examples/02_inspection/run_binary_inspect_folds.rst", "auto_examples/02_inspection/sg_execution_times.rst", "auto_examples/03_complex_models/index.rst", "auto_examples/03_complex_models/run_apply_to_target.rst", "auto_examples/03_complex_models/run_example_pca_featsets.rst", "auto_examples/03_complex_models/run_hyperparameter_multiple_grids.rst", "auto_examples/03_complex_models/run_hyperparameter_tuning.rst", "auto_examples/03_complex_models/run_stacked_models.rst", "auto_examples/03_complex_models/sg_execution_times.rst", "auto_examples/04_confounds/index.rst", "auto_examples/04_confounds/plot_confound_removal_classification.rst", "auto_examples/04_confounds/run_return_confounds.rst", "auto_examples/04_confounds/sg_execution_times.rst", "auto_examples/05_customization/index.rst", "auto_examples/05_customization/run_custom_scorers_regression.rst", "auto_examples/05_customization/sg_execution_times.rst", "available_pipeline_steps.rst", "configuration.rst", "contributing.rst", "examples.rst", "faq.rst", "getting_started.rst", "index.rst", "maintaining.rst", "selected_deeper_topics/CBPM.rst", "selected_deeper_topics/confound_removal.rst", "selected_deeper_topics/cross_validation_splitter.rst", "selected_deeper_topics/hyperparameter_tuning.rst", "selected_deeper_topics/index.rst", "selected_deeper_topics/model_inspect.rst", "selected_deeper_topics/stacked_models.rst", "selected_deeper_topics/target_transformers.rst", "what_really_need_know/cross_validation.rst", "what_really_need_know/data.rst", "what_really_need_know/index.rst", "what_really_need_know/model_comparison.rst", "what_really_need_know/model_evaluation.rst", "what_really_need_know/pipeline.rst", "whats_new.rst"], "titles": ["<span class=\"section-number\">9.4. </span>Base", "julearn.PipelineCreator", "julearn.TargetPipelineCreator", "julearn.base.ColumnTypes", "julearn.base.ColumnTypesLike", "julearn.base.JuBaseEstimator", "julearn.base.JuTransformer", "julearn.base.WrapModel", "julearn.base.change_column_type", "julearn.base.ensure_column_types", "julearn.base.get_column_type", "julearn.base.make_type_selector", "julearn.inspect.FoldsInspector", "julearn.inspect.Inspector", "julearn.inspect.preprocess", "julearn.model_selection.ContinuousStratifiedGroupKFold", "julearn.model_selection.ContinuousStratifiedKFold", "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold", "julearn.model_selection.RepeatedContinuousStratifiedKFold", "julearn.model_selection.StratifiedBootstrap", "julearn.model_selection.get_searcher", "julearn.model_selection.list_searchers", "julearn.model_selection.register_searcher", "julearn.model_selection.reset_searcher_register", "julearn.models.dynamic.DynamicSelection", "julearn.models.get_model", "julearn.models.list_models", "julearn.models.register_model", "julearn.models.reset_model_register", "julearn.pipeline.JuTargetPipeline", "julearn.pipeline.pipeline_creator.Step", "julearn.prepare.check_consistency", "julearn.prepare.prepare_input_data", "julearn.run_cross_validation", "julearn.scoring.check_scoring", "julearn.scoring.get_scorer", "julearn.scoring.list_scorers", "julearn.scoring.metrics.r2_corr", "julearn.scoring.metrics.r_corr", "julearn.scoring.register_scorer", "julearn.scoring.reset_scorer_register", "julearn.stats.corrected_ttest", "julearn.transformers.CBPM", "julearn.transformers.ChangeColumnTypes", "julearn.transformers.DropColumns", "julearn.transformers.FilterColumns", "julearn.transformers.JuColumnTransformer", "julearn.transformers.SetColumnTypes", "julearn.transformers.confound_remover.ConfoundRemover", "julearn.transformers.get_transformer", "julearn.transformers.list_transformers", "julearn.transformers.register_transformer", "julearn.transformers.reset_transformer_register", "julearn.transformers.target.JuTargetTransformer", "julearn.transformers.target.JuTransformedTargetModel", "julearn.transformers.target.TargetConfoundRemover", "julearn.transformers.target.TransformedTargetWarning", "julearn.transformers.target.get_target_transformer", "julearn.transformers.target.list_target_transformers", "julearn.transformers.target.register_target_transformer", "julearn.transformers.target.reset_target_transformer_register", "julearn.utils.configure_logging", "julearn.utils.logger", "julearn.utils.raise_error", "julearn.utils.typing.EstimatorLike", "julearn.utils.typing.EstimatorLikeFit1", "julearn.utils.typing.EstimatorLikeFit2", "julearn.utils.typing.EstimatorLikeFity", "julearn.utils.typing.JuEstimatorLike", "julearn.utils.warn_with_log", "julearn.viz.plot_scores", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">9.5. </span>Inspect", "<span class=\"section-number\">9.1. </span>Main API", "<span class=\"section-number\">9.3. </span>Model Selection", "<span class=\"section-number\">9.6. </span>Models", "<span class=\"section-number\">9.2. </span>Pipeline", "<span class=\"section-number\">9.14. </span>Prepare", "<span class=\"section-number\">9.8. </span>Scoring", "<span class=\"section-number\">9.15. </span>Stats", "<span class=\"section-number\">9.10. </span>Transformers", "<span class=\"section-number\">9.12. </span>Utils", "<span class=\"section-number\">9.16. </span>Visualization", "<span class=\"section-number\">8.1. </span>Starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "Multiclass Classification", "Regression Analysis", "Stratified K-fold CV for regression analysis", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">pandas</span></code>", "Grouped CV", "Simple Binary Classification", "Computation times", "<span class=\"section-number\">8.2. </span>Model Comparison", "Simple Model Comparison", "Computation times", "<span class=\"section-number\">8.3. </span>Inspection", "Inspecting SVM models", "Inspecting Random Forest models", "Preprocessing with variance threshold, zscore and PCA", "Inspecting the fold-wise predictions", "Computation times", "<span class=\"section-number\">8.4. </span>Complex Models", "Transforming target variable with z-score", "Regression Analysis", "Tuning Multiple Hyperparameters Grids", "Tuning Hyperparameters", "Stacking Classification", "Computation times", "<span class=\"section-number\">8.5. </span>Confounds", "Confound Removal (model comparison)", "Return Confounds in Confound Removal", "Computation times", "<span class=\"section-number\">8.6. </span>Customization", "Custom Scoring Function for Regression", "Computation times", "<span class=\"section-number\">7. </span>Overview of available Pipeline Steps", "<span class=\"section-number\">10. </span>Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">julearn</span></code>", "<span class=\"section-number\">11. </span>Contributing", "<span class=\"section-number\">8. </span>Examples", "<span class=\"section-number\">13. </span>FAQs", "<span class=\"section-number\">1. </span>Getting started", "Welcome to julearn\u2019s documentation!", "<span class=\"section-number\">12. </span>Maintaining", "<span class=\"section-number\">6.7. </span>Connectome-based Predictive Modeling (CBPM)", "<span class=\"section-number\">6.2. </span>Cross-validation consistent Confound Removal", "<span class=\"section-number\">6.5. </span>Cross-validation splitters", "<span class=\"section-number\">6.3. </span>Hyperparameter Tuning", "<span class=\"section-number\">6. </span>Selected deeper topics", "<span class=\"section-number\">6.4. </span>Inspecting Models", "<span class=\"section-number\">6.6. </span>Stacking Models", "<span class=\"section-number\">6.1. </span>Applying preprocessing to the target", "<span class=\"section-number\">5.1. </span>Why cross validation?", "<span class=\"section-number\">5.2. </span>Data", "<span class=\"section-number\">5. </span>What you really need to know", "<span class=\"section-number\">5.5. </span>Model Comparison", "<span class=\"section-number\">5.4. </span>Model Evaluation", "<span class=\"section-number\">5.3. </span>Model Building", "<span class=\"section-number\">14. </span>What\u2019s new"], "terms": {"provid": [0, 1, 3, 5, 13, 15, 16, 19, 24, 33, 54, 75, 87, 109, 115, 120, 123, 124, 125, 127, 128, 130, 131, 133, 134, 135, 136], "import": [0, 29, 53, 84, 85, 86, 87, 88, 89, 92, 95, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135], "modul": [0, 33, 75, 82, 109, 115, 119, 120, 129, 130], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135], "page": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 124, 134], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "refer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 97, 114, 116, 120, 125, 132], "document": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 86, 92, 96, 114, 124, 125, 133, 134, 135], "It": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 95, 103, 104, 119, 120, 122, 124, 125, 127, 134, 135], "onli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 86, 95, 97, 103, 108, 109, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "explain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 124, 135], "class": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19, 22, 24, 27, 29, 30, 33, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 88, 89, 92, 95, 96, 98, 103, 104, 105, 108, 109, 114, 123, 124, 125, 127, 133, 134, 135], "signatur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "how": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 88, 89, 92, 94, 95, 96, 100, 102, 109, 114, 116, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135], "pleas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 82, 97, 109, 116, 120, 134, 135], "what": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 87, 88, 95, 102, 104, 109, 114, 123, 124, 125, 127, 128, 129, 131, 134, 135], "you": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 84, 87, 92, 97, 109, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 133, 134, 135], "realli": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 108, 120], "need": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 87, 88, 89, 92, 95, 101, 108, 109, 112, 116, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133, 134, 135, 136], "know": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 104, 120, 124, 127, 130, 133, 135], "section": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 124, 131, 133, 134, 135, 136], "big": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "pictur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "problem_typ": [1, 25, 31, 33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "apply_to": [1, 5, 6, 7, 30, 43, 44, 45, 46, 47, 48, 54, 97, 101, 102, 105, 108, 109, 123, 127, 128, 129, 135], "continu": [1, 7, 30, 43, 45, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 108, 109, 112, 122, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136], "creat": [1, 2, 3, 42, 84, 86, 87, 89, 95, 97, 101, 102, 105, 114, 116, 118, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "pipelin": [1, 2, 5, 6, 7, 14, 15, 24, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 53, 54, 71, 77, 95, 97, 98, 101, 102, 103, 104, 105, 108, 109, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136], "As": [1, 87, 89, 92, 98, 105, 108, 109, 112, 116, 118, 122, 123, 124, 125, 127, 128, 133, 134, 135], "creation": 1, "bit": [1, 103, 119, 128, 134], "more": [1, 3, 33, 41, 84, 85, 86, 87, 88, 89, 92, 95, 97, 102, 108, 112, 116, 119, 120, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 136], "complic": [1, 130], "than": [1, 33, 41, 86, 87, 95, 120, 123, 124, 126, 135], "just": [1, 116, 120, 124, 127, 132, 135], "ad": [1, 6, 33, 42, 43, 44, 45, 46, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 120, 122, 123, 125, 127, 128, 129, 131, 133, 134, 135, 136], "step": [1, 2, 14, 29, 33, 41, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135], "helper": 1, "so": [1, 5, 6, 7, 24, 39, 42, 43, 44, 45, 46, 47, 48, 54, 86, 87, 89, 92, 97, 104, 114, 116, 118, 124, 125, 129, 131, 134, 135], "user": [1, 5, 6, 7, 15, 16, 17, 18, 19, 22, 24, 27, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 56, 59, 61, 97, 109, 112, 115, 119, 120, 123, 125, 130, 135, 136], "can": [1, 3, 15, 16, 17, 18, 19, 22, 24, 27, 29, 31, 33, 39, 41, 42, 46, 48, 51, 54, 59, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 108, 109, 112, 114, 115, 116, 118, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "easili": [1, 122, 124], "complex": [1, 87, 95, 105, 117, 120, 123, 124, 127, 135], "sklearn": [1, 3, 5, 7, 11, 15, 24, 29, 46, 48, 55, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "object": [1, 2, 5, 6, 7, 15, 16, 17, 18, 19, 24, 25, 31, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 57, 84, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 118, 123, 125, 127, 128, 129, 134, 135, 136], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 61, 63, 65, 66, 67, 68, 69, 70, 77, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "classif": [1, 27, 31, 33, 61, 83, 88, 90, 92, 95, 96, 98, 100, 103, 104, 106, 108, 116, 124, 125, 127, 128, 133, 134, 135], "regress": [1, 14, 15, 16, 27, 31, 33, 39, 61, 83, 90, 97, 100, 101, 105, 106, 109, 111, 113, 114, 122, 125, 126, 128, 129, 133, 134, 135, 136], "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 61, 63, 65, 66, 67, 68, 69, 70, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 135, 136], "problem": [1, 15, 16, 17, 18, 19, 25, 27, 31, 33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136], "type": [1, 3, 5, 6, 7, 8, 10, 11, 14, 25, 27, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 54, 55, 71, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 120, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134], "which": [1, 5, 6, 15, 16, 22, 27, 30, 33, 42, 43, 44, 45, 46, 47, 48, 51, 55, 59, 82, 85, 86, 88, 89, 95, 97, 101, 102, 103, 104, 108, 109, 112, 116, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 135], "should": [1, 5, 6, 15, 19, 22, 24, 27, 30, 39, 42, 43, 44, 45, 46, 47, 48, 51, 59, 86, 97, 102, 108, 109, 114, 116, 121, 122, 124, 125, 126, 129, 130, 134, 135], "columntypeslik": [1, 30, 43, 44, 45, 46, 48, 109], "option": [1, 2, 6, 7, 13, 14, 15, 22, 24, 27, 30, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 55, 59, 61, 63, 65, 66, 67, 68, 69, 70, 75, 82, 86, 87, 96, 108, 109, 118, 120, 121, 124, 131, 134], "To": [1, 46, 48, 95, 97, 103, 109, 116, 118, 120, 122, 124, 125, 128, 130, 131, 133, 134, 135], "transform": [1, 2, 6, 29, 33, 34, 61, 71, 87, 97, 100, 106, 109, 120, 122, 123, 127, 129, 130, 135, 136], "appli": [1, 2, 5, 6, 7, 30, 33, 42, 43, 44, 45, 46, 47, 48, 54, 55, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 120, 122, 123, 125, 126, 127, 128, 133, 134, 135], "specifi": [1, 19, 20, 22, 32, 33, 45, 48, 55, 57, 87, 95, 96, 102, 103, 109, 114, 119, 120, 122, 123, 125, 128, 129, 130, 131, 132, 134, 135], "add": [1, 2, 3, 22, 27, 51, 97, 98, 101, 102, 103, 104, 105, 108, 109, 116, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136], "method": [1, 5, 6, 7, 15, 16, 17, 18, 24, 41, 42, 43, 44, 45, 46, 47, 48, 54, 86, 87, 97, 103, 109, 115, 119, 122, 124, 127, 135], "default": [1, 2, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 30, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 54, 55, 59, 61, 63, 65, 66, 67, 68, 69, 70, 92, 95, 97, 103, 104, 105, 108, 109, 114, 118, 119, 122, 123, 125, 133, 134, 135, 136], "__init__": [1, 2, 3, 5, 6, 7, 12, 13, 15, 16, 17, 18, 19, 24, 29, 30, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 65, 66, 67, 68], "name": [1, 2, 5, 6, 7, 8, 14, 15, 20, 21, 22, 24, 25, 26, 27, 30, 33, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 61, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135], "none": [1, 2, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 29, 30, 31, 32, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 55, 59, 61, 63, 85, 86, 87, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "row_select_col_typ": [1, 6, 30, 43, 44, 45, 46, 47, 48, 109], "row_select_v": [1, 6, 30, 43, 44, 45, 46, 47, 48, 109], "param": [1, 2, 5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 49, 54, 57, 65, 66, 67, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119, 122, 123, 125, 127, 128, 129, 133, 134, 135], "estimatorlik": [1, 34, 46], "an": [1, 2, 6, 15, 16, 17, 18, 19, 24, 31, 33, 35, 42, 43, 44, 45, 46, 47, 48, 84, 87, 88, 89, 92, 95, 96, 97, 104, 108, 115, 116, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "available_transform": 1, "available_model": 1, "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 84, 85, 102, 109, 134, 135], "compat": [1, 15, 16, 17, 18, 19, 20, 22, 24, 33, 43, 44, 45, 46, 47, 48, 49, 55, 109, 119, 122, 134, 135, 136], "model": [1, 6, 7, 13, 14, 19, 33, 36, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 70, 71, 78, 84, 85, 86, 88, 89, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 110, 112, 115, 117, 120, 123, 124, 126, 129, 130, 132, 136], "If": [1, 2, 5, 6, 7, 13, 14, 19, 20, 22, 24, 27, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48, 51, 54, 57, 59, 61, 87, 89, 95, 97, 108, 109, 112, 115, 116, 119, 120, 123, 124, 125, 131, 132, 134, 135], "obtain": [1, 2, 7, 54, 96, 123, 130], "from": [1, 2, 3, 5, 24, 29, 32, 33, 42, 43, 48, 51, 53, 55, 59, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 116, 119, 120, 121, 122, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136], "repres": [1, 3, 19, 30, 48, 55, 86, 109, 124, 134], "column": [1, 3, 5, 6, 7, 8, 10, 11, 14, 24, 30, 32, 33, 43, 44, 45, 46, 47, 48, 54, 55, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 108, 109, 112, 114, 115, 122, 123, 125, 127, 128, 129, 131, 133, 134, 135, 136], "list": [1, 3, 4, 5, 6, 7, 13, 14, 21, 26, 29, 30, 32, 33, 36, 43, 44, 45, 46, 47, 48, 50, 55, 58, 65, 66, 68, 103, 109, 114, 115, 125, 127, 131, 134, 135], "attribut": [1, 5, 7, 9, 24, 42, 54, 127], "set": [1, 3, 4, 5, 6, 7, 13, 15, 16, 17, 18, 19, 22, 24, 29, 30, 33, 39, 42, 43, 44, 45, 46, 47, 48, 54, 55, 56, 65, 66, 67, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 117, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 136], "columntyp": [1, 4, 5, 6, 7, 9, 30, 43, 44, 45, 46, 47, 48, 54, 55, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "select": [1, 6, 7, 11, 24, 30, 43, 44, 45, 46, 47, 48, 71, 97, 109, 120, 122, 124, 125, 127, 131, 132, 133], "row": [1, 6, 30, 43, 44, 45, 46, 47, 48, 85, 86, 87, 88, 92, 95, 97, 98, 101, 102, 109, 112, 127, 129, 133, 134, 135], "int": [1, 6, 13, 15, 16, 17, 18, 19, 24, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 61, 70, 109, 134], "bool": [1, 5, 6, 7, 14, 15, 16, 22, 24, 27, 29, 30, 33, 34, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 59, 61, 65, 66, 67, 68, 109], "valu": [1, 5, 6, 7, 19, 24, 30, 33, 37, 38, 42, 43, 44, 45, 46, 47, 48, 54, 55, 84, 85, 86, 87, 88, 89, 95, 96, 97, 101, 102, 103, 104, 108, 109, 112, 114, 115, 122, 124, 125, 127, 131, 134, 135], "": [1, 5, 6, 7, 15, 16, 24, 30, 33, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 84, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 108, 109, 112, 114, 115, 116, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135], "train": [1, 6, 15, 16, 17, 18, 19, 24, 30, 33, 42, 43, 44, 45, 46, 47, 48, 55, 84, 85, 86, 88, 95, 97, 101, 102, 108, 109, 112, 123, 124, 125, 127, 129, 130, 133, 134, 135], "mostli": [1, 2, 124], "includ": [1, 2, 14, 19, 96, 97, 109, 115, 116, 119, 130], "hyperparamet": [1, 2, 33, 61, 92, 97, 100, 102, 105, 106, 108, 109, 120, 122, 123, 126, 127, 128, 132, 133, 136], "ani": [1, 2, 6, 7, 22, 24, 27, 29, 30, 31, 32, 33, 39, 43, 44, 45, 46, 47, 48, 51, 53, 59, 86, 115, 122, 124, 127, 135], "other": [1, 2, 15, 22, 24, 27, 51, 82, 87, 89, 102, 104, 109, 116, 118, 122, 123, 124, 132, 133, 135], "initi": [1, 2, 22, 23, 41, 51, 52, 59, 60, 108, 123, 128, 135], "multipl": [1, 15, 16, 17, 18, 19, 33, 61, 97, 100, 106, 124, 125, 134, 135, 136], "lead": [1, 119, 123, 124, 130, 135], "search": [1, 21, 22, 33, 97, 103, 104, 120, 125, 127, 128], "return": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 86, 95, 96, 107, 110, 112, 135], "its": [1, 5, 23, 52, 60, 116, 125, 127, 128, 130, 132, 135], "last": [1, 97, 102, 109, 121, 123, 135], "rais": [1, 13, 15, 20, 22, 24, 27, 31, 32, 39, 51, 57, 59, 61, 63, 131, 136], "valueerror": [1, 13, 20, 22, 27, 31, 32, 39, 51, 57, 59, 63], "valid": [1, 2, 13, 15, 16, 17, 18, 19, 31, 32, 33, 77, 84, 85, 96, 102, 108, 109, 114, 120, 122, 125, 126, 127, 131, 132, 133, 135], "targetpipelinecr": [1, 101, 114, 123, 129], "target": [1, 2, 6, 7, 13, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 34, 42, 43, 44, 45, 46, 47, 48, 61, 65, 66, 67, 68, 71, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 108, 109, 112, 114, 120, 122, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136], "properti": [1, 3, 7, 13, 29, 54, 55, 124], "get": [1, 3, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 24, 25, 29, 35, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 57, 65, 66, 67, 68, 84, 85, 88, 95, 96, 97, 102, 109, 120, 122, 127, 128, 133, 134], "have": [1, 5, 6, 7, 15, 16, 24, 32, 42, 43, 44, 45, 46, 47, 48, 54, 84, 87, 88, 89, 92, 95, 97, 103, 104, 108, 109, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135], "been": [1, 56, 122, 124, 127, 136], "has_model": 1, "whether": [1, 14, 15, 16, 22, 27, 33, 39, 42, 48, 51, 59, 65, 66, 67, 68, 88, 92, 95, 109, 116, 123, 134], "ha": [1, 15, 24, 33, 42, 56, 84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 102, 105, 108, 112, 115, 116, 122, 123, 124, 125, 127, 130, 134, 135, 136], "copi": [1, 3, 86, 109, 116, 127], "classmethod": 1, "from_list": 1, "model_param": [1, 33, 92, 136], "union": [1, 4, 29, 34, 64], "dict": [1, 5, 6, 7, 24, 25, 30, 32, 33, 42, 43, 44, 45, 46, 47, 48, 49, 54, 65, 66, 67, 68], "kei": [1, 32, 33, 43, 47, 87, 97, 131], "being": [1, 116, 119, 134, 135, 136], "pieplin": 1, "split": [1, 15, 16, 17, 18, 19, 24, 33, 84, 85, 86, 89, 92, 95, 101, 102, 112, 123, 124, 125, 127, 130, 134], "least": [1, 15, 16, 17, 18, 33, 86, 108, 114, 124], "two": [1, 41, 86, 87, 89, 92, 95, 96, 97, 98, 102, 103, 105, 108, 109, 112, 116, 119, 122, 123, 124, 125, 128, 130, 133, 135], "same": [1, 15, 16, 33, 47, 61, 89, 92, 95, 103, 104, 108, 112, 116, 120, 122, 123, 124, 125, 128, 130, 133, 134, 135], "consid": [1, 109, 115, 116, 121, 123, 125, 131, 134], "point": [1, 108, 116, 123, 124, 130, 132, 133, 134, 135], "tune": [1, 30, 33, 61, 100, 106, 120, 122, 123, 126, 127, 128, 129, 135, 136], "function": [1, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 63, 69, 70, 83, 89, 92, 95, 96, 97, 107, 109, 111, 113, 115, 116, 118, 119, 120, 122, 123, 130, 131, 132, 133, 134, 135, 136], "one": [1, 29, 33, 41, 43, 44, 45, 47, 53, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 105, 109, 112, 114, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "each": [1, 5, 6, 7, 15, 16, 17, 18, 19, 24, 32, 33, 42, 43, 44, 45, 46, 47, 48, 54, 55, 84, 85, 86, 87, 88, 95, 96, 97, 98, 102, 108, 109, 112, 114, 116, 122, 123, 124, 125, 126, 127, 130, 133, 134, 135], "recurs": 1, "thu": [1, 5, 95, 130], "mani": [1, 42, 88, 95, 123, 124, 134, 135], "all": [1, 3, 14, 21, 22, 26, 33, 36, 42, 43, 47, 48, 50, 55, 58, 84, 85, 88, 89, 95, 96, 97, 98, 102, 108, 109, 112, 114, 116, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135], "configur": [1, 6, 42, 43, 44, 45, 46, 47, 48, 61, 120, 123, 127, 128, 135], "A": [1, 5, 6, 7, 13, 15, 16, 17, 18, 19, 21, 24, 26, 32, 33, 42, 43, 44, 45, 46, 47, 48, 50, 54, 58, 86, 87, 88, 89, 95, 103, 104, 105, 109, 122, 123, 124, 125, 130, 131, 135], "without": [1, 22, 27, 39, 51, 59, 86, 88, 104, 108, 109, 114, 130], "repeat": [1, 17, 18, 84, 85, 102, 109, 112, 123, 124, 125, 127, 130, 134], "to_pipelin": [1, 2], "x_type": [1, 32, 33, 43, 44, 45, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 122, 123, 125, 127, 128, 129, 131, 133, 134, 135], "search_param": [1, 33, 103, 104, 136], "data": [1, 5, 6, 7, 14, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 77, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135], "inspect": [1, 33, 61, 71, 97, 99, 102, 109, 117, 120, 126, 130, 131, 133, 134], "fold": [1, 13, 15, 16, 17, 18, 33, 61, 83, 84, 85, 90, 94, 95, 96, 99, 101, 102, 108, 109, 112, 123, 124, 127, 129, 130, 134, 135], "wise": [1, 13, 33, 61, 94, 99, 130], "predict": [1, 7, 12, 13, 24, 32, 33, 37, 38, 42, 48, 54, 55, 61, 84, 85, 86, 87, 88, 89, 92, 94, 95, 99, 101, 102, 105, 109, 112, 114, 120, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135], "preprocess": [1, 2, 33, 61, 84, 85, 86, 88, 89, 92, 94, 95, 96, 99, 102, 108, 109, 112, 120, 122, 126, 131, 132, 134], "varianc": [1, 14, 33, 61, 94, 99, 114, 124, 127, 135], "threshold": [1, 14, 33, 42, 48, 55, 61, 94, 99, 109, 114, 122], "zscore": [1, 14, 33, 61, 84, 85, 86, 88, 89, 92, 94, 95, 96, 98, 99, 101, 103, 104, 105, 108, 112, 114, 125, 127, 129, 133, 134, 135], "pca": [1, 14, 33, 61, 94, 99, 102, 109, 114, 125, 135], "variabl": [1, 2, 15, 16, 17, 18, 19, 31, 32, 33, 61, 85, 86, 88, 95, 100, 102, 106, 109, 112, 123, 124, 125, 127, 129, 134, 135, 136], "z": [1, 2, 33, 61, 95, 100, 106, 121, 127, 129, 134, 135], "score": [1, 2, 7, 12, 13, 24, 33, 41, 54, 61, 70, 71, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 108, 109, 111, 113, 120, 122, 123, 125, 127, 128, 129, 132, 135, 136], "grid": [1, 33, 61, 95, 100, 104, 106, 126, 127, 128, 136], "stack": [1, 33, 61, 100, 106, 108, 114, 120, 126], "analysi": [1, 14, 16, 33, 61, 83, 90, 100, 101, 106, 112, 114, 124, 135], "confound": [1, 2, 14, 19, 33, 43, 48, 55, 61, 87, 110, 114, 117, 120, 126, 133, 136], "remov": [1, 2, 14, 19, 33, 43, 48, 55, 61, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 110, 112, 114, 116, 120, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136], "comparison": [1, 19, 33, 41, 61, 70, 93, 107, 110, 117, 120, 132], "connectom": [1, 33, 42, 114, 120, 126], "base": [1, 13, 15, 16, 19, 29, 33, 41, 42, 53, 71, 114, 118, 120, 123, 126, 127, 130, 131, 132, 135], "cbpm": [1, 33, 114, 120, 126, 136], "evalu": [1, 7, 33, 36, 54, 78, 89, 95, 120, 124, 127, 130, 131, 132, 133, 135], "build": [1, 33, 84, 88, 95, 100, 120, 121, 122, 128, 129, 130, 132, 133], "cross": [1, 2, 13, 15, 16, 17, 18, 19, 31, 33, 84, 85, 96, 102, 108, 109, 114, 120, 122, 125, 126, 127, 131, 132, 133, 135, 136], "consist": [1, 2, 24, 31, 33, 115, 120, 122, 124, 126, 130, 131, 133, 135, 136], "analog": 2, "pipelinecr": [2, 33, 97, 98, 101, 102, 103, 104, 105, 108, 109, 114, 122, 123, 125, 127, 128, 129, 132, 133, 134, 136], "allow": [2, 15, 22, 24, 27, 39, 51, 59, 89, 108, 115, 118, 122, 123, 125, 131, 132, 135, 136], "target_pipelin": [2, 123, 129], "jutargetpipelin": [2, 54, 101, 123, 129], "easi": [2, 87, 120, 123, 125, 127, 128, 132, 133], "wai": [2, 89, 92, 118, 120, 123, 124, 125, 127, 128, 130, 133, 134, 135], "out": [2, 21, 48, 58, 92, 109, 114, 120, 123, 124, 125, 127, 128, 132, 133, 134], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 114, 115, 116, 117, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "column_typ": [3, 127], "hold": [3, 134], "regard": [3, 131, 134], "pd": [3, 5, 6, 7, 13, 14, 24, 29, 33, 41, 43, 44, 45, 46, 47, 48, 53, 54, 55, 70, 84, 85, 86, 87, 95, 96, 97, 101, 102, 108, 112, 122, 123, 124, 128, 129, 133], "datafram": [3, 5, 6, 7, 13, 14, 24, 29, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 70, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "One": [3, 24, 87, 123, 125, 128, 135], "instead": [3, 15, 16, 19, 22, 24, 27, 39, 42, 51, 59, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136], "also": [3, 84, 86, 89, 92, 97, 102, 103, 109, 115, 116, 118, 120, 122, 123, 125, 127, 128, 130, 131, 133, 134, 135], "itself": [3, 128], "self": [3, 5, 6, 15, 24, 29, 42, 43, 44, 45, 46, 47, 48, 54, 56], "updat": [3, 5, 6, 7, 15, 24, 42, 43, 44, 45, 46, 47, 48, 54, 116, 119, 136], "pattern": [3, 11, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "regex": 3, "match": [3, 46, 87], "to_type_selector": 3, "selector": [3, 11], "usabl": [3, 135], "compos": [3, 11], "columntransform": [3, 11, 127], "callabl": [3, 34, 35, 39, 42, 136], "alia": [4, 15, 24, 62, 64], "needed_typ": [5, 6, 7, 29, 30, 46, 55], "estim": [5, 6, 7, 15, 24, 30, 33, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68, 95, 96, 97, 103, 104, 105, 108, 109, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135], "everi": [5, 27, 32, 33, 51, 121, 127, 131, 135], "awar": [5, 119], "thei": [5, 7, 24, 54, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 118, 122, 125, 127, 128, 134, 135], "abl": [5, 115, 130, 133], "main": [5, 71, 108, 116, 120, 121, 123, 124, 130], "differ": [5, 15, 16, 17, 18, 19, 27, 86, 87, 89, 92, 97, 102, 103, 104, 105, 108, 109, 118, 119, 122, 123, 124, 125, 127, 128, 130, 131, 133, 134, 135], "between": [5, 19, 31, 85, 108, 116, 122, 123, 124, 128, 130, 133, 135], "baseestim": [5, 136], "purpos": [5, 86, 87, 134], "That": [5, 122, 123, 124, 125, 127, 135], "ar": [5, 6, 7, 15, 16, 17, 18, 22, 24, 27, 29, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 59, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 108, 109, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136], "get_needed_typ": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 68], "get_apply_to": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 68], "filter_column": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 105, 114, 128], "x": [5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 24, 29, 32, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "panda": [5, 6, 7, 31, 32, 33, 42, 43, 44, 45, 46, 47, 48, 54, 83, 84, 85, 86, 88, 89, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 119, 120, 122, 123, 127, 128, 129, 131, 133, 134], "filter": [5, 6, 7, 43, 44, 45, 46, 47, 48, 54, 114, 120, 135, 136], "get_metadata_rout": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 109], "metadata": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 87, 109], "rout": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 109], "check": [5, 6, 7, 9, 15, 16, 17, 18, 19, 24, 29, 31, 34, 42, 43, 44, 45, 46, 47, 48, 54, 81, 87, 88, 95, 97, 108, 109, 115, 116, 120, 121, 125, 134, 136], "guid": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 109, 116], "mechan": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 109, 130], "work": [5, 6, 7, 15, 16, 17, 18, 19, 24, 29, 42, 43, 44, 45, 46, 47, 48, 53, 54, 83, 84, 85, 86, 88, 89, 90, 92, 95, 96, 97, 98, 101, 103, 104, 108, 109, 112, 116, 122, 123, 124, 125, 127, 128, 133, 136], "metadatarequest": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 109], "encapsul": [5, 6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 109], "inform": [5, 6, 7, 15, 16, 17, 18, 19, 24, 29, 33, 42, 43, 44, 45, 46, 47, 48, 53, 54, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 116, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "get_param": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68, 127], "deep": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68, 123], "true": [5, 6, 7, 15, 16, 22, 24, 27, 29, 33, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 59, 65, 66, 67, 68, 84, 85, 86, 89, 95, 96, 98, 101, 102, 108, 109, 112, 115, 123, 124, 127, 129, 130, 134, 135], "contain": [5, 6, 7, 24, 32, 33, 36, 41, 42, 43, 44, 45, 46, 47, 48, 54, 70, 84, 85, 86, 89, 101, 102, 112, 124, 127, 131, 134], "subobject": [5, 6, 7, 24, 42, 43, 44, 45, 47, 48, 54], "map": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 85, 109], "set_param": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 65, 66, 67, 68], "simpl": [5, 6, 7, 24, 33, 41, 42, 43, 44, 45, 46, 47, 48, 54, 61, 70, 83, 90, 91, 93, 95, 96, 97, 98, 103, 104, 108, 109, 114, 116, 120, 122, 124, 125, 127, 128, 130, 135], "well": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 115, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135], "nest": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 122, 125, 127, 130], "latter": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54], "form": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 131, 135], "compon": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 97, 102, 114, 135], "__": [5, 6, 7, 24, 42, 43, 44, 45, 46, 47, 48, 54, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 128, 129, 133, 134, 135], "possibl": [5, 6, 7, 22, 24, 27, 39, 42, 43, 44, 45, 46, 47, 48, 51, 54, 59, 87, 120, 124, 125, 130, 134, 135], "instanc": [5, 6, 7, 13, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54, 123, 127, 135], "fit": [6, 7, 24, 29, 33, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 67, 68, 95, 96, 102, 109, 114, 122, 123, 126, 127, 130, 135], "y": [6, 7, 12, 13, 15, 16, 17, 18, 19, 24, 29, 31, 32, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 65, 66, 67, 68, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135], "fit_param": [6, 7, 42, 43, 44, 45, 46, 47, 48, 54, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "datalik": [6, 7, 24, 29, 43, 44, 45, 46, 47, 48, 53, 54, 55], "addit": [6, 7, 24, 33, 42, 43, 44, 45, 46, 47, 48, 54, 119, 120, 122, 127, 128, 130, 133, 134], "pass": [6, 7, 15, 16, 17, 18, 19, 24, 43, 44, 45, 46, 47, 48, 54, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 116, 122, 123, 125, 127, 128, 129, 133, 134, 135], "fit_transform": [6, 29, 42, 43, 44, 45, 46, 47, 48, 53, 55], "version": [6, 15, 19, 24, 42, 43, 44, 45, 46, 47, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 119, 120, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136], "arrai": [6, 7, 15, 16, 17, 18, 19, 33, 42, 43, 44, 45, 46, 47, 48, 54, 84, 127], "like": [6, 7, 15, 16, 17, 18, 19, 27, 42, 43, 44, 45, 46, 47, 48, 51, 54, 65, 66, 67, 68, 92, 102, 116, 119, 124, 125, 127, 130, 131, 134, 135], "shape": [6, 7, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 47, 48, 54, 84, 95], "n_sampl": [6, 7, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 47, 48, 54, 97, 122, 128], "n_featur": [6, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 47, 48, 97, 122, 123, 128], "input": [6, 29, 31, 32, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 77, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 132, 133, 134, 135], "sampl": [6, 7, 15, 16, 17, 18, 19, 24, 32, 41, 42, 43, 44, 45, 46, 47, 48, 54, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "n_output": [6, 42, 43, 44, 45, 46, 47, 48], "unsupervis": [6, 42, 43, 44, 45, 46, 47, 48], "x_new": [6, 42, 43, 44, 45, 46, 47, 48], "ndarrai": [6, 7, 15, 16, 17, 18, 19, 24, 42, 43, 44, 45, 46, 47, 48, 54], "n_features_new": [6, 42, 43, 44, 45, 46, 47, 48], "set_output": [6, 42, 43, 44, 45, 46, 47, 48], "output": [6, 14, 15, 16, 17, 18, 19, 33, 41, 42, 43, 44, 45, 46, 47, 48, 61, 70, 86, 108, 116, 127, 130, 131, 132, 135], "see": [6, 15, 16, 17, 24, 25, 32, 33, 42, 43, 44, 45, 46, 47, 48, 61, 75, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 115, 116, 118, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135], "introduc": [6, 42, 43, 44, 45, 46, 47, 48, 123], "api": [6, 42, 43, 44, 45, 46, 47, 48, 114, 116, 120, 128, 132, 135], "exampl": [6, 42, 43, 44, 45, 46, 47, 48, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "format": [6, 42, 43, 44, 45, 46, 47, 48, 61, 85, 87, 102, 103, 104, 108, 116, 121, 123, 136], "unchang": [6, 15, 24, 42, 43, 44, 45, 46, 47, 48], "wrap": [7, 34, 54, 136], "make": [7, 11, 15, 16, 17, 18, 19, 24, 85, 87, 88, 95, 97, 102, 103, 104, 108, 116, 119, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136], "modellik": [7, 24, 25, 27, 48, 54, 55, 109], "float": [7, 19, 24, 32, 33, 37, 38, 42, 48, 54, 55, 70, 84, 109], "predict_proba": [7, 12, 24, 54], "comput": [7, 24, 33, 37, 38, 42, 54, 89, 102, 112, 115, 130, 135], "probabl": [7, 24, 33, 54, 127], "outcom": [7, 24, 54, 135], "np": [7, 15, 16, 17, 18, 19, 24, 42, 54, 84, 85, 88, 95, 102, 103, 104, 122, 123, 124, 127, 128], "correspond": [7, 24, 33, 54, 127], "sort": [7, 24, 54, 88, 95, 114], "order": [7, 15, 16, 24, 54, 87, 88, 95, 108, 109, 115, 116, 123, 125, 128, 130, 135, 136], "appear": [7, 24, 54, 134], "classes_": [7, 24, 54], "decision_funct": [7, 12, 54, 95, 136], "decis": [7, 54, 87, 88, 95, 103, 104, 123, 127], "n_class": [7, 54], "1": [6, 7, 15, 19, 24, 32, 33, 42, 43, 44, 45, 46, 47, 48, 54, 65, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "2": [7, 15, 16, 17, 18, 19, 24, 54, 66, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119, 120, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "predict_log_proba": [7, 12], "kwarg": [7, 24, 25, 46, 53, 56, 65, 66, 67, 68], "new_typ": 8, "chang": [8, 15, 19, 24, 43, 82, 104, 108, 114, 116, 119, 121, 124, 134], "new": [6, 8, 15, 24, 42, 43, 44, 45, 46, 47, 48, 95, 109, 116, 120, 130, 135], "attr": 9, "ensur": [9, 43, 45, 47, 48, 84, 124, 127], "cv": [12, 13, 15, 16, 17, 18, 19, 24, 31, 32, 33, 61, 83, 84, 85, 89, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 114, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136], "func": 12, "group": [12, 13, 15, 16, 17, 18, 19, 31, 32, 33, 61, 83, 86, 90, 95, 102, 120, 122, 126, 134], "featur": [13, 14, 15, 16, 17, 18, 19, 29, 32, 33, 42, 43, 44, 45, 46, 47, 48, 53, 55, 65, 66, 68, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 116, 119, 120, 122, 125, 126, 127, 129, 130, 132, 133, 134], "label": [13, 15, 16, 17, 18, 19, 32, 33, 84, 89, 130, 131, 134, 135], "case": [13, 15, 16, 17, 18, 24, 32, 33, 42, 86, 87, 95, 101, 112, 116, 122, 123, 124, 131, 134, 135], "number": [13, 15, 16, 17, 18, 19, 33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135], "pipelineinspector": [13, 98], "foldsinspector": [13, 127], "until": [14, 95, 97, 102, 109, 119, 131, 133], "with_column_typ": [14, 95], "fals": [14, 15, 16, 22, 24, 27, 33, 39, 44, 48, 51, 54, 59, 61, 85, 86, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 109, 112, 122, 123, 125, 127, 128, 129, 134, 135], "certain": [14, 115, 131, 134, 135], "inclus": [14, 109], "svm": [14, 33, 61, 84, 89, 92, 94, 98, 99, 103, 104, 105, 114, 125, 127, 128, 129, 133, 134, 135], "n_bin": [15, 16, 17, 18, 86, 124], "bin": [15, 16, 17, 18, 86, 124], "n_split": [15, 16, 17, 18, 19, 24, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "5": [15, 16, 17, 18, 19, 33, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135], "shuffl": [15, 16, 19, 85, 86, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 109, 112, 122, 123, 124, 125, 127, 128, 129, 134, 135], "random_st": [15, 16, 17, 18, 19, 24, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "stratifi": [15, 16, 17, 18, 19, 33, 61, 83, 84, 90, 124, 134, 136], "k": [15, 16, 17, 18, 33, 61, 83, 84, 85, 88, 90, 95, 101, 102, 108, 114, 124, 125, 130, 134], "where": [15, 16, 17, 18, 19, 87, 121, 124, 127, 135, 136], "stratif": [15, 16, 19, 86, 88, 126], "done": [15, 16, 19, 103, 116, 119, 121, 127, 128, 133, 134, 135], "discret": [15, 16, 124, 135], "fix": [15, 16, 116, 124, 136], "quantil": [15, 16, 17, 18, 124], "either": [15, 16, 17, 18, 41, 95, 97, 114, 116, 123, 135], "In": [15, 16, 17, 18, 42, 86, 87, 88, 89, 95, 96, 108, 109, 112, 116, 120, 122, 123, 124, 127, 128, 130, 131, 133, 134, 135], "first": [15, 16, 17, 18, 41, 63, 69, 84, 88, 89, 92, 95, 97, 101, 102, 103, 104, 108, 109, 116, 122, 123, 125, 128, 129, 131, 132, 133, 134, 135], "second": [15, 16, 17, 18, 41, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "must": [15, 16, 17, 18, 41, 46, 70, 87, 88, 95, 102, 116, 124, 125, 131, 135], "befor": [15, 16, 33, 54, 84, 86, 87, 96, 108, 112, 116, 119, 121, 124, 125, 134, 135, 136], "batch": [15, 16], "note": [15, 16, 17, 18, 19, 24, 33, 97, 108, 116, 123, 125, 128], "within": [15, 16, 116, 122, 123, 128, 130, 131, 134], "implement": [15, 16, 42, 115, 120, 122, 123, 124, 128, 136], "approxim": [15, 16], "distribut": [15, 16, 19, 41, 84, 86, 88, 89, 92, 95, 96, 98, 103, 104, 105, 108, 114, 123, 124, 125, 127, 133, 134, 135], "global": [15, 16, 115], "perform": [15, 16, 29, 33, 41, 84, 85, 86, 88, 89, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 116, 122, 123, 124, 125, 127, 130, 132, 133, 134, 135], "randomst": [15, 16, 17, 18, 19], "when": [15, 16, 24, 86, 108, 114, 115, 116, 118, 122, 123, 124, 125, 129, 131, 134, 135, 136], "affect": [15, 16, 127], "indic": [15, 16, 17, 18, 19, 33, 44, 48, 95, 114, 116, 124, 127, 134, 135], "control": [15, 16, 17, 18, 19, 87, 88, 95, 103, 104, 111, 123, 128, 130], "random": [15, 16, 17, 18, 19, 24, 33, 61, 88, 89, 92, 94, 97, 99, 103, 104, 108, 114, 123, 124, 125, 127, 128, 133, 135], "otherwis": [15, 16, 19, 24, 54, 61], "leav": [15, 16, 102, 124], "reproduc": [15, 16, 17, 18, 19, 24, 33, 134], "across": [15, 16, 17, 18, 19, 85, 96, 101, 102, 112, 124, 127, 134], "call": [15, 16, 17, 18, 19, 22, 35, 39, 115, 118, 123, 124, 125, 127, 128, 131, 135], "splitter": [15, 16, 17, 18, 19, 24, 33, 120, 126, 132, 133], "mai": [15, 16, 17, 18, 19, 82, 122, 123, 127, 128], "result": [15, 16, 17, 18, 19, 29, 33, 53, 87, 95, 108, 109, 115, 123, 124, 127, 130, 131, 133, 134], "ident": [15, 16, 17, 18, 19, 124], "integ": [15, 16, 17, 18, 19, 134], "gener": [15, 16, 17, 18, 19, 33, 46, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 116, 121, 124, 129, 130, 134, 135, 136], "test": [15, 16, 17, 18, 19, 24, 33, 41, 55, 84, 85, 86, 92, 95, 101, 102, 104, 108, 120, 123, 124, 125, 127, 130, 133, 134, 136], "suffici": [15, 16, 19, 86], "henc": [15, 16, 19], "zero": [15, 16, 17, 18, 19, 97], "placehold": [15, 16, 17, 18, 19], "actual": [15, 16, 19, 42, 48, 84, 85, 102, 109, 112, 127], "supervis": [15, 16, 17, 18, 19, 135], "learn": [15, 16, 17, 18, 19, 20, 22, 33, 42, 43, 45, 46, 47, 48, 49, 53, 87, 89, 95, 96, 112, 114, 116, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "while": [15, 16, 17, 18, 19, 33, 96, 103, 108, 115, 120, 123, 124, 128, 129, 130, 135], "dataset": [15, 16, 17, 18, 19, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135], "yield": [15, 16, 17, 18, 19, 33, 115, 127, 134], "get_n_split": [15, 16, 17, 18, 19], "iter": [15, 16, 17, 18, 19, 33, 97, 108, 122, 127, 134, 136], "alwai": [15, 16, 17, 18, 19, 89, 103, 104, 108, 116, 123, 125, 128, 133, 134, 135], "ignor": [15, 16, 17, 18, 19, 24, 109, 112], "exist": [15, 16, 17, 18, 19, 24, 39, 61], "set_split_request": 15, "request": [15, 24, 98, 120], "relev": [15, 24, 127], "enable_metadata_rout": [15, 24], "set_config": [15, 24, 115], "meta": [15, 24], "error": [15, 22, 24, 27, 32, 33, 39, 51, 59, 61, 63, 84, 85, 87, 101, 102, 112, 115, 116, 124, 130, 133, 136], "given": [15, 24, 48, 95, 108, 109, 114, 115, 123, 131, 134, 135], "origin": [15, 24, 42, 63, 116, 121], "util": [15, 24, 71, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 116, 120, 127, 128], "metadata_rout": [15, 24], "retain": [15, 24], "some": [15, 24, 86, 87, 88, 95, 96, 116, 119, 122, 123, 124, 125, 127, 128, 130, 131], "3": [15, 24, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "sub": [15, 24, 132], "e": [15, 24, 27, 33, 42, 48, 55, 61, 109, 114, 116, 119, 121, 122, 123, 124, 125, 127, 134, 135], "g": [15, 24, 27, 33, 61, 102, 114, 119, 124, 125, 134], "insid": [15, 24, 27, 135], "effect": [15, 24, 123, 127], "glossari": [16, 17], "n_repeat": [17, 18, 84, 92, 98, 127, 133, 134], "10": [17, 18, 42, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 120, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "continuousstratifiedgroupkfold": [17, 124], "n": [17, 18, 84, 85, 86, 97, 101, 102, 112, 114, 121, 124, 129, 135], "time": [17, 18, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135], "repetit": [17, 18, 84, 85, 102], "state": [17, 18, 23, 24, 28, 40, 52, 60, 123], "contion": 18, "continuousstratifiedkfold": [18, 86, 124, 136], "test_siz": [19, 84, 85, 95, 101, 102, 108], "0": [19, 24, 32, 33, 42, 48, 55, 70, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "train_siz": [19, 95, 98, 108], "bootstrap": [19, 108, 124], "resampl": 19, "replac": [19, 42, 96, 108, 121, 127], "respect": [19, 42, 114, 116, 131, 133, 134, 135], "re": [19, 116, 135], "proport": 19, "round": [19, 133], "up": [19, 33, 41, 63, 97, 103, 104, 109, 120, 122, 127, 132, 135], "absolut": [19, 85, 101, 102, 112, 114], "complement": [19, 114], "size": [19, 122, 123, 124, 133], "21": [19, 87, 120, 122, 128, 133], "remain": [19, 124, 130], "unspecifi": 19, "automat": [19, 116, 119, 121, 135], "produc": [19, 125], "n_label": 19, "searcher": [20, 21, 22, 23, 33, 126, 136], "obj": [20, 22], "scikit": [20, 22, 33, 42, 43, 45, 46, 47, 48, 49, 53, 89, 95, 96, 112, 114, 119, 120, 122, 123, 124, 125, 128, 129, 130, 133, 134, 135, 136], "avail": [20, 21, 22, 26, 33, 35, 36, 41, 50, 57, 58, 119, 120, 134, 135], "algorithm": [21, 22, 24, 33, 96, 130, 133, 135, 136], "searcher_nam": 22, "overwrit": [22, 27, 39, 51, 59, 61, 136], "regist": [22, 23, 27, 28, 39, 40, 51, 52, 59, 60, 112, 136], "after": [22, 29, 48, 53, 55, 85, 86, 95, 97, 101, 102, 108, 109, 112, 116, 127], "referenc": [22, 27, 51, 59, 136], "decid": [22, 27, 39, 59], "warn": [22, 27, 31, 32, 39, 51, 56, 59, 61, 69, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136], "alreadi": [22, 27, 39, 51, 59, 95, 97, 116, 123, 124, 128, 132, 133, 135], "reset": [23, 28, 40, 52, 60, 87], "ensembl": [24, 128], "ds_split": 24, "random_state_algorithm": 24, "deslib": [24, 71, 114, 119, 120], "randomforest": 24, "metad": 24, "singlebest": 24, "staticselect": 24, "stackedclassifi": 24, "knorau": 24, "knora": 24, "desp": 24, "ola": 24, "mcb": 24, "knop": 24, "sample_weight": 24, "weight": [24, 125, 135], "set_score_request": 24, "run_cross_valid": [25, 27, 41, 70, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 116, 122, 123, 125, 127, 128, 129, 132, 133, 136], "extra": [25, 46, 65, 68, 75, 82, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 114, 115, 116, 128, 129, 135], "keyword": [25, 46, 65, 68, 97, 122], "argument": [25, 46, 65, 68, 97, 109, 124], "model_nam": 27, "classification_cl": 27, "regression_cl": 27, "afterward": [27, 51, 128], "behav": [27, 51], "runtimewarn": [27, 31, 32, 51, 59, 69, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 122, 127, 128, 133], "unlik": [29, 53, 130], "both": [29, 42, 53, 86, 88, 95, 108, 109, 123, 124, 125, 128, 129, 134, 135], "requir": [29, 53, 75, 82, 116, 120, 125, 127, 129, 132, 135, 136], "targetconfoundremov": [29, 53, 123], "encod": [29, 53], "present": [29, 53, 109, 115, 116, 122, 124, 136], "leakag": [29, 53, 120, 123, 135], "drop": [29, 42, 44, 53, 86, 89, 92, 97, 109, 114, 127], "tupl": [29, 42], "jutargettransform": [29, 57, 59], "transformerlik": [29, 33, 135], "inverse_transform": 29, "invers": [29, 54, 136], "can_inverse_transform": [29, 54], "factori": 30, "params_to_tun": 30, "juestimatorlik": 30, "estimatorlikefit1": [30, 64, 68], "estimatorlikefit2": [30, 64], "estimatorlikef": [30, 64], "seri": [31, 32, 55], "inconsist": [31, 32], "might": [31, 32, 82, 87, 89, 92, 96, 103, 104, 115, 118, 119, 123, 124, 127, 129, 132, 134, 135, 136], "still": [31, 87, 109, 119, 124, 134, 136], "run": [31, 33, 42, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "df": [32, 41, 97, 125, 131, 133, 134, 135], "pos_label": [32, 33, 89], "detail": [32, 33, 116, 130], "interpret": [32, 33, 61, 108, 127], "posit": [32, 33, 42, 85, 89, 122], "element": [32, 33, 61, 84, 87, 97, 115, 135, 136], "convert": [32, 33, 86, 87, 96, 108, 112, 124], "equal": [32, 33, 86, 114, 124], "dictionari": [32, 33, 43, 47, 97, 109, 123, 127, 131, 136], "df_x": 32, "df_y": 32, "df_group": 32, "return_estim": [33, 84, 85, 86, 88, 95, 96, 97, 98, 101, 102, 103, 104, 108, 109, 112, 122, 125, 127, 128, 134], "return_inspector": [33, 98, 127], "return_train_scor": [33, 127, 134], "seed": [33, 89, 92, 97, 103, 104, 108, 127, 128], "n_job": [33, 42, 127, 136], "verbos": [33, 42, 127, 136], "string": [33, 61, 114, 131, 133, 134, 135, 136], "kind": [33, 84, 85, 88, 89, 92, 95, 96, 98, 103, 104, 105, 108, 125, 131, 134], "categor": [33, 102, 109, 114, 129], "multiple_class": 33, "binari": [33, 61, 83, 88, 90, 92, 95, 96, 98, 103, 104, 105, 108, 114, 116, 124, 125, 127, 133], "ordin": 33, "final": [33, 84, 85, 86, 87, 88, 95, 96, 97, 101, 102, 103, 104, 105, 108, 109, 112, 116, 124, 127, 128, 134, 135], "inspector": [33, 98, 127], "strategi": [33, 134], "kfold": [33, 85, 86, 88, 89, 92, 95, 96, 97, 101, 102, 103, 104, 105, 109, 112, 122, 123, 124, 125, 127, 128, 129, 134, 135], "scorerlik": [33, 34, 35, 39], "metric": [33, 71, 84, 85, 87, 89, 92, 102, 108, 112, 120, 130, 132, 133], "http": [33, 42, 61, 86, 92, 116, 120, 124, 130, 133], "org": [33, 42, 61, 86, 92, 120, 130, 133, 134], "stabl": [33, 86, 119, 120, 130], "model_evalu": 33, "html": [33, 61, 86, 92, 116, 120, 130, 133, 134], "comprehens": [33, 115], "scorer": [33, 35, 36, 39, 40, 112, 133, 134, 136], "defin": [33, 41, 46, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 122, 123, 124, 125, 127, 128, 134, 135, 136], "follow": [33, 41, 42, 46, 61, 63, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 109, 112, 114, 116, 117, 119, 120, 121, 122, 125, 127, 128, 131, 132, 133, 134, 135], "step__paramet": 33, "sever": [33, 87, 88, 95, 115, 116, 124, 125, 130, 134], "svm__probabl": 33, "go": [33, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 120, 127, 132, 135], "oper": [33, 84, 86, 96, 108, 109, 124], "job": [33, 42], "parallel": [33, 42, 116, 136], "over": [33, 84, 85, 89, 92, 97, 102, 122, 123, 127, 128, 133], "mean": [33, 41, 42, 48, 55, 82, 85, 86, 88, 89, 95, 97, 101, 102, 103, 104, 108, 109, 112, 114, 123, 124, 125, 127, 129, 130, 133, 134, 135], "unless": 33, "joblib": [33, 42], "parallel_backend": 33, "context": [33, 87, 88, 95, 103, 104, 127], "processor": 33, "level": [33, 61, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 116, 122, 127, 128], "outer": [33, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135, 136], "convernt": 33, "print": [33, 61, 84, 85, 86, 88, 89, 92, 95, 97, 98, 101, 102, 103, 104, 105, 109, 112, 115, 122, 123, 125, 127, 129, 133, 134, 135], "larger": 33, "50": [33, 85, 86, 89, 92, 96, 97, 98, 101, 102, 105, 108, 109, 112, 125, 128, 129, 134, 135], "standard": [33, 42, 97, 123, 128, 135, 136], "standrad": 33, "addition": [33, 61, 89, 92, 120, 121, 123, 135], "fit_tim": [33, 84, 85, 98, 101, 102, 109, 112, 123, 129, 134, 135], "And": [33, 88, 95, 108, 124, 125], "final_estim": 33, "multiclass": [33, 61, 83, 90, 114], "forest": [33, 61, 88, 92, 94, 97, 99, 108, 114, 128, 133, 135], "custom": [33, 39, 61, 113, 117, 120, 122, 134, 135], "wrap_scor": 34, "doe": [34, 95, 130, 135], "handl": 34, "non_invers": 34, "scalar": [35, 39, 84], "greater": [35, 39, 41, 127], "better": [35, 39, 103, 104, 125, 127, 133], "Will": [35, 39, 133], "y_true": [37, 38, 84, 85, 89, 102, 112], "y_pred": [37, 38, 84, 85, 89, 102, 112], "squar": [37, 112, 114], "pearson": [37, 38, 112, 122], "product": [37, 38, 112], "moment": [37, 38, 112], "correl": [37, 38, 42, 85, 112, 122], "coeffici": [37, 38, 85, 112, 134, 135], "arraylik": [37, 38], "scorer_nam": [39, 112], "access": [39, 87], "want": [39, 48, 84, 87, 88, 89, 95, 97, 108, 109, 112, 116, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135], "userwarn": [39, 86, 89, 124], "bonferroni": 41, "altern": [41, 108, 136], "side": 41, "correct": [41, 92, 128, 133, 136], "t": [41, 87, 92, 95, 124, 125, 133, 134, 135, 136], "degre": [41, 127], "freedom": 41, "adjust": 41, "pvalu": 41, "full": [41, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 127], "letter": 41, "sidak": 41, "holm": 41, "down": 41, "sime": 41, "hochberg": 41, "independ": [41, 48, 55, 95, 108, 109, 114, 124], "hommel": 41, "close": [41, 121], "non": [41, 42], "neg": [41, 42, 122], "fdr_bh": 41, "benjamini": 41, "fdr_by": 41, "yekuti": 41, "fdr_tsbh": 41, "stage": 41, "fdr": [41, 114], "fdr_tsbky": 41, "less": [41, 86, 97, 120, 124, 130], "hypothesi": [41, 108], "underli": [41, 114, 123, 127], "unequ": 41, "significance_threshold": [42, 122], "05": [42, 90, 102, 104, 108, 110, 122, 125, 127], "corr_method": [42, 122], "pearsonr": [42, 112, 134], "agg_method": [42, 122], "sum": [42, 84, 122, 136], "corr_sign": [42, 122], "posneg": [42, 122], "aggreg": [42, 122], "significantli": 42, "signific": [42, 92, 122, 127], "aggregate": 42, "separ": [42, 95, 97, 130, 134, 135], "ones": 42, "choos": [42, 89, 92, 124, 125, 133, 135], "procedur": [42, 124, 130], "describ": [42, 85, 86, 97, 101, 102, 109, 112, 116, 129, 134], "p": [42, 84, 92, 108, 122, 133], "scipi": [42, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 122, 127, 128], "stat": [42, 71, 92, 112, 120, 122, 124, 133], "convent": [42, 116], "axi": [42, 84, 85, 86, 101, 102, 112, 124, 129], "po": [42, 122], "correlation_valu": 42, "found": [42, 103, 104, 134], "used_corr_sign_": 42, "log": [42, 61, 63, 69, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 116, 136], "shen": [42, 122], "finn": [42, 122], "scheinost": 42, "d": [42, 84, 87, 88, 95, 103, 104, 114, 121, 122, 124], "et": [42, 114, 122, 123, 135], "al": [42, 122, 123], "individu": [42, 122, 127, 134], "behavior": [42, 87, 122, 123, 127, 136], "brain": [42, 88, 95, 120, 122, 123], "connect": [42, 122, 123], "nat": [42, 122], "protoc": [42, 122], "12": [42, 85, 87, 88, 95, 97, 98, 102, 119, 122, 123], "506": [42, 102, 122, 128, 135], "518": [42, 103, 122, 128], "2017": [42, 122, 123], "doi": [42, 120, 123], "1038": 42, "nprot": 42, "2016": [42, 87, 88, 95, 103, 104, 122], "178": [42, 98], "y_mean_": 42, "show": [42, 83, 92, 100, 107, 111, 118, 124, 125, 133, 134, 136], "wa": [6, 42, 43, 44, 45, 46, 47, 48, 88, 95, 96, 97, 109, 122, 124, 125, 127, 134], "x_y_correlations_": 42, "significant_mask_": 42, "had": [42, 104, 134, 136], "pos_mask_": 42, "pos_significant_mask_": 42, "neg_significant_mask_": 42, "used_significant_mask_": 42, "threhsold": 42, "mask": [42, 44, 48], "per": [42, 84, 88, 95, 102, 116, 124], "get_feature_names_out": [42, 43, 45, 46, 47, 48], "input_featur": [42, 43, 45, 46, 47, 48], "x_types_renam": 43, "Not": [43, 44, 45, 46, 47, 108], "here": [43, 44, 45, 47, 86, 87, 88, 95, 97, 109, 115, 116, 120, 128, 133, 134, 135], "kept": [43, 45, 46, 47, 48, 109], "jutransform": [43, 44, 45, 46, 47, 48], "get_support": [44, 48], "support": [44, 48, 54, 75, 84, 88, 89, 95, 98, 103, 104, 116, 124, 125, 127, 128, 134, 135, 136], "support_mask": [44, 48], "numpi": [44, 48, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 119, 122, 123, 124, 127, 128], "keep": [45, 87, 89, 92, 96, 98, 102, 105, 108, 109, 116, 119, 120, 125, 128, 135], "wrapper": [46, 54, 136], "around": 46, "directli": [46, 87, 120, 129], "feature_names_in_": 46, "undefin": [46, 115], "x0": 46, "x1": 46, "n_features_in_": 46, "model_confound": [48, 55, 109, 123], "keep_confound": [48, 109], "specif": [48, 89, 95, 97, 109, 123, 126, 127, 130, 131, 132], "subtract": [48, 55, 109, 114], "regular": [48, 103, 104, 109, 114, 125, 131], "express": [48, 109, 131], "syntax": [48, 109], "linearregress": [48, 55, 109, 114, 122, 123], "By": [48, 55, 95, 96, 97, 109, 114, 122, 125, 127, 134], "residu": [48, 55, 109, 123], "fall": [48, 55, 109, 122, 134], "under": [48, 55, 109, 112, 118, 119, 134, 135], "togeth": [48, 85, 86, 101, 102, 109, 112, 114], "deconfound": [48, 109], "transformer_nam": [51, 59], "transformer_cl": [51, 59], "arg": [53, 56, 65, 66, 67, 68], "_model_": 54, "transform_target": 54, "confoundremov": [55, 109, 114, 123, 136], "notifi": [56, 61], "with_traceback": 56, "except": [56, 63, 116], "tb": 56, "__traceback__": 56, "fname": 61, "output_format": 61, "debug": [61, 130], "info": [61, 62, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 122, 123, 125, 127, 128, 129, 133, 134, 135], "messag": [61, 63, 69, 116, 122, 136], "pathlib": 61, "path": 61, "filenam": [61, 116], "stdout": 61, "file": [61, 87, 90, 93, 99, 106, 110, 113, 116], "statement": 61, "append": [61, 96, 108, 121, 124, 127], "entri": [61, 135], "doc": [61, 86, 116, 121, 136], "python": [61, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 119, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136], "dev": [61, 116, 121], "howto": 61, "asctim": 61, "levelnam": 61, "msg": [63, 69], "klass": 63, "subclass": [63, 69], "fashion": [65, 66, 67, 68, 123], "juestim": 68, "categori": 69, "width": [70, 89, 92, 98, 105, 108], "800": 70, "height": 70, "600": [70, 86], "ci": [70, 108, 121], "95": [70, 89, 92, 97, 98, 102, 105, 108, 124], "plot": [70, 84, 85, 86, 92, 95, 96, 97, 102, 108, 120, 124, 133], "panel": [70, 92, 118, 119, 133], "dashboard": 70, "confid": [70, 108, 127], "interv": [70, 108], "dynam": [71, 119, 120], "prepar": [71, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 120, 122, 123, 127, 128], "visual": [71, 95, 119, 120, 124, 130, 132], "julearn": [73, 75, 82, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "depend": [75, 82, 87, 88, 95, 103, 104, 116, 120, 124, 127, 133], "instal": [75, 82, 116, 118, 120, 121, 133, 136], "protocol": 81, "experiment": 82, "futur": [82, 84, 86, 96, 108, 124], "complet": [82, 116], "particularli": [82, 124, 134], "reli": 82, "beta": 82, "releas": [82, 119, 120, 136], "packag": [82, 84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 118, 119, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "viz": [82, 92, 119, 120, 133], "basic": [83, 116, 125, 131, 132, 134, 135, 136], "galleri": [83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 116], "sphinx": [83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 116, 136], "end": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119], "download": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112], "code": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 120, 123, 135, 136], "iri": [84, 89, 92, 96, 98, 105, 108, 116, 125, 131, 134, 135], "vector": [84, 88, 89, 95, 98, 103, 104, 116, 125, 127, 128, 134, 135], "machin": [84, 87, 88, 89, 95, 98, 103, 104, 116, 120, 122, 123, 125, 127, 130, 131, 132, 133, 135], "classifi": [84, 88, 89, 95, 96, 98, 103, 104, 105, 108, 116, 127, 134, 135], "heatmap": [84, 85, 102], "accuraci": [84, 89, 104, 108, 123, 124, 133, 134], "confus": [84, 97, 134, 135], "matrix": 84, "author": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 122], "shammi": [84, 85, 86, 88, 95, 97, 102, 108, 112, 120, 123, 136], "fz": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122], "juelich": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122], "de": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123], "federico": [84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 102, 103, 104, 105, 108, 112, 120], "raimondo": [84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 102, 103, 104, 105, 108, 112, 120, 136], "f": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 102, 103, 104, 105, 108, 112, 122, 123, 125, 128], "licens": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 122], "agpl": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122], "seaborn": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 102, 103, 104, 105, 108, 116, 119, 120, 124, 125, 127, 131, 134, 135], "sn": [84, 85, 86, 95, 96, 97, 102, 108, 124, 127], "matplotlib": [84, 85, 86, 95, 96, 97, 102, 108, 120, 124], "pyplot": [84, 85, 86, 95, 96, 97, 102, 108, 124], "plt": [84, 85, 86, 95, 96, 97, 102, 108, 124], "load_dataset": [84, 87, 88, 89, 92, 95, 96, 98, 103, 104, 105, 108, 116, 125, 127, 131, 134, 135], "model_select": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136], "train_test_split": [84, 85, 101, 102], "repeatedkfold": [84, 127], "confusion_matrix": 84, "configure_log": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 116, 127, 128], "2023": 120, "11": [87, 88, 95, 98, 119, 122, 123, 127, 128, 133, 134], "30": [89, 92, 95, 97, 123, 133], "452": [], "lib": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "453": [], "26": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 125, 127, 128], "4": [6, 42, 43, 44, 45, 46, 47, 48, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 119, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "dev110": [], "load": [84, 85, 86, 101, 102, 103, 104, 108, 109, 112, 116, 125, 129, 131, 134], "df_iri": [84, 89, 92, 96, 98, 105, 108, 116], "sepal_length": [84, 89, 92, 96, 98, 105, 108, 125, 131, 134, 135], "sepal_width": [84, 89, 92, 96, 98, 105, 108, 125, 131, 134, 135], "petal_length": [84, 89, 92, 96, 98, 105, 108, 125, 131, 134, 135], "speci": [84, 89, 92, 96, 98, 105, 108, 116, 125, 127, 131, 134, 135], "train_iri": 84, "test_iri": 84, "200": [84, 97, 98, 108, 122, 124, 127, 128], "we": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135], "model_iri": [84, 96], "456": 103, "457": [103, 104, 106], "expand": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 115, 122, 123, 125, 127, 128, 129, 133, 134, 135], "treat": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 122, 127, 128], "home": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 122, 127, 128, 133], "runner": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 122, 127, 128, 133], "py": [84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 116, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "503": 110, "warn_with_log": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 103, 104, 108, 112, 122, 127, 128, 133], "458": 103, "__continu": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 108, 109, 112, 122, 125, 127, 129, 133, 134, 135], "459": [], "120": 84, "versicolor": [84, 89, 92, 96, 98, 105, 108, 116, 125, 134, 135], "40": [84, 85, 86], "virginica": [84, 89, 92, 96, 98, 105, 108, 116, 125, 134, 135], "setosa": [84, 131, 134, 135], "count": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 124, 125, 127, 129, 133, 134, 135], "dtype": [84, 85, 86, 88, 89, 92, 95, 96, 98, 101, 102, 103, 104, 105, 108, 109, 112, 125, 127, 129, 133, 134, 135], "int64": [84, 88, 89, 92, 95, 96, 98, 103, 104, 105, 108, 125, 127, 133, 134, 135], "460": [], "scheme": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 130, 133, 134, 135, 136], "multi": [84, 87, 133, 134, 135], "detect": [84, 88, 89, 92, 95, 96, 98, 103, 104, 105, 108, 115, 125, 127, 130, 133, 134, 135], "head": [84, 85, 86, 87, 88, 95, 101, 102, 103, 104, 108, 109, 112, 129, 131, 133, 135], "score_tim": [84, 85, 98, 101, 102, 109, 112, 123, 129, 134, 135], "test_accuraci": [84, 89, 108, 133], "n_train": [84, 85, 109, 112, 123], "n_test": [84, 85, 109, 112, 123], "cv_mdsum": [84, 85, 98, 101, 102, 109, 112, 123, 129, 134, 135], "004817": [], "002559": [], "916667": 84, "96": [84, 97, 98, 136], "24": [84, 119, 136], "fa5ab7a2b930761687a8e82d9971ebca": 84, "004397": [], "002450": 135, "833333": 84, "004402": [], "002457": [], "958333": 84, "004433": [], "002480": 134, "004379": [], "002462": [], "now": [84, 85, 86, 87, 89, 92, 95, 96, 98, 101, 102, 103, 104, 108, 109, 112, 116, 123, 124, 125, 127, 128, 131, 133, 134, 135], "df_accuraci": 84, "set_index": [84, 85, 87, 102, 108], "unstack": [84, 85, 102], "index": [84, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 108, 112, 116, 120, 127], "875000": 84, "750000": 84, "000000": [84, 85, 86, 92, 97, 101, 102, 108, 109, 112, 129, 133], "791667": 84, "font_scal": [84, 85], "fig": [84, 85, 86, 95, 96, 97, 102, 124], "ax": [84, 85, 86, 95, 96, 97, 102, 124], "subplot": [84, 85, 86, 95, 96, 97, 102, 124], "figsiz": [84, 85, 86, 95, 96, 97, 102, 124], "7": [84, 85, 86, 87, 88, 95, 98, 102, 116, 120, 124, 128, 130, 131, 134, 136], "cmap": [84, 85, 102], "ylgnbu": [84, 85, 102], "titl": [84, 85, 102, 116], "text": [84, 85, 95, 97, 102, 116, 124], "our": [84, 87, 88, 89, 95, 97, 105, 109, 116, 120, 123, 124, 125, 127, 128, 130, 131, 133, 134, 135], "annot": [84, 85], "cm": 84, "uniqu": [84, 88, 95, 125, 127], "9": [84, 85, 87, 88, 95, 97, 98, 102, 109, 123, 131, 134, 135], "8": [84, 87, 88, 95, 98, 101, 102, 119, 123, 124, 129, 130, 134, 135], "let": [84, 85, 86, 87, 88, 95, 97, 101, 102, 103, 104, 108, 109, 112, 123, 124, 125, 127, 128, 129, 131, 135], "anoth": [84, 87, 97, 112, 124, 125, 128, 135], "cm_sum": 84, "keepdim": 84, "cm_perc": 84, "astyp": 84, "100": [84, 89, 92, 96, 97, 98, 105, 108, 123, 125], "empty_lik": 84, "nrow": 84, "ncol": 84, "rang": [84, 87, 97, 114, 122, 128], "j": [84, 123], "c": [84, 87, 88, 95, 103, 104, 118, 125, 127, 128, 135], "els": 84, "1f": [84, 85], "tmp": [84, 86], "tmpcwtyqmh_": [], "2e7b1527c028733120aa7f73295f211297481781": [], "00_start": [84, 86], "plot_cm_acc_multiclass": [84, 90], "104": 84, "deprecationwarn": 84, "convers": 84, "ndim": 84, "deprec": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136], "extract": [84, 87, 88, 95, 127], "singl": [84, 115, 127, 133], "your": [84, 87, 116, 119, 120, 122, 123, 124, 127, 132, 135], "25": [84, 85, 86, 87, 97, 101, 102, 109, 112, 129, 133], "fmt": [84, 85], "total": [84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "script": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 116, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "minut": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135], "499": [], "sourc": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112], "jupyt": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 118, 134], "notebook": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 118, 134], "ipynb": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112], "diabet": [85, 86, 101, 102, 112, 129], "ridg": [85, 101, 102, 112, 114], "load_diabet": [85, 86, 101, 102, 109, 112, 129], "mean_absolute_error": [85, 102], "101": 116, "return_x_i": [85, 86, 101, 102, 109, 112, 129], "as_fram": [85, 86, 101, 102, 109, 112, 129], "ten": [85, 86, 101, 102, 112], "ag": [85, 86, 87, 101, 102, 109, 112, 129], "sex": [85, 86, 101, 102, 109, 112, 123, 127, 129], "bodi": [85, 86, 101, 102, 112], "mass": [85, 86, 101, 102, 112], "averag": [85, 86, 101, 102, 109, 112, 122, 124, 133], "blood": [85, 86, 101, 102, 109, 112], "pressur": [85, 86, 101, 102, 109, 112], "six": [85, 86, 101, 102, 112], "serum": [85, 86, 101, 102, 112], "measur": [85, 86, 101, 102, 109, 112, 123, 124, 125, 127], "s1": [85, 86, 87, 88, 95, 101, 102, 109, 112, 129], "s6": [85, 86, 87, 88, 95, 101, 102, 109, 112, 129], "patient": [85, 86, 101, 102, 112], "quantit": [85, 86, 101, 102, 112], "diseas": [85, 86, 101, 102, 112], "progress": [85, 86, 101, 102, 112, 116], "year": [85, 86, 101, 102, 112], "baselin": [85, 86, 101, 102, 112], "interest": [85, 86, 89, 101, 102, 108, 112, 132, 134, 135], "bmi": [85, 86, 101, 102, 109, 112, 129], "s4": [85, 86, 87, 88, 95, 101, 102, 109, 112, 129], "s5": [85, 86, 87, 88, 95, 101, 102, 103, 104, 109, 112, 129], "038076": [85, 86, 101, 102, 109, 112, 129], "050680": [85, 86, 101, 102, 109, 112, 129], "061696": [85, 86, 101, 102, 109, 112, 129], "002592": [85, 86, 101, 102, 109, 112, 129], "019907": [85, 86, 101, 102, 109, 112, 129], "017646": [85, 86, 101, 102, 109, 112, 129], "001882": [85, 86, 101, 102, 109, 112, 129], "044642": [85, 86, 101, 102, 109, 112, 129], "051474": [85, 86, 101, 102, 109, 112, 129], "039493": [85, 86, 101, 102, 109, 112, 129], "068332": [85, 86, 101, 102, 109, 112, 129], "092204": [85, 86, 101, 102, 109, 112, 129], "085299": [85, 86, 101, 102, 109, 112, 129], "044451": [85, 86, 101, 102, 109, 112, 129], "002861": [85, 86, 101, 102, 109, 112, 129], "025930": [85, 86, 101, 102, 109, 112, 129], "089063": [85, 86, 101, 102, 109, 112, 129], "011595": [85, 86, 101, 102, 109, 112, 129], "034309": [85, 86, 101, 102, 109, 112, 129], "022688": [85, 86, 101, 102, 109, 112, 129], "009362": [85, 86, 101, 102, 109, 112, 129], "005383": [85, 86, 101, 102, 109, 112, 129], "036385": [85, 86, 101, 102, 109, 112, 129], "031988": [85, 86, 101, 102, 109, 112, 129], "046641": [85, 86, 101, 102, 109, 112, 129], "442": [85, 86, 101, 102, 109, 112, 129], "152": [85, 86, 101, 102, 109, 112, 129, 135, 136], "133484": [85, 86, 101, 102, 109, 112, 129], "std": [85, 86, 97, 101, 102, 109, 112, 123, 129], "77": [85, 86, 101, 102, 109, 112, 129, 133, 136], "093005": [85, 86, 101, 102, 109, 112, 129], "min": [85, 86, 97, 101, 102, 109, 112, 129], "87": [85, 86, 101, 102, 109, 112, 129], "140": [85, 86, 101, 102, 109, 112, 129], "500000": [85, 86, 101, 102, 109, 112, 129], "75": [85, 86, 89, 92, 97, 101, 102, 109, 112, 129], "211": [85, 86, 101, 102, 109, 112, 129], "max": [85, 86, 97, 101, 102, 109, 112, 114, 129], "346": [85, 86, 89, 101, 102, 109, 112, 129], "float64": [85, 86, 89, 92, 97, 101, 102, 105, 109, 112, 122, 123, 128, 129], "combin": [85, 86, 87, 101, 102, 108, 112, 125, 135], "data_diabet": [85, 101, 102, 112, 129], "concat": [85, 86, 96, 101, 102, 108, 112, 129], "bp": [85, 86, 101, 102, 109, 112, 129], "s2": [85, 86, 87, 88, 95, 101, 102, 109, 112, 129], "s3": [85, 86, 87, 88, 95, 101, 102, 109, 112, 129], "calcul": 85, "heat": 85, "corr": [85, 102], "xticklabel": 85, "yticklabel": 85, "train_diabet": [85, 101, 102], "test_diabet": [85, 101, 102], "neg_mean_absolute_error": [85, 86, 97, 101, 112, 134], "299": [109, 135], "300": [109, 135], "301": [109, 135], "302": [109, 135], "309": [85, 101, 102], "test_scor": [85, 86, 88, 89, 92, 95, 101, 102, 103, 104, 105, 109, 112, 123, 125, 134], "004773": [], "002307": [], "48": [84, 85, 86, 87, 125], "783874": 85, "247": [85, 96, 136], "62": 85, "b10eef89b4192178d482d7a1587a248a": [85, 101, 102, 109, 112, 123, 129, 134, 135], "004258": [], "002250": [], "47": [85, 88, 112, 128, 136], "573568": 85, "004443": [], "002321": [], "37": [85, 128], "617474": 85, "004253": [], "002185": [], "686852": 85, "004255": [], "002206": [], "45": [85, 89], "558655": 85, "248": 85, "61": 85, "444084441470615": 85, "mae": [85, 102], "df_mae": [85, 102], "coef_": [85, 109], "sort_valu": 85, "ascend": 85, "inplac": 85, "barh": 85, "color": [85, 86, 95, 108, 124], "blue": 85, "red": 85, "xlabel": [85, 102], "249999999999986": 85, "scatterplot": [85, 95, 97, 102], "v": [85, 102, 121, 124, 126, 135], "2f": [85, 102], "corrcoef": [85, 102], "set_styl": [85, 86, 102], "darkgrid": [85, 86, 102], "scatter": [85, 97, 102], "xmin": [85, 102], "xmax": [85, 102], "get_xlim": [85, 95, 102], "ymin": [85, 102], "ymax": [85, 102], "get_ylim": [85, 95, 102], "ylabel": [85, 102, 124], "01": [85, 90, 97, 99, 102, 103, 104, 106, 120, 122, 125, 127, 128], "verticalalign": [85, 102], "top": [85, 102, 120, 134], "horizontalalign": [85, 102], "right": [85, 102, 103, 104, 124, 125], "fontsiz": [85, 102], "scale": [85, 102, 103, 104, 114, 125, 127, 135], "649999999999999": 85, "347": 85, "35": [85, 87, 133], "660": 125, "plot_example_regress": [85, 90], "leonard": [86, 97, 108, 120, 122], "sass": [86, 97, 108, 120, 122], "l": [86, 87, 88, 95, 97, 101, 103, 104, 108, 122], "128": 95, "outlier": 86, "data_df": 86, "new_df": 86, "145": [86, 102, 123], "150": [86, 123, 134, 135], "590": 86, "580": 86, "597": 86, "595": 86, "reset_index": [86, 87, 88, 95, 103, 104, 108], "plot_stratified_kfold_reg": [86, 90], "51": [86, 101, 125], "settingwithcopywarn": 86, "try": [86, 88, 89, 92, 95, 98, 104, 105, 124, 125, 134], "slice": 86, "loc": 86, "row_index": 86, "col_index": 86, "caveat": 86, "pydata": 86, "user_guid": 86, "view": [86, 116], "versu": 86, "idea": [86, 130], "chosen": 86, "coupl": 86, "histrogram": 86, "displot": 86, "60": 86, "20": [86, 89, 92, 98, 108, 122, 123, 124, 125, 128, 133, 135], "opt": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "hostedtoolcach": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "13": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 119, 123, 127, 128], "x64": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "python3": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "site": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "_oldcor": [86, 96, 108, 124], "1498": [], "futurewarn": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "is_categorical_dtyp": [], "isinst": [], "categoricaldtyp": [], "1119": [86, 96, 108, 124], "use_inf_as_na": [86, 96, 108, 124], "inf": [86, 96, 108, 124], "nan": [86, 96, 108, 124, 127], "option_context": [86, 96, 108, 124], "mode": [86, 96, 108, 124], "axisgrid": 86, "facetgrid": 86, "0x7fe724e4f2e0": [], "histogram": 86, "abov": [86, 108, 123, 125, 127, 134], "uniformli": [86, 124], "skew": 86, "toward": 86, "lower": [86, 124], "even": [86, 109, 125, 134, 135], "low": [86, 97, 114, 122], "give": [86, 114, 123, 125, 132, 133, 134], "good": [86, 89, 104, 119, 124, 132, 133], "granular": 86, "cv_stratifi": [86, 88], "linear": [86, 92, 103, 104, 109, 122, 123, 125, 127, 128, 135], "scores_strat": 86, "linreg": [86, 109, 114, 122, 123], "716": [], "717": 124, "718": 134, "719": 134, "449": 86, "_split": [86, 124], "737": [86, 124], "popul": [86, 108, 124], "member": [86, 124], "761": [], "762": [], "763": 97, "764": 97, "compar": [86, 92, 108, 120, 123, 125, 130, 133, 134], "With": [86, 124, 127, 134], "df_score": 86, "boxplot": [86, 108], "higher": [86, 108, 124], "were": [86, 87, 88, 95, 96, 108, 127, 134], "swarmplot": [86, 96], "842": [], "fmri": [87, 88, 95, 103, 104], "waskom": [87, 88, 95, 103, 104], "m": [87, 88, 95, 103, 104, 116, 121, 135], "frank": [87, 88, 95, 103, 104], "wagner": [87, 88, 95, 103, 104], "adapt": [87, 88, 95, 103, 104], "engag": [87, 88, 95, 103, 104], "cognit": [87, 88, 95, 103, 104], "cerebr": [87, 88, 95, 103, 104], "cortex": [87, 88, 95, 103, 104], "similar": [87, 125, 128, 134, 135], "excel": [87, 124], "spreadsheet": 87, "csv": 87, "ideal": 87, "everyth": [87, 132], "tabul": 87, "organis": [87, 123], "demograph": [87, 123], "diagnost": 87, "manual": [87, 118, 133, 135], "edit": 87, "sure": [87, 95, 116, 121, 123, 124, 125], "readi": [87, 133, 135], "do": [87, 95, 97, 102, 103, 104, 108, 109, 112, 114, 116, 120, 121, 123, 124, 125, 128, 130, 131, 132, 133, 134, 135], "howev": [87, 92, 95, 96, 97, 109, 115, 118, 119, 123, 124, 125, 128, 129, 130, 133, 134, 135, 136], "prone": [87, 130, 133], "fortun": [87, 124], "tool": [87, 115, 119, 127, 133], "deal": [87, 122, 131], "task": [87, 95, 109, 125, 129], "collect": [87, 108, 127], "start": [87, 116, 117, 120, 124, 125, 127, 128, 129, 132, 133, 135], "df_fmri": [87, 88, 95, 103, 104], "subject": [87, 88, 95, 103, 104, 124], "timepoint": [87, 88, 95, 103, 104], "event": [87, 88, 95, 103, 104], "region": [87, 88, 95, 103, 104], "signal": [87, 88, 95, 103, 104], "s13": [87, 88, 95, 103, 104], "18": [87, 88, 95, 98, 103, 104, 122, 123], "stim": [87, 88, 95, 103, 104], "pariet": [87, 88, 95, 103, 104], "017552": [87, 88, 95, 103, 104], "14": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135], "080883": [87, 88, 95, 103, 104], "s12": [87, 88, 95, 103, 104], "081033": [87, 88, 95, 103, 104], "s11": [87, 88, 95, 103, 104], "046134": [87, 88, 95, 103, 104], "s10": [87, 88, 95, 103, 104], "037970": [87, 88, 95, 103, 104], "long": [87, 108], "wide": 87, "seen": [87, 135], "pivot": [87, 88, 95, 103, 104], "reshap": [87, 95], "tabl": [87, 88, 95], "becom": [87, 130, 135], "identifi": [87, 89, 122, 123, 127, 133], "rule": [87, 114, 124, 135], "duplic": [87, 115], "frontal": [87, 88, 95, 103, 104], "s0": [87, 88, 95, 103, 104], "cue": [87, 88, 95, 103, 104], "007766": [87, 103, 104], "006899": [87, 103, 104], "021452": [87, 103, 104], "039327": [87, 103, 104], "016440": [87, 103, 104], "000300": [87, 103, 104], "021054": [87, 103, 104], "035735": [87, 103, 104], "024296": [87, 103, 104], "033220": [87, 103, 104], "subtl": 87, "For": [87, 89, 92, 97, 102, 109, 114, 115, 116, 118, 119, 122, 124, 125, 127, 128, 129, 131, 134, 135], "place": 87, "scan": 87, "ll": [87, 102], "23": [87, 120, 123], "31": [87, 133], "29": [87, 133], "43": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 103, 105, 112, 125], "28": 87, "34": [87, 133], "scanner": 87, "6": [84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135], "b": [87, 116, 135], "df_meta": 87, "s7": [87, 88, 95], "s8": [87, 88, 95], "s9": [87, 88, 95], "16": [87, 88, 95, 97, 98, 125, 127], "036739": 87, "131641": 87, "17": [87, 88, 95, 97, 98, 127, 133], "004900": 87, "036362": 87, "030099": 87, "121574": 87, "000643": 87, "051040": 87, "009959": 87, "103513": 87, "532": [87, 88, 95, 103, 104], "frame": 87, "suppos": [87, 89, 123], "dure": [87, 88, 95, 119, 122, 123, 125, 127], "There": [87, 124, 130, 132, 135], "009038": 87, "009642": 87, "047859": 87, "026727": 87, "085040": 87, "086399": 87, "069775": 87, "070558": 87, "115321": 87, "154058": 87, "010535": 87, "061817": 87, "034386": 87, "130267": 87, "15": [87, 88, 95, 97, 98, 119, 123, 125, 127], "002170": 87, "048007": 87, "038257": 87, "134828": 87, "004290": 87, "035395": 87, "266": [87, 88, 95, 101, 103, 104], "sinc": [87, 92, 97, 101, 103, 120, 125, 135], "previou": [87, 92, 96, 97, 116, 128, 133, 134, 135, 136], "multiindex": 87, "trick": 87, "underscor": 87, "_": [87, 96, 108, 116], "frontal_cu": 87, "frontal_stim": 87, "parietal_cu": 87, "parietal_stim": 87, "829": [], "run_combine_panda": [87, 90], "groupkfold": 88, "kimia": 88, "nazarzadeh": 88, "necessari": [88, 118, 123, 128], "librari": [88, 118, 120], "stratifiedgroupkfold": 88, "08": 106, "942": 112, "infer": [88, 95], "studi": [88, 95, 123, 124], "condit": [88, 95], "groupbi": [88, 95], "1064": [88, 95], "exactli": [88, 95, 127, 135], "rf": [88, 92, 96, 97, 105, 108, 114, 125, 128, 133], "961": [], "962": [], "963": 125, "964": [125, 133], "965": [125, 133], "6841826838300122": 88, "09": [], "605": 122, "606": 88, "607": [], "608": [], "6898496240601504": 88, "966": [125, 133], "967": 133, "968": 133, "969": [], "970": 104, "6879699248120301": 88, "389": 89, "run_grouped_cv": [88, 90], "308": [], "three": [89, 92, 96, 98, 105, 108, 116, 120, 125, 133, 134], "isin": [89, 92, 96, 98, 105, 108, 116, 125], "sepal": [89, 92, 98, 105, 108, 131, 135], "length": [89, 92, 98, 105, 108], "petal": [89, 92, 98, 105, 108, 131, 135], "679": 133, "680": 133, "681": 133, "682": 133, "683": 133, "90": [89, 92, 133], "70": [89, 92], "assess": [89, 92, 123, 127], "unbalanc": [89, 92], "df_unbalanc": [89, 92], "value_count": [89, 92], "account": [89, 123], "imbal": 89, "suitabl": [89, 119], "balanced_accuraci": [89, 92, 134], "balanced_accuracy_scor": 89, "42": [89, 92, 95, 103, 104, 108, 112, 124, 127, 133, 134], "test_balanced_accuraci": [89, 92], "723": [], "724": [], "725": [], "80": [89, 92, 123, 133], "726": [], "_classif": 89, "2399": [], "8625": 89, "8678571428571429": 89, "u": [89, 96, 108, 109, 119, 123, 127, 133, 134], "correctli": 89, "precis": [89, 134], "ratio": 89, "tp": 89, "precision_scor": 89, "771": 134, "772": [], "773": [], "774": [], "514": [103, 128], "run_simple_binary_classif": [89, 90], "00": [90, 93, 97, 99, 105, 106, 110, 113, 127, 128, 133], "04": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "733": [], "execut": [90, 93, 99, 106, 110, 113, 116], "auto_examples_00_start": 90, "mb": [90, 93, 99, 106, 110, 113], "At": [92, 120, 130, 135], "statist": [92, 97, 108, 120, 132, 134], "repeatedstratifiedkfold": [92, 98, 133, 134], "corrected_ttest": [92, 133], "944": [], "945": [], "947": [], "948": [], "949": [], "950": [], "951": [], "roc_auc": [92, 108, 133, 134], "scores1": [92, 118, 125, 133], "990": [], "991": [], "992": [], "993": [], "scores2": [92, 118, 125, 133], "273": 127, "274": 127, "275": [], "276": [], "third": [92, 134], "kernel": [92, 103, 104, 123, 125, 127, 128, 135], "scores3": [92, 118, 125, 133], "svm__kernel": [92, 104, 125], "svm_linear": 92, "971": [104, 125], "stats_df": [92, 133], "model_2": [92, 128, 133], "val": [92, 133], "175075": 92, "062567": 92, "895662": 92, "151390": 92, "782741": 92, "test_roc_auc": [92, 108, 133], "108944": 92, "835331": 92, "236153": 92, "685092": 92, "669010": 92, "324331": 92, "viewer": 92, "plot_scor": [92, 118, 133], "uncom": [92, 133], "line": [92, 116, 124, 133], "read": [92, 96, 116, 120, 121, 124, 130, 132, 133, 135], "holoviz": [92, 133], "getting_start": [92, 133], "build_app": [92, 133], "deploi": [92, 127, 133], "pane": [], "unknown": [], "widget": [], "could": [95, 97, 109, 120, 122, 127, 131, 133, 134, 135], "button_typ": [], "look": [92, 95, 97, 102, 109, 114, 122, 124, 125, 127, 128, 130, 131, 132, 134, 135], "interact": [92, 95, 120, 127, 133], "zoom": [92, 133], "hover": [92, 133], "button": [92, 133], "433": [], "plot_simple_model_comparison": [92, 93], "03": [93, 99, 104, 106], "auto_examples_01_model_comparison": 93, "demonstr": [94, 116, 128, 134], "analys": [95, 96, 123], "groupshufflesplit": 95, "419": [], "439": 89, "440": 89, "441": [], "443": 135, "7218303650149884": 95, "decod": [95, 123], "claim": [95, 108, 124], "acquir": 95, "randomli": 95, "characterist": 95, "unseen": [95, 124, 130], "whom": 95, "later": [95, 98, 116, 133], "500": [], "501": [], "502": [], "504": 135, "7210526315789474": 95, "part": [95, 118, 120, 122, 124, 130, 133, 135], "raw": [95, 97, 135], "hue": [95, 108], "set_titl": [95, 96, 97, 124], "pre_x": 95, "pre_df": 95, "join": 95, "parietal__": 95, "frontal__": 95, "noth": [95, 125, 134], "standardscal": [95, 114, 125, 127, 129, 134, 135], "seem": [95, 103, 104, 108, 125, 132, 133, 134], "quit": [95, 119, 122, 127], "linearli": 95, "clf": 95, "figur": [95, 116], "xlim": 95, "ylim": 95, "xx": 95, "linspac": [95, 124], "yy": 95, "meshgrid": 95, "xy": 95, "vstack": 95, "ravel": 95, "xy_df": 95, "contour": 95, "alpha": [95, 122, 124], "linestyl": [95, 124], "boundari": [95, 125], "492": [], "plot_groupcv_inspect_svm": [95, 99], "861": [], "862": [], "864": [], "865": [], "866": [], "867": [105, 106], "868": [], "intern": [96, 127, 128, 134, 135], "caution": [96, 124], "proper": [96, 108, 121, 132], "randomforestclassifi": [96, 114, 125], "understand": [96, 109, 120, 123, 127, 132, 133, 135], "to_plot": 96, "feature_importances_": [96, 108], "barplot": 96, "tight_layout": [96, 108], "review": [96, 116], "wander": 96, "about": [96, 116, 120, 123, 124, 127, 128, 130, 132, 133, 134, 135], "entir": [96, 134, 135], "566": 104, "567": 104, "568": [104, 125], "569": [125, 133], "570": 125, "571": 125, "i_fold": [96, 108], "enumer": [96, 108], "this_import": [96, 108], "416": [], "plot_inspect_random_forest": [96, 99], "make_regress": [97, 122, 123, 128], "normal": [97, 109, 114, 116, 123, 124, 135, 136], "reduct": 97, "19": [98, 120, 122, 125, 133], "065": [], "n_inform": 97, "nois": [97, 123], "first_two": 97, "determin": [97, 125, 135], "belong": [97, 109], "x_to_zscor": 97, "summari": [97, 116], "111790": 97, "141618": 97, "023682": 97, "167718": 97, "686170": 97, "977322": 97, "972988": 97, "087946": 97, "895011": 97, "79": [97, 116], "741431": 97, "069985": 97, "772593": 97, "552990": 97, "659172": 97, "204": 97, "293317": 97, "751257": 97, "484100": 97, "759419": 97, "688891": 97, "64": 97, "724008": 97, "206729": 97, "194442": 97, "028152": 97, "174160": 97, "789944": 97, "421885": 97, "724302": 97, "772156": 97, "408321": 97, "392804": 97, "943621": 97, "256723": 97, "383145": 97, "259309": 97, "216": 97, "221085": 97, "explicitli": [97, 103, 123, 125], "declar": 97, "constructor": 97, "special": 97, "cannot": [97, 135], "tree": [97, 114], "pipeline_cr": [97, 102, 105, 109, 123, 127, 128], "select_vari": [97, 114], "n_compon": [97, 102, 135], "n_estim": [97, 128], "becaus": [97, 109, 123, 124, 125, 127, 130, 132, 133, 134, 135], "creator": [97, 98, 101, 102, 103, 104, 108, 109, 122, 125, 129, 134, 135], "simpli": [97, 122, 123, 124, 127, 128, 135], "did": [97, 104], "hand": [97, 116, 122, 123, 128, 131], "r2": [97, 102, 123, 134], "x_after_pca": 97, "earlier": 97, "x_after_zscor": 97, "high": [97, 115, 122], "pca__pca0": [97, 109], "pca__pca1": [97, 109], "080": 109, "081": 109, "__x_to_zscor": 97, "082": 109, "083": [], "084": 109, "085": [], "725696": 97, "582295": 97, "314458": 97, "942935": 97, "977336": 97, "463217": 97, "525139": 97, "219493": 97, "618559": 97, "908592": 97, "395105": 97, "743192": 97, "328111": 97, "670912": 97, "97": [97, 98, 108], "573900": 97, "401304": 97, "98": [97, 98, 124], "918034": 97, "137435": 97, "99": [97, 98, 133], "894566": 97, "357729": 97, "1__": 97, "4__": 97, "013728": 97, "426259": 97, "364686": 97, "944446": 97, "118838": 97, "931848": 97, "004437": [97, 98], "030684": 97, "309092": 97, "523891": 97, "206189": 97, "157667": 97, "099154": 97, "028182": 97, "335538": 97, "252795": 97, "049139": 97, "133702": 97, "240085": 97, "443863": 97, "deviat": [97, 123], "000000e": 97, "02": [97, 106, 127, 128], "689893e": 97, "387779e": 97, "005038e": 97, "013728e": 97, "010202e": 97, "576015e": 97, "463286e": 97, "763131e": 97, "456486e": 97, "488094e": 97, "018781e": 97, "113700e": 97, "184776e": 97, "326": [], "plot_preprocess": [97, 99], "shufflesplit": 98, "510": [102, 128, 135], "513": [128, 135], "515": [103, 128], "516": 103, "004767": [], "002408": 98, "42489ff0163b2f12752440a6b7ef74c7": 98, "004391": [], "002318": 112, "004211": [], "002286": [], "004200": [], "002320": [], "004222": [], "002315": [], "004184": [], "002294": [], "004201": [], "002290": [], "004248": [], "002326": [], "002363": [], "004217": [], "004238": [], "002298": [], "004229": [], "002311": [], "004156": [], "002314": [], "004206": [], "004158": [], "002285": [], "004155": [], "002312": [], "002302": [], "004168": [], "002304": [], "004198": [], "002308": [], "004180": [], "002322": [], "cv_predict": 98, "repeat0_p0": [98, 127], "repeat1_p0": [98, 127], "repeat2_p0": [98, 127], "repeat3_p0": 98, "_pipelin": 98, "0x7fe724e89a20": [], "227": [], "run_binary_inspect_fold": [98, 99], "auto_examples_02_inspect": 99, "Then": [101, 109, 121, 128, 130, 135], "lya": 101, "paa": 101, "olivero": 101, "sami": [101, 109, 120, 123, 136], "hamdan": [101, 109, 120, 123, 136], "547": [], "548": [], "target_cr": [101, 129], "target_pipeline_cr": [101, 123], "0x7fe724a38250": [], "563": 122, "564": 104, "565": 104, "004338": [], "003049": [], "003920": [], "003011": [], "003896": [], "003113": [], "003907": [], "003016": [], "003901": [], "002966": [], "154": [], "0615805903489": [], "074": [], "run_apply_to_target": [101, 106], "reduc": [102, 109, 135], "dimension": [102, 109, 122, 125, 135], "subset": [102, 125, 130], "georgio": 102, "antonopoulo": 102, "kaustubh": [102, 120, 136], "r": [102, 112, 120], "patil": [102, 120, 136], "709": 127, "assign": [102, 116], "pca1": 102, "pca2": 102, "process": [102, 125, 131, 134, 135], "pca_feats1": 102, "pca_feats2": 102, "__pca1": 102, "__pca2": 102, "__categor": [102, 129], "0x7fe724870ac0": [], "727": [], "728": [], "729": [], "012711": [], "005439": [], "011889": [], "005351": [], "012077": [], "005575": [], "011985": [], "005436": [], "011883": [], "005540": [], "3107976743678922": 102, "untouch": 102, "data_processed1": 102, "pca_feats1__pca0": 102, "161": 102, "063175": 102, "133274": 102, "131461": 102, "039719": 102, "108111": 102, "075741": 102, "085907": 102, "054779": 102, "030464": 102, "001314": 102, "043401": 102, "033246": 102, "015491": 102, "098172": 102, "033216": 102, "032629": 102, "011824": 102, "015999": 102, "050783": 102, "032289": 102, "012577": 102, "034508": 102, "024993": 102, "067737": 102, "013504": 102, "315": [102, 123], "045025": 102, "031454": 102, "020607": 102, "056003": 102, "010903": 102, "001078": 102, "data_processed2": 102, "pca_feats2__pca0": 102, "234716": 102, "012141": 102, "078784": 102, "006290": 102, "026190": 102, "341472": 102, "348168": 102, "269257": 102, "286067": 102, "309025": 102, "362": 102, "404": [], "run_example_pca_featset": [102, 106], "755": [], "attempt": [103, 104], "765": 97, "766": 97, "767": [], "768": [97, 127, 134], "5939164168576971": [103, 104], "gamma": [103, 104, 125, 127], "But": [103, 108, 109, 124, 125, 127, 132, 134, 135], "rbf": [103, 104, 125], "auto": [103, 125], "1e": [103, 104, 125, 127, 128], "speed": [103, 104], "823": 125, "824": 125, "001": [103, 104, 125, 127], "825": [], "svm__c": [103, 104, 125, 127, 128], "826": [], "inner": [103, 104, 125, 127, 128, 136], "827": [], "svm__gamma": [103, 104, 125], "set_column_typ": [103, 125, 127, 134], "setcolumntyp": [103, 125, 127, 134], "828": [], "svc": [103, 114, 125, 127, 134, 135], "830": 134, "7087109857168048": [103, 104], "best_params_": [103, 104, 125], "best_estimator_": [103, 104], "_gamma": [103, 104], "run_hyperparameter_multiple_grid": [103, 106], "analyz": [104, 127], "177": 98, "186": [], "187": 95, "188": 95, "189": 95, "190": [95, 125], "optim": [104, 125, 127, 135], "find": [104, 115, 125, 132], "best": [104, 125, 135], "252": [], "253": [], "254": [], "255": 104, "256": 104, "588308940222183": 104, "much": [104, 124, 125, 127, 130], "explor": [104, 109, 127, 128], "too": [104, 125], "poli": 104, "530": [], "531": [], "533": [], "534": [], "lest": 104, "27": [119, 123], "250": [], "251": [], "5188855581026275": 104, "happen": [104, 127, 128], "801": [], "802": 133, "803": 133, "804": 133, "805": 133, "406": [], "run_hyperparameter_tun": [104, 106], "logist": [105, 114, 133, 135], "22": 123, "208": [], "petal_width": [105, 108, 125, 131, 134, 135], "model_sep": 105, "model_pet": 105, "__sepal": [105, 135], "212": 133, "__petal": [105, 135], "213": [], "0x7fe724e28550": [], "0x7fe724e29a20": [], "214": [], "215": [], "217": [], "323": [], "324": [], "85": 105, "run_stacked_model": [105, 106], "025": [], "auto_examples_03_complex_model": 106, "relat": [107, 123, 131], "stratifiedbootstrap": 108, "ml": [108, 120], "classic": 108, "frequentist": 108, "contrast": 108, "gap": 108, "approach": [108, 122, 124, 125, 130, 135], "below": [108, 119, 122], "2000": 108, "n_bootstrap": 108, "n_element": 108, "len": [108, 109, 123], "scores_ncr": 108, "028": 105, "029": [], "030": [], "031": [], "next": [108, 119, 121, 129, 131, 135], "again": [108, 123, 124, 125, 127, 130, 135], "tell": [108, 123, 134], "confound_remov": [108, 109, 114, 123], "scores_cr": 108, "32": 134, "__featur": [108, 123], "__confound": [108, 123], "179": [], "180": [98, 133], "181": 98, "182": 98, "easier": [108, 116, 135, 136], "df_ncr_metric": 108, "df_cr_metric": 108, "df_metric": 108, "933333": 108, "968889": 108, "948889": 108, "catplot": 108, "col": 108, "swarm": 108, "them": [108, 116, 118, 119, 120, 122, 124, 125, 133, 134, 135], "pair": 108, "systemat": 108, "df_diff_metr": 108, "whisker": 108, "box": [108, 120], "whi": 108, "axhlin": 108, "roc": 108, "auc": 108, "term": [108, 124, 131, 135], "mayb": [108, 133], "percentil": [108, 114], "amount": [108, 120, 127], "ncr_fi": 108, "cr_fi": 108, "feature_import": 108, "dodg": [108, 124], "diff_fi": 108, "axvlin": [108, 124], "996": [], "plot_confound_removal_classif": [108, 110], "most": [109, 119, 122, 123, 124, 127, 130, 135], "remove_confound": 109, "sometim": [109, 123, 127, 128, 129], "discuss": 109, "df_featur": 109, "furthermor": 109, "put": [109, 123], "0x7fe724acfa00": [], "feature_nam": [109, 133], "303": 109, "304": [], "305": [], "df_deconfound": 109, "029271": 109, "057228": 109, "009658": 109, "046011": 109, "042050": 109, "024189": 109, "019424": 109, "012310": 109, "028194": 109, "005874": 109, "047538": 109, "015568": 109, "006874": 109, "012796": 109, "057488": 109, "024667": 109, "061639": 109, "082913": 109, "076494": 109, "039983": 109, "017885": 109, "047387": 109, "041423": 109, "013144": 109, "004736": 109, "036479": 109, "081307": 109, "007659": 109, "025897": 109, "013765": 109, "031358": 109, "052961": 109, "049135": 109, "029380": 109, "000071": 109, "013139": 109, "032449": 109, "032631": 109, "005510": 109, "021964": 109, "008781": 109, "012234": 109, "025295": 109, "037349": 109, "assum": [109, 124], "closer": [109, 114, 134], "achiev": [109, 123, 129, 134, 135], "496": [], "497": [], "0x7fe724aceef0": [], "498": [], "df_transform": 109, "pca__pca2": 109, "pca__pca3": 109, "pca__pca4": 109, "pca__pca5": 109, "pca__pca6": 109, "pca__pca7": 109, "pca__pca8": 109, "014051": 109, "075715": 109, "017395": 109, "012591": 109, "046676": 109, "013408": 109, "034497": 109, "008604": 109, "002330": 109, "099883": 109, "062829": 109, "014516": 109, "013673": 109, "048058": 109, "010254": 109, "004124": 109, "024022": 109, "002075": 109, "029015": 109, "053253": 109, "032477": 109, "061933": 109, "049167": 109, "029565": 109, "042031": 109, "001197": 109, "002579": 109, "035162": 109, "001324": 109, "106807": 109, "028981": 109, "020850": 109, "023413": 109, "008421": 109, "006566": 109, "003545": 109, "003951": 109, "025445": 109, "000421": 109, "018411": 109, "039692": 109, "025022": 109, "043086": 109, "002095": 109, "000517": 109, "lastli": [109, 123], "703": [], "704": [], "705": [], "706": 127, "021827": [], "008035": [], "429556": 109, "353": [109, 112], "89": [109, 112], "021629": [], "008180": [], "522599": 109, "021726": [], "008151": [], "482681": 109, "354": [109, 112], "88": [109, 112], "021698": [], "008026": [], "426498": 109, "021542": [], "008160": [], "550248": 109, "603": [], "run_return_confound": [109, 110], "06": [102, 110], "599": [], "auto_examples_04_confound": 110, "extend": [111, 134], "variou": 111, "aspect": [111, 124, 135], "make_scor": 112, "register_scor": 112, "36": [123, 128], "201": [], "218": [], "004503": [], "002230": [], "104359": 112, "004208": [], "002166": [], "44": [102, 104, 105, 108, 109, 112, 122, 123, 127, 128, 129, 133, 134, 135], "861364": 112, "002147": [], "981407": 112, "004207": [], "002215": [], "956254": 112, "004205": [], "002177": [], "419886": 112, "264653948271885": 112, "thing": [112, 130, 135], "r2_corr": [112, 134], "260": [], "261": [], "262": [], "test_neg_mean_absolute_error": 112, "test_r2_corr": 112, "264654": 112, "486498": 112, "take": [112, 124, 127, 135], "def": 112, "pearson_scor": 112, "squeez": 112, "306": [], "307": [], "157": [], "run_custom_scorers_regress": [112, 113], "auto_examples_05_custom": 113, "descript": [114, 115, 116, 135], "short": [114, 116, 123], "link": [114, 116, 132, 135, 136], "unit": [114, 120], "scaler_robust": 114, "median": 114, "iqr": 114, "robustscal": [114, 125], "scaler_minmax": 114, "minmaxscal": 114, "scaler_maxab": 114, "maxabsscal": 114, "scaler_norm": 114, "norm": 114, "scaler_quantil": 114, "uniform": [114, 124, 136], "robust": [114, 118], "quantiletransform": 114, "scaler_pow": 114, "gaussianis": 114, "powertransform": 114, "select_univari": 114, "genericunivariateselect": 114, "select_percentil": 114, "rank": 114, "selectpercentil": 114, "select_k": [114, 125], "selectkbest": [114, 125], "select_fdr": 114, "selectfdr": 114, "select_fpr": 114, "fpr": 114, "selectfpr": 114, "select_fw": 114, "fwe": 114, "selectfw": 114, "variancethreshold": 114, "drop_column": 114, "dropcolumn": 114, "change_column_typ": 114, "changecolumntyp": 114, "filtercolumn": 114, "princip": [114, 135], "svr": [114, 128, 129], "randomforestregressor": 114, "extratreesclassifi": 114, "extratreesregressor": 114, "adaboost": 114, "adaboostclassifi": 114, "adaboostregressor": 114, "bag": 114, "baggingclassifi": 114, "baggingregressor": 114, "gradientboost": 114, "gradient": 114, "boost": 114, "gradientboostingclassifi": 114, "gradientboostingregressor": 114, "stackingclassifi": [114, 128], "stackingregressor": [114, 128], "gauss": 114, "gaussianprocessclassifi": 114, "gaussianprocessregressor": 114, "logit": [114, 125, 133], "aka": 114, "maxent": 114, "logisticregress": [114, 125], "logitcv": 114, "logisticregressioncv": 114, "l2": [114, 125], "ridgeclassifi": 114, "ridgecv": 114, "built": [114, 120, 128, 133, 134, 135], "ridgeclassifiercv": 114, "sgd": 114, "minim": 114, "empir": [114, 124], "loss": [114, 123], "sgdclassifi": 114, "sgdregressor": 114, "nb_bernoulli": 114, "multivari": 114, "bernoulli": 114, "bernoullinb": 114, "nb_categor": 114, "categoricalnb": 114, "nb_complement": 114, "complementnb": 114, "nb_gaussian": 114, "gaussiannb": 114, "nb_multinomi": 114, "multinomi": 114, "multinomialnb": 114, "dynamicselect": [114, 136], "dummyclassifi": 114, "dummyregressor": 114, "meant": 115, "friendli": [115, 135], "come": [115, 116, 124, 127, 131, 135], "cost": 115, "potenti": [115, 123, 127], "These": [115, 118, 119, 122, 134], "therefor": [115, 119, 122, 123, 134, 135], "flag": [115, 116], "enabl": 115, "disabl": 115, "config": 115, "disable_x_check": 115, "unmatch": 115, "think": [115, 123], "disable_xtypes_check": 115, "miss": [115, 136], "disable_x_verbos": 115, "disable_xtypes_verbos": 115, "fork": 116, "com": [116, 124, 130], "juaml": 116, "repositori": 116, "never": [116, 135], "offici": [116, 119], "clone": 116, "virtual": [116, 119], "pip": [116, 118, 119], "branch": [116, 121], "refactor": [116, 136], "feat": 116, "prefix": 116, "git": [116, 121, 136], "checkout": [116, 121], "pre": [116, 119, 121, 136], "commit": [116, 121, 136], "hook": [116, 136], "help": [116, 119, 120, 123, 127, 133, 135], "regularli": 116, "On": [116, 123, 134], "save": [116, 135], "smaller": 116, "semant": 116, "wip": 116, "verifi": [116, 134], "suit": [116, 127], "tox": 116, "push": [116, 121], "open": 116, "displai": [116, 127, 133], "submit": 116, "templat": 116, "web": 116, "interfac": [116, 128], "meet": 116, "directori": 116, "rare": 116, "circumst": 116, "coverag": 116, "decreas": 116, "report": 116, "codecov": 116, "usag": [116, 119, 130, 135], "draft": [116, 121], "id": 116, "liner": [116, 133], "newsfrag": 116, "bug": [116, 136], "bugfix": 116, "enhanc": 116, "enh": 116, "improv": [116, 119], "miscellan": 116, "misc": 116, "record": 116, "content": 116, "typo": [116, 136], "intro": 116, "biggest": 116, "fan": 116, "yourself": 116, "contributor": 116, "inc": 116, "against": 116, "someon": [116, 124], "core": [116, 130, 133], "team": 116, "success": [116, 125, 130], "pytest": 116, "intend": 116, "cd": 116, "_build": 116, "situat": 116, "clean": [116, 119], "rest": 116, "rst": [116, 121], "plot_": 116, "run_": 116, "block": 116, "comment": 116, "render": [116, 134], "emb": 116, "shall": [116, 124], "preced": 116, "bokeh": [118, 119], "develop": [118, 119, 120, 121, 136], "usual": [118, 125, 135], "through": [118, 135], "manag": [118, 136], "conda": [118, 119], "forg": 118, "standalon": 118, "applic": [118, 122, 123, 127], "browser": 118, "jupyter_bokeh": 118, "servabl": 118, "statsmodel": 119, "0b1": 119, "nevertheless": [119, 135], "although": 119, "strongli": 119, "recommend": [119, 131], "environ": [119, 120, 134], "promin": 119, "venv": 119, "env": 119, "latest": [119, 121, 136], "often": [119, 123, 130, 135], "newest": 119, "sens": [119, 125], "aim": [119, 120, 135], "pypi": [119, 121], "relas": 119, "yet": [119, 131], "orient": 120, "aml": 120, "institut": 120, "neurosci": [120, 122], "medicin": 120, "behaviour": [120, 134], "inm": 120, "thought": [120, 135], "research": [120, 122, 123, 124], "simpler": 120, "abstract": 120, "power": [120, 127, 128], "minor": [120, 121], "flexibl": [120, 128], "video": 120, "tutori": 120, "offer": [120, 131], "essenti": [120, 127], "benefit": 120, "therebi": 120, "avoid": [120, 123, 124, 125, 136], "nice": [120, 131, 134, 135], "system": [120, 121], "accord": [120, 122, 124, 128, 136], "setup": [120, 132], "suggest": [120, 124], "deeper": [120, 127, 132, 133], "topic": [120, 124, 132, 133], "overview": [120, 127, 133, 135], "contribut": 120, "local": 120, "github": [120, 134], "pull": [120, 121], "guidelin": 120, "write": [120, 135], "maintain": 120, "faq": 120, "issu": [120, 121, 124, 127, 136], "2022": [120, 123], "07": [108, 109, 120], "scientif": 120, "public": 120, "vera": 120, "komey": 120, "free": 120, "arxiv": [120, 123], "octob": 120, "48550": 120, "2310": 120, "12568": 120, "heavili": 120, "reliant": 120, "cite": 120, "major": [121, 125], "micro": 121, "devn": 121, "distanc": 121, "setuptools_scm": 121, "plugin": 121, "tag": 121, "increment": [121, 135], "segment": 121, "publish": 121, "onc": [121, 127, 130, 132, 135], "mileston": 121, "reach": 121, "towncrier": 121, "proceed": [121, 135], "sync": 121, "rebas": 121, "changelog": 121, "properli": 121, "reflect": [121, 136], "whats_new": 121, "pr": 121, "merg": 121, "via": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 121, 122, 123, 125, 127, 128, 129, 132, 133, 134, 135], "vx": 121, "setuptools_scm_debug": 121, "outdir": 121, "dist": 121, "bump": [121, 136], "vd": 121, "neuroimag": [122, 123], "typic": 122, "problemat": 122, "due": [122, 124], "curs": 122, "especi": 122, "recent": 122, "propos": 122, "fluid": 122, "intellig": 122, "sustain": 122, "attent": 122, "nutshel": 122, "summar": 122, "subsequ": 122, "commonli": [122, 135], "principl": 122, "leverag": [122, 127], "workflow": [122, 127, 132, 135], "x_name": [122, 128], "feature_": [122, 123, 128], "cbpm_pipeline_cr": 122, "final_model": [122, 127], "836": [], "837": [], "feature_1": [122, 123, 128], "feature_2": [122, 123, 128], "feature_3": [122, 123, 128], "feature_4": [122, 123, 128], "feature_5": [122, 123, 128], "feature_6": [122, 123, 128], "feature_7": [122, 123, 128], "feature_8": [122, 123, 128], "feature_9": [122, 123, 128], "feature_10": [122, 123, 128], "feature_11": [122, 123, 128], "feature_12": [122, 123, 128], "feature_13": [122, 123, 128], "feature_14": [122, 123, 128], "feature_15": [122, 123, 128], "feature_16": [122, 123, 128], "feature_17": [122, 123, 128], "feature_18": [122, 123, 128], "feature_19": [122, 123, 128], "feature_20": [122, 128], "838": [], "839": [], "840": [], "857": [], "No": [122, 124], "rid": 122, "265": 101, "878": 112, "898": [], "918": [105, 125], "937": [], "957": 92, "customis": 122, "increas": 122, "960": [], "cbpm__significance_threshold": 122, "noteworthi": 122, "sign": 122, "spearmanr": 122, "0x7fe72c12c280": [], "0x7fe74d54a290": [], "0x7fe74d54e230": [], "guess": 122, "spearman": 122, "xilin": 122, "mar": [122, 123], "emili": 122, "fingerprint": 122, "2015": 122, "nov": 122, "1664": 122, "71": 122, "rosenberg": 122, "monica": 122, "neuromark": 122, "whole": 122, "jan": [122, 123], "165": 122, "129": 95, "ultim": 123, "real": [123, 127], "world": [123, 127], "scenario": [123, 134, 135], "relationship": 123, "un": 123, "observ": 123, "similarli": [123, 127], "rather": 123, "jointli": 123, "prevent": [123, 125], "laid": 123, "rel": [123, 128], "littl": 123, "involv": 123, "simul": 123, "artifici": [123, 128, 135], "normal_dist_conf_on": 123, "normal_dist_conf_two": 123, "noise_conf_on": 123, "rand": [123, 124], "noise_conf_two": 123, "multipli": 123, "factor": 123, "confound_on": 123, "confound_two": 123, "prefer": 123, "human": 123, "readabl": 123, "confound_1": 123, "confound_2": 123, "my_target": 123, "distinguish": [123, 128, 135], "predictor": 123, "accordingli": [123, 130], "crucial": 123, "parametr": [123, 131, 135], "57": 133, "562": [], "whose": 123, "feature_0": 123, "024047": [], "006615": [], "786706": 123, "022957": [], "006627": [], "592156": 123, "023007": [], "006605": [], "722494": 123, "022952": [], "006688": [], "674188": 123, "022834": [], "006726": [], "570243": 123, "slightli": 123, "target_confound_remov": 123, "0x7fe72498ef80": [], "insert": 123, "importantli": [123, 124, 127, 130, 131, 135], "0x7fe72498fe20": [], "738": [], "space": [], "748": 97, "758": [], "769": 134, "778": 85, "005694": [], "003726": [], "253033": 123, "005696": [], "003706": [], "059126": 123, "005645": [], "003686": [], "256962": 123, "005920": [], "003683": [], "096475": 123, "005604": [], "534386": 123, "reason": [123, 124], "further": [123, 130], "consider": 123, "why": [123, 124, 125, 132], "mitig": 123, "bia": [123, 124], "accur": 123, "argu": 123, "appropri": 123, "valuabl": [123, 127, 130], "difficult": [123, 125], "challeng": 123, "ineffect": 123, "particular": [123, 127, 135], "fact": [123, 127], "collid": 123, "spuriou": 123, "evid": [123, 124], "leak": [123, 130], "bias": [123, 124], "care": [123, 135], "question": [123, 124], "thorough": 123, "strength": 123, "limit": 123, "techniqu": [123, 124, 125, 127], "rao": 123, "anil": 123, "presenc": 123, "volum": [123, 124], "april": 123, "49": [85, 86, 123], "snoek": 123, "luka": 123, "184": [98, 123], "januari": 123, "2019": 123, "741": 123, "760": 123, "he": 123, "tong": 123, "neural": [123, 135], "network": [123, 135], "206": [123, 133], "februari": 123, "2020": 123, "116276": 123, "practic": [123, 124], "knowledg": [123, 127], "discoveri": 123, "databas": 123, "scienc": [123, 130], "demo": 123, "track": 123, "2021": 123, "12461": 123, "chyzhyk": 123, "darya": 123, "biomark": 123, "gigasci": 123, "holmberg": 123, "mathia": 123, "jama": 123, "327": 123, "1282": 123, "1283": 123, "1001": [123, 133], "1820": 123, "2210": 123, "09232": 123, "revis": 123, "oct": 123, "222": [], "mention": 124, "don": [124, 125], "almost": 124, "infinit": 124, "unbias": 124, "overestim": 124, "rememb": [124, 127, 134], "surpris": 124, "would": [124, 125, 131, 133, 135], "answer": 124, "imposs": 124, "bengio": 124, "grandvalet": 124, "colleagu": 124, "few": [124, 127, 130, 136], "word": [124, 125], "thumb": [124, 135], "compromis": 124, "loocv": 124, "holdout": 124, "taken": 124, "intens": 124, "unconclus": 124, "intuit": [124, 127, 133], "direct": 124, "thread": 124, "extrem": 124, "choic": 124, "fun": 124, "begin": 124, "variant": 124, "solv": [124, 130], "shed": 124, "light": 124, "poorli": 124, "stratifiedkfold": [124, 134], "rescu": 124, "matter": [124, 130, 133], "quantiz": 124, "divid": 124, "histplot": 124, "train_set": 124, "test_set": 124, "shrink": [124, 127], "suptitl": 124, "gaussian": 124, "discrete_i": 124, "digit": 124, "kdeplot": 124, "layer": 124, "dash": 124, "repeatedcontinuousstratifiedkfold": [124, 136], "repeatedcontinuousstratifiedgroupkfold": 124, "jmlr": 124, "decemb": 124, "2004": 124, "1089": 124, "1105": 124, "stackexchang": 124, "61783": 124, "kohavi": 124, "ijcai": 124, "1137": 124, "1145": 124, "473": [], "flower": 125, "pprint": [125, 127, 134], "pretti": 125, "tolist": [125, 133], "who": 125, "common": [125, 130], "creator2": [125, 133], "591": [], "592": [], "593": [], "594": [], "8099999999999999": 125, "632": [], "633": [], "634": [], "635": [], "etc": 125, "optimist": 125, "loop": 125, "672": 122, "673": 122, "scores_tun": 125, "model_tun": 125, "674": [], "675": [], "676": [], "677": [], "9100000000000001": 125, "tri": 125, "conclud": 125, "585": [], "586": [], "587": [], "588": [], "589": [], "0001": 125, "066": [], "067": [], "068": [], "069": [], "39": [], "268": [88, 101], "269": [88, 127], "select_k__k": 125, "270": [88, 127], "271": [88, 127], "272": 127, "concept": [125, 130], "receiv": 125, "gridsearchcv": 125, "veri": [125, 127, 128, 130, 131], "construct": 125, "diment": 125, "randomizedsearchcv": 125, "lot": [125, 127], "consum": 125, "55": 96, "775": [], "776": [], "those": [125, 130], "unnecessari": 125, "model1": 125, "777": [], "779": [], "780": [], "781": [], "782": [], "783": [], "784": [], "93": 125, "forc": 125, "repat": 125, "creator1": [125, 133], "model2": 125, "257": 104, "258": 104, "259": 104, "inde": [125, 134], "equival": 125, "param_grid": [125, 127], "stop": 125, "creator3": [125, 133], "max_depth": [125, 128], "creator4": 125, "penalti": 125, "l1": 125, "dual": 125, "solver": 125, "liblinear": 125, "model3": 125, "754": [], "756": [], "757": [], "model__c": 125, "model__gamma": 125, "759": [], "model__max_depth": 125, "model__penalti": 125, "9200000000000002": 125, "beat": 125, "976": [85, 125], "gain": 127, "insight": 127, "impact": 127, "abil": 127, "critic": 127, "influenc": 127, "deploy": 127, "focu": [127, 131], "anomali": 127, "logger": [127, 128], "toi": [127, 128], "plai": 127, "penguin": 127, "penguins_df": 127, "island": 127, "queri": 127, "chinstrap": 127, "dropna": 127, "adeli": 127, "gentoo": 127, "105": [84, 136], "fairli": 127, "geomspac": [127, 128], "1e2": [127, 128], "946": [], "notic": [127, 135], "bill_length_mm": 127, "bill_depth_mm": 127, "flipper_length_mm": 127, "body_mass_g": 127, "952": [], "151": [123, 127, 136], "123": 127, "953": [], "quick": 127, "error_scor": 127, "jucolumntransform": 127, "with_mean": [127, 135], "with_std": 127, "wrapmodel": 127, "break_ti": 127, "cache_s": 127, "class_weight": 127, "coef0": 127, "decision_function_shap": 127, "ovr": 127, "max_it": 127, "tol": 127, "estimator__memori": 127, "estimator__set_column_typ": 127, "estimator__set_column_types__x_typ": 127, "estimator__set_column_types__row_select_col_typ": 127, "estimator__set_column_types__row_select_v": 127, "estimator__step": 127, "estimator__svm": 127, "estimator__svm__c": 127, "estimator__svm__apply_to": 127, "estimator__svm__break_ti": 127, "estimator__svm__cache_s": 127, "estimator__svm__class_weight": 127, "estimator__svm__coef0": 127, "estimator__svm__decision_function_shap": 127, "estimator__svm__degre": 127, "estimator__svm__gamma": 127, "estimator__svm__kernel": 127, "estimator__svm__max_it": 127, "estimator__svm__model": 127, "estimator__svm__needed_typ": 127, "estimator__svm__prob": 127, "estimator__svm__random_st": 127, "estimator__svm__shrink": 127, "estimator__svm__tol": 127, "estimator__svm__verbos": 127, "estimator__verbos": 127, "estimator__zscor": 127, "estimator__zscore__apply_to": 127, "estimator__zscore__copi": 127, "estimator__zscore__nam": 127, "estimator__zscore__needed_typ": 127, "estimator__zscore__row_select_col_typ": 127, "estimator__zscore__row_select_v": 127, "estimator__zscore__transform": 127, "estimator__zscore__with_mean": 127, "estimator__zscore__with_std": 127, "pre_dispatch": 127, "refit": 127, "get_fitted_param": 127, "set_column_types__column_mapper_": 127, "bill_depth_mm__": 127, "bill_length_mm__": 127, "body_mass_g__": 127, "flipper_length_mm__": 127, "set_column_types__feature_names_in_": 127, "svm__model_": 127, "zscore__column_transformer_": 127, "remaind": 127, "passthrough": 127, "make_type_selector": 127, "0x7fe7271821d0": [], "verbose_feature_names_out": 127, "zscore__feature_names_in_": 127, "zscore__mean_": 127, "70291971": 127, "83613139": 127, "202": 127, "17883212": 127, "4318": 127, "06569343": 127, "zscore__n_features_in_": 127, "zscore__n_samples_seen_": 127, "zscore__scale_": 127, "18607683": 127, "00973207": 127, "02045287": 127, "834": 127, "40628575": 127, "zscore__var_": 127, "68953929e": 127, "03902299e": 127, "25614004e": 127, "96233850e": 127, "somewhat": [127, 128], "structur": [127, 131], "made": [127, 132, 133], "handi": [127, 131, 135], "fold_predict": 127, "repeat8_p0": 127, "repeat9_p0": 127, "c_valu": 127, "fold_inspector": 127, "fold_model": 127, "realiz": 127, "ever": 127, "address": 127, "aris": 127, "serv": 127, "asset": 127, "transpar": [127, 130], "reliabl": 127, "capabl": [127, 128, 136], "navig": 127, "har": 127, "872": [], "customiz": 128, "cours": 128, "914": 104, "mind": 128, "arbitrari": [128, 134], "model_1": [128, 133], "916": 105, "00000000e": 128, "78255940e": 128, "74263683e": 128, "15443469e": 128, "99484250e": 128, "66810054e": 128, "64158883e": 128, "29154967e": 128, "59381366e": 128, "917": 105, "0x7fe7247d57b0": [], "min_samples_leaf": 128, "min_samples_split": 128, "0x7fe7247d60e0": [], "0x7fe7247d59c0": [], "919": [105, 125], "920": [105, 125], "921": [105, 125], "922": 125, "923": [], "rf__max_depth": 128, "rf__min_samples_leaf": 128, "rf__min_samples_split": 128, "924": [], "58": [101, 103, 133], "061": [], "062": [], "desir": [128, 135], "type1": 128, "type2": 128, "type1_": 128, "type2_": 128, "465": [], "__type1": 128, "466": [], "0x7fe7246f8430": [], "__type2": 128, "467": [], "0x7fe7247d4e50": [], "468": [], "type1_1": 128, "type1_2": 128, "type1_3": 128, "type1_4": 128, "type1_5": 128, "type1_6": 128, "type1_7": 128, "type1_8": 128, "type1_9": 128, "type1_10": 128, "type2_1": 128, "type2_2": 128, "type2_3": 128, "type2_4": 128, "type2_5": 128, "type2_6": 128, "type2_7": 128, "type2_8": 128, "type2_9": 128, "type2_10": 128, "469": [], "470": [], "471": [], "472": [], "652": [], "653": [], "flexibli": 128, "Of": 128, "911": 104, "cover": [129, 131, 135], "far": [129, 131, 134, 135], "conist": 129, "manner": [129, 130, 131, 133, 135], "clear": 129, "628": 88, "target_jutargetpipelin": 129, "0x7fe7249787f0": [], "629": 88, "630": [], "631": [], "009775": [], "003319": [], "008625": [], "003251": [], "009010": [], "003214": [], "008810": [], "003242": [], "008754": [], "003206": [], "overal": 129, "091": [], "goal": 130, "beyond": 130, "exact": 130, "domingo": 130, "2012": 130, "resourc": 130, "efficeint": 130, "disadvantag": 130, "small": 130, "unstabl": 130, "overcom": 130, "accident": 130, "quickli": 130, "obviou": 130, "straightforward": [130, 135], "mistak": 130, "www": 130, "sciencedirect": 130, "articl": 130, "pii": 130, "s105381191630595x": 130, "natur": 130, "s41746": 130, "022": 130, "00592": 130, "s1053811917305311": 130, "cross_valid": 130, "commun": 131, "known": [131, 135], "capac": 131, "colum": 131, "manipul": 131, "anyth": [131, 134], "meaning": 131, "hundr": 131, "thousand": 131, "saw": [131, 133, 134, 135], "advanc": 131, "004": [104, 131], "backbon": 132, "magic": 132, "goe": 132, "utmost": 132, "glanc": [132, 134], "chapter": 132, "familiar": 132, "along": 132, "fundament": 132, "essenc": 132, "click": 132, "fanci": 132, "stuff": 132, "decent": 133, "benchmark": 133, "enough": 133, "tediou": 133, "sound": 133, "switch": 133, "breast": 133, "cancer": 133, "malign": 133, "benign": 133, "load_breast_canc": 133, "radiu": 133, "textur": 133, "perimet": 133, "area": 133, "worst": 133, "concav": 133, "symmetri": 133, "fractal": 133, "dimens": 133, "38": 133, "122": [133, 136], "2654": 133, "4601": 133, "11890": 133, "132": 133, "1326": 133, "1860": 133, "2750": 133, "08902": 133, "69": 133, "130": 133, "1203": 133, "2430": 133, "3613": 133, "08758": 133, "386": [133, 135], "2575": 133, "6638": 133, "17300": 133, "135": [133, 136], "1297": 133, "1625": 133, "2364": 133, "07678": 133, "cv_splitter": [133, 134], "139": [], "smooth": 133, "compact": 133, "141": [], "142": [], "143": [], "144": 135, "357": 133, "088": [], "089": [], "090": [], "092": [108, 129], "169": [], "pairwis": 133, "neither": 133, "nor": 133, "946304": 133, "083461": 133, "250382": 133, "140882": 133, "891066": 133, "285373": 133, "048138": 133, "144413": 133, "361847": 133, "206356": 133, "619069": 133, "014156": [], "989015": [], "093249": [], "302681": [], "908044": [], "dive": 133, "curiou": 133, "296": [], "54": [96, 98], "110": 84, "111": 84, "112": 84, "113": [], "004829": [], "002383": [], "004336": [], "002324": [], "004236": [], "004270": [], "004303": [], "002331": [], "933": 134, "overfit": 134, "158": [], "159": [], "160": [], "004474": [], "004308": [], "002382": [], "004384": [98, 112], "002352": [], "004287": [], "002356": [], "004291": [], "002316": 85, "train_scor": 134, "cryptic": 134, "worri": 134, "doesn": 134, "219": [], "004396": [], "002346": [], "004398": [], "002376": [], "004302": [], "002328": [], "004329": [], "x27": 134, "rerun": 134, "cell": 134, "represent": 134, "trust": 134, "unabl": 134, "nbviewer": 134, "pipelinepipelin": [], "setcolumntypessetcolumntyp": 134, "standardscalerstandardscal": 134, "svcsvc": 134, "didn": 134, "got": 134, "five": 134, "back": 134, "ourselv": 134, "fourth": 134, "283": [], "284": [], "285": [], "286": [], "004549": [], "002460": [134, 135], "7449876d309382acfef94df9d102aa76": 134, "004315": [], "002289": [], "004343": [], "002323": [], "004316": [], "002317": [], "004354": [], "004300": [], "004393": [], "002341": [], "004328": [], "002334": [], "assumpt": 134, "list_scor": 134, "adjusted_mutual_info_scor": 134, "adjusted_rand_scor": 134, "average_precis": 134, "completeness_scor": 134, "explained_vari": 134, "f1": 134, "f1_macro": 134, "f1_micro": 134, "f1_sampl": 134, "f1_weight": 134, "fowlkes_mallows_scor": 134, "homogeneity_scor": 134, "jaccard": 134, "jaccard_macro": 134, "jaccard_micro": 134, "jaccard_sampl": 134, "jaccard_weight": 134, "matthews_corrcoef": 134, "max_error": 134, "mutual_info_scor": 134, "neg_brier_scor": 134, "neg_log_loss": 134, "neg_mean_absolute_percentage_error": 134, "neg_mean_gamma_devi": 134, "neg_mean_poisson_devi": 134, "neg_mean_squared_error": 134, "neg_mean_squared_log_error": 134, "neg_median_absolute_error": 134, "neg_negative_likelihood_ratio": 134, "neg_root_mean_squared_error": 134, "normalized_mutual_info_scor": 134, "positive_likelihood_ratio": 134, "precision_macro": 134, "precision_micro": 134, "precision_sampl": 134, "precision_weight": 134, "rand_scor": 134, "recal": 134, "recall_macro": 134, "recall_micro": 134, "recall_sampl": 134, "recall_weight": 134, "roc_auc_ovo": 134, "roc_auc_ovo_weight": 134, "roc_auc_ovr": 134, "roc_auc_ovr_weight": 134, "top_k_accuraci": 134, "v_measure_scor": 134, "r_corr": 134, "394": [], "395": [], "396": [], "005110": [], "003991": [], "004383": [], "003855": [], "004703": 134, "004382": [], "003874": [], "004333": [], "003808": 123, "003833": [], "004355": [], "003815": [], "004449": [], "003821": [], "004362": [], "003844": [], "003806": 123, "430": [], "autom": 135, "pipe": 135, "fed": 135, "modifi": 135, "safe": 135, "664": [], "665": [], "666": 92, "667": [92, 122], "668": 92, "003031": [], "001701": [], "002752": [], "001656": [], "002821": [], "001617": [], "002672": [], "001606": [], "002671": [], "001612": [], "voil\u00e0": 135, "resembl": 135, "scaler": 135, "700": [], "701": [], "702": [], "004473": [], "002371": [], "002339": [], "004313": [], "002338": [], "004395": 85, "002336": 85, "decomposit": 135, "previous": 135, "746": [], "747": [], "749": 97, "005647": [], "003119": [], "005471": [], "003121": [], "005386": [], "003105": [], "005390": [], "003154": [], "005360": [], "003070": [], "opaqu": 135, "simplifi": 135, "neat": 135, "806": [127, 133], "807": 133, "005523": [], "003087": [], "005363": [], "003052": [], "005296": [], "003073": [], "003067": [], "005323": [], "003042": [], "awesom": 135, "prepreprocess": 135, "jump": 135, "aren": 135, "shouldn": 135, "ye": 135, "turn": 135, "learnt": 135, "experi": 135, "heurist": 135, "rate": 135, "sigma": 135, "sai": 135, "860": [], "basi": 135, "comma": 135, "wonder": 135, "besid": 135, "definit": 135, "pca_1": 135, "869": [], "016169": [], "006721": [], "015728": [], "006825": [], "015750": [], "006704": [], "015719": [], "006840": [], "015959": [], "006748": [], "boser": 135, "guyon": 135, "vapnik": 135, "margin": 135, "colt": 135, "92": 135, "fifth": 135, "annual": 135, "workshop": 135, "theori": 135, "1992": 135, "jul": 135, "338": [125, 135], "surround": 136, "146": [123, 136], "instruct": 136, "fede": 136, "94": 136, "108": [95, 136], "multiprocess": 136, "nos": 136, "extendeddataframepipelin": 136, "tranform_until": 136, "63": 136, "minimum": 136, "face": 136, "create_pipelin": 136, "register_model": 136, "dev111": [], "133": 122, "134": [], "136": [], "137": [], "004774": [], "002519": [], "004399": [], "002484": [], "004342": [], "002470": [], "004352": [], "002487": [], "004312": [], "tmp4efeun6v": [], "eb6ea4db6c3c19d60a4593e8907522ae5f153cf0": [], "517": [103, 128], "980": [], "981": [], "982": [], "983": [], "004750": [], "002277": [], "004232": [], "002136": [], "002157": [], "004153": [], "002168": [], "004163": [], "002131": [], "817": 125, "0x7f1605de0ca0": [], "400": 86, "401": [], "402": [], "403": [], "446": [86, 90, 103, 135], "447": 135, "448": 135, "835": [], "620": 92, "638": 92, "639": 92, "640": 92, "641": 92, "642": [], "280": [], "281": [], "282": [], "644": [], "645": [], "646": 89, "647": 122, "648": [], "388": 89, "818": 125, "371": [], "372": [], "373": [], "374": [], "375": [], "415": [], "417": [], "418": [], "461": [], "462": [], "463": [], "694": 128, "731": [], "596": [], "636": [], "637": [], "912": [104, 105], "913": [104, 105], "925": [], "943": [], "003": [], "005": 104, "006": [104, 125], "464": [], "332": [125, 129], "521": 103, "535": [], "536": 109, "537": 109, "538": 96, "539": 109, "540": [], "119": [], "124": [], "125": [], "004663": [], "004239": [], "002414": 98, "004185": [], "002301": [], "004344": [], "004215": [], "002268": [], "004150": [], "004188": [], "004262": [], "002349": [], "004194": [], "004162": [], "004210": [], "002325": [], "004218": [], "004246": [], "002372": [], "004214": [], "002303": [], "004235": [], "0x7f1605e02bc0": [], "330": [125, 129], "33": [133, 134, 135], "995": [], "0x7f160585fca0": [], "011": [], "012": [], "013": [], "014": [], "004371": [], "002176": [], "003941": [], "002218": [], "003949": [], "002130": [], "003996": [], "002120": [], "003880": [], "002065": [], "51357151914367": 101, "070": [], "41": [], "0x7f1605ac25f0": [], "997": [], "998": [], "999": [], "000": [], "012722": [], "005367": [], "011701": [], "005322": [], "011638": [], "005394": [], "011692": [], "005252": [], "011647": [], "005430": [], "341": 125, "196": [], "197": [], "198": [], "199": [], "298": [], "480": [], "489": [], "490": [], "491": 102, "549": [], "550": [], "551": [], "542": [96, 122], "543": [96, 122], "544": [96, 122], "545": 122, "546": 122, "378": [], "609": [], "610": [], "0x7f16061f13f0": [], "0x7f16061f2890": [], "611": [], "612": [], "613": [], "614": [], "841": [], "194": 125, "352": [], "355": [], "356": [], "785": [], "0x7f1605de2620": [], "493": [], "495": 99, "0x7f1605de1ae0": [], "684": [], "686": [], "885": [], "886": [], "887": 133, "888": 133, "021313": [], "007902": [], "021067": [], "007909": [], "020898": [], "007873": [], "021204": [], "007906": [], "021056": [], "007852": [], "147": 123, "148": 123, "162": [112, 113], "163": [], "164": [], "004529": [], "002174": [], "002255": [], "004221": [], "002198": [], "004199": [], "002179": [], "207": [], "209": [], "155": [], "820": 125, "881": [], "884": 133, "0x7f160c0b8280": [], "0x7f162d432290": [], "0x7f162d435a30": [], "131": [], "397": 86, "398": 86, "399": 86, "023874": [], "006735": [], "022810": [], "006667": [], "022894": [], "006629": [], "006662": [], "022813": [], "0x7f16057b5660": [], "556": [], "0x7f16057b6e60": [], "557": [], "558": [], "559": [], "560": [], "005703": [], "003682": [], "005627": [], "003597": [], "005663": [], "003630": [], "005707": [], "003674": [], "005672": [], "003560": [], "221": [], "277": [], "278": [], "316": 123, "317": 123, "318": 123, "358": [], "359": 135, "360": [], "310": [], "311": [], "312": [], "46": [88, 89, 128], "753": [], "230": [], "231": 136, "232": [123, 136], "233": 136, "234": 136, "235": 136, "236": 136, "237": [98, 99], "238": [], "239": [], "643": [], "649": [], "106": 84, "107": 95, "109": 84, "114": [], "115": [], "116": [], "008": [104, 125], "843": [], "844": [89, 90], "845": [86, 90], "846": [], "0x7f1605e03d60": [], "742": [], "744": [], "0x7f1605f3fb20": [], "745": [], "0x7f16060fca30": [], "0x7f16060ff730": [], "750": [], "751": [], "0x7f1605b660b0": [], "0x7f16060fe1a0": [], "279": [], "455": 103, "0x7f1605b3beb0": [], "009635": [], "003238": [], "008474": [], "003198": [], "008955": [], "003142": [], "008747": [], "003164": [], "008746": [], "003134": [], "972": [104, 125], "973": [104, 125], "974": [85, 104, 125], "975": [85, 125], "928": [], "929": [], "930": [], "931": [], "932": [], "004994": [], "002482": 98, "004544": [], "004400": [], "002373": [], "004407": [], "002357": [], "004409": [], "002396": [], "004505": 84, "002404": [], "004373": [], "002384": [], "004375": [], "002337": [], "004357": [], "002409": [], "004348": [], "002397": [], "056": [], "057": [], "058": [], "004412": [], "004284": [], "002283": [], "004281": [], "002306": [], "121": 106, "004477": [], "004220": [], "002273": [], "004251": [], "002253": [], "002265": 112, "004332": [], "002309": 101, "002426": 135, "002387": [], "004353": [], "003954": [], "003798": [], "003779": [], "004323": [], "003774": [], "004268": [], "003767": [], "004296": [], "003824": [], "004299": [], "003776": [], "003783": [], "004306": [], "003750": [], "426": [], "003093": [], "001751": [], "002808": [], "001657": [], "002763": [], "001620": [], "002725": [], "001616": [], "002722": [], "001631": [], "004560": [], "002369": [], "004403": [], "002405": [], "004346": [], "002366": [], "581": [], "582": [], "583": [], "584": 122, "005722": [], "003159": [], "005462": [], "003138": [], "005371": [], "003109": [], "005410": [], "003101": [], "006259": [], "003074": [], "005451": [], "003139": [], "005391": [], "003158": [], "005382": [], "005380": [], "003026": [], "697": [], "698": [], "699": [], "016282": [], "015637": [], "006749": [], "015843": [], "006714": [], "015613": [], "006821": [], "2024": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 120, 122, 123, 125, 127, 128, 129, 133, 134, 135], "59": 105, "dev112": [], "004766": [], "002513": 134, "004318": [], "002461": [], "002452": [], "004381": [], "002443": [], "tmpbti83iq_": [], "ffc61acfa75ef10b46f5b265f4f257b1789532fa": [], "342": 89, "004727": [], "004301": [], "002234": [], "004324": [], "004277": [], "002251": [], "002241": 101, "656": [], "0x7f016dd825c0": [], "984": [], "985": [], "027": 105, "366": [], "367": [], "368": 128, "369": [], "370": [], "019": 134, "020": [], "021": [], "387": [102, 106, 135], "407": [], "096": 108, "097": 108, "098": [], "099": [], "191": [95, 125], "192": 125, "541": 96, "166": [], "167": [], "486": [], "487": [], "488": [], "451": 134, "657": [125, 128], "678": [], "735": [], "736": [], "739": [], "086": [], "087": [], "793": [], "794": [], "795": [], "796": [], "797": [], "798": [], "434": [], "287": [], "288": [], "351": [], "734": [], "740": [], "004742": [], "002417": [], "002354": 112, "004261": [], "002370": [], "002368": [], "004272": [], "004286": [], "002413": 98, "004252": [], "004271": [], "004295": [], "002342": [], "004297": [], "004209": [], "002359": [], "004278": [], "002353": [], "004240": [], "004242": [], "004276": [], "004289": [], "002351": [], "0x7f01747ecbe0": [], "0x7f01707f3550": [], "004350": [], "002181": [], "004019": [], "003937": [], "004080": [], "003917": [], "002167": [], "0x7f016d9d9d20": [], "012650": [], "005520": [], "011843": [], "005446": [], "012108": [], "005570": [], "011927": [], "005421": [], "011857": [], "005587": [], "343": [89, 97, 99], "977": 85, "978": [], "979": [], "035": [], "036": [], "037": [], "038": [], "039": [], "040": [], "041": [], "319": 123, "320": [], "376": [], "377": [], "379": [], "654": [], "655": [], "658": [125, 128], "380": [], "381": [88, 90], "382": [], "935": [], "936": [], "938": [], "939": 112, "408": [], "393": [], "0x7f0170209ff0": [], "0x7f017020b220": [], "507": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 108, 112, 122, 127, 128, 135], "808": 86, "033": [], "034": [], "321": [], "322": [], "0x7f0170176ad0": [], "325": [], "0x7f0170176ec0": [], "519": [103, 128], "520": 103, "021865": [], "008237": [], "021556": [], "008142": [], "021440": [], "008092": [], "021584": [], "008106": [], "008099": [], "604": [], "445": [86, 135], "004489": [], "002225": [], "002173": [], "004241": [], "002186": [], "002199": [], "079": 109, "126": 95, "156": [], "598": [], "617": [], "721": 134, "722": [], "0x7f01750717e0": [], "0x7f01965225f0": [], "0x7f019652a2b0": [], "889": [], "890": [], "891": [], "892": 112, "023952": [], "006817": [], "022981": [], "006685": [], "023014": [], "006705": [], "022914": [], "022857": [], "006808": [], "0x7f01700b5ba0": [], "049": [], "0x7f016d494250": [], "050": [], "051": [], "052": [], "053": [], "005770": [], "006350": [], "004781": [], "005739": [], "003699": [], "005869": [], "003708": [], "005691": 135, "003650": [], "225": [], "577": [], "926": [], "927": [], "007": [104, 125], "009": 125, "010": 125, "474": [], "475": [], "476": [], "477": [], "478": [], "732": [], "405": [], "907": [], "908": [], "909": [], "910": 104, "444": [86, 135], "450": [], "553": [], "226": [], "228": [], "229": [], "0x7f016dc28b20": [], "526": [], "0x7f016d6d2680": [], "0x7f016d6d3190": [], "0x7f016d6d1c00": [], "752": [], "0x7f016daa3f70": [], "0x7f016d4c1e10": [], "940": 112, "855": [], "412": [], "0x7f016de0d210": [], "413": [], "414": [], "009619": [], "003284": [], "008549": [], "003224": [], "009034": [], "003204": [], "008809": [], "008751": [], "003205": [], "485": [], "438": 89, "483": [], "484": [], "004869": [], "002365": [], "004439": [], "004322": [], "004330": [], "004455": [], "002401": [], "004368": [], "004351": [], "002347": [], "004334": [], "004326": [], "004472": [], "002360": [], "004337": [], "004621": [], "004349": [], "004428": [], "004445": 85, "004376": [], "002361": [], "004369": [], "004460": [], "004419": 98, "002362": [], "770": 134, "004426": [], "004004": [], "004356": [], "003843": [], "004411": [], "003893": [], "004436": [], "003852": [], "003857": [], "003870": [], "004414": [], "003865": [], "004366": [], "032": [], "003096": [], "001655": [], "002753": [], "001594": [], "002683": [], "001580": [], "002802": [], "001663": [], "002811": [], "001660": [], "064": [], "004519": [], "004339": [], "002344": [], "002379": [], "005665": [], "003127": [], "005331": [], "005424": [], "003079": [], "005379": [], "003092": [], "168": 136, "170": 136, "171": 133, "005467": [], "003137": [], "005362": [], "003077": [], "005312": [], "003041": [], "005341": [], "003057": [], "005318": [], "223": [], "224": [], "016257": [], "007108": [], "015859": [], "006730": [], "015880": [], "006824": [], "015691": [], "006778": [], "015935": [], "006796": [], "337": [103, 106, 125, 135], "dev113": [], "954": [], "955": 92, "956": 92, "958": 92, "004788": [], "002506": [], "002400": [], "004304": [], "002422": [], "004317": [], "002439": [], "tmp8qc31nnz": [], "4a1172d2cfb09b6dfae4e8c22cf3c06c515de63c": [], "004666": [], "002259": [], "002231": [], "004142": [], "002188": [], "575": 125, "576": [], "0x7f7066eb42e0": [], "054": [], "055": [], "601": [], "117": [], "118": [], "482": [], "071": [101, 106], "072": [], "073": [], "383": [], "384": 135, "411": [], "425": [], "427": [], "428": [], "423": [], "627": 88, "344": 89, "986": 112, "987": 112, "988": 112, "989": [], "615": [], "616": [], "618": [], "619": [], "004640": [], "002378": [], "002288": [], "004152": [], "004193": [], "004187": [], "002300": [], "004164": [], "002261": 101, "004147": [], "004175": [], "004174": [], "002275": [], "004172": [], "004173": [], "002319": [], "004166": [], "002280": [], "002305": [], "002310": [], "004148": [], "002297": [], "004267": [], "004160": [], "0x7f7066e9b070": [], "0x7f7066c419f0": [], "004310": [], "002104": [], "003891": [], "002115": [], "002072": [], "003922": [], "002114": [], "003882": [], "0x7f7066bc1c00": [], "012735": [], "005387": [], "011879": [], "005435": [], "011796": [], "005484": [], "011734": [], "005356": [], "011713": [], "005500": [], "625": [88, 92], "626": [88, 92, 122], "685": [], "687": [], "688": [109, 110, 125], "689": [], "690": [], "691": [], "294": [], "994": [], "002": [], "552": [], "554": [], "018": 134, "0x7f7066c42bf0": [], "0x7f7066c43790": [], "023": [], "026": 105, "788": [], "897": [], "659": 125, "661": 125, "0x7f70674084f0": [], "0x7f706740b3d0": [], "349": [], "350": [], "021916": [], "008052": [], "021770": [], "008082": [], "021483": [], "008040": [], "021679": [], "008064": [], "021400": [], "008032": [], "004485": [], "002187": [], "004149": [], "002139": [], "004134": [], "002148": [], "004123": [], "002160": [], "809": 86, "851": [], "852": [], "853": [], "854": [], "340": 125, "361": [], "422": [96, 99], "0x7f706c271c60": [], "0x7f708dcc65f0": [], "0x7f708dccdd30": [], "024103": [], "006737": [], "022960": [], "006699": [], "023182": [], "022971": [], "006775": [], "023304": [], "006834": [], "0x7f7066eb6e60": [], "0x7f7066eb5150": [], "707": 127, "708": 127, "005803": [], "005683": [], "003680": [], "005679": [], "003654": [], "005767": [], "003653": [], "005646": [], "003664": [], "365": [], "602": [], "578": [], "579": [], "015": [], "016": 134, "017": 134, "138": [], "819": 125, "821": 125, "822": 125, "56": [95, 97], "313": [], "314": [], "153": [], "0x7f7066bc3be0": [], "436": 89, "880": 133, "882": [], "0x7f706754aad0": [], "883": [], "0x7f7066985120": [], "0x7f7066c5dab0": [], "295": [], "0x7f7066c5d540": [], "297": [], "0x7f7066dca350": [], "149": 123, "0x7f7066cadcc0": [], "009641": [], "003247": [], "008512": [], "003185": [], "008942": [], "003178": [], "008721": [], "003171": 129, "008777": [], "003146": [], "289": [], "290": [], "291": [], "292": [], "293": [], "093": 108, "004909": [], "002399": [], "004413": [], "004347": [], "004341": [], "002340": [], "185": [87, 90], "002333": [], "002281": [], "243": 96, "244": 96, "245": [96, 136], "246": 96, "004360": [], "002291": [], "002287": [], "002272": 112, "002463": [], "004515": [], "002329": [], "004279": [], "004292": [], "002299": [], "004325": [], "002279": [], "004335": [], "002276": [], "420": [], "004386": [85, 98], "003939": [], "004269": [], "003758": [], "004309": [], "003752": [], "003751": [], "003823": [], "003789": [], "004363": [], "003781": [], "003757": [], "001661": [], "002773": [], "001596": [], "002696": [], "001687": 135, "002609": [], "001581": [], "002627": [], "001599": [], "715": [], "002284": [], "005579": [], "005333": [], "003036": [], "005244": [], "003043": [], "005289": [], "003045": [], "003063": [], "816": 125, "005378": [], "003076": [], "005294": [], "003028": [], "005231": [], "005199": [], "003050": [], "005240": [], "873": [], "874": [], "875": [], "876": [], "877": [], "879": [], "015980": [], "006822": [], "015488": [], "006616": [], "015593": [], "006713": [], "015495": [], "006651": [], "015677": [], "006716": [], "dev1": [], "572": 125, "004903": [], "002554": [], "004478": [], "002493": [], "004484": [], "002507": [], "004486": [], "002784": [], "004496": [], "002502": [], "tmp0ppxbe_6": [], "d789025717531c6d3d884e7cfb4848f3bef8ef3": [], "528": [], "005089": [], "002438": 98, "004557": [], "002267": [], "002244": [], "002227": [], "671": 122, "264": [], "0x7f1fc9ab1c00": [], "858": [], "859": [], "904": 108, "905": 108, "906": 108, "848": [], "059": [], "060": [], "810": [], "811": [], "812": [], "856": [], "331": [125, 129], "094": 108, "095": [], "494": [95, 99], "045": [], "048": [], "432": [], "692": [], "695": 128, "696": [], "004790": 134, "002453": 98, "002381": [], "004495": [], "002435": [], "004264": [], "004243": [], "002364": [], "004245": [], "004250": [], "004311": [], "002335": [], "004257": [], "0x7f1fc9918910": [], "508": [102, 128, 135], "0x7f1fc95b4100": [], "004422": 98, "004050": [], "002161": [], "004016": [], "002194": [], "004111": [], "002172": [], "003959": [], "0x7f1fc95b5000": [], "013158": [], "005594": [], "012160": [], "005527": [], "012252": [], "012121": [], "005585": [], "012167": [], "005633": [], "959": [], "385": 135, "730": [], "0x7f1fc94a0b80": [], "0x7f1fc94a0ca0": [], "522": [], "523": [], "240": [], "241": [], "242": 96, "509": [102, 128, 135], "0x7f1fcb469a50": [], "511": [128, 135], "512": [128, 135], "0x7f1fc946ad10": [], "710": [], "711": 127, "022244": [], "008280": [], "021958": [], "008224": [], "021985": [], "008192": [], "022113": [], "008217": [], "021868": [], "008235": [], "004540": [], "002240": [], "004273": [], "002201": [], "002205": [], "720": 134, "dev105": [], "267": [101, 122], "0x7f1fcfb6a170": [], "0x7f1ff152e9e0": [], "0x7f1ff1536870": [], "024610": [], "007007": [], "023787": [], "006902": [], "023661": [], "006833": [], "023379": [], "006835": [], "023397": [], "006945": [], "0x7f1fc9548220": [], "0x7f1fc9548700": [], "005967": [], "003761": [], "005837": [], "003727": [], "005784": [], "003735": [], "005876": [], "003720": [], "005778": [], "003718": [], "410": [], "662": [85, 90, 125], "663": [], "903": [108, 134], "481": [], "0x7f1fc991a9e0": [], "0x7f1fc906fd00": [], "0x7f1fc906f880": [], "0x7f1fc906c2e0": [], "0x7f1fc91ec9d0": [], "0x7f1fc9dbf790": [], "693": [], "0x7f1fc992f6d0": [], "009726": [], "008579": [], "003313": [], "009081": [], "003264": [], "008874": [], "003257": [], "008852": [], "003226": [], "333": [125, 129], "334": 125, "335": 125, "005002": [], "002432": [], "002385": [], "004451": [], "004528": [], "004423": [], "002410": [], "002374": [], "002394": [], "004404": 98, "002403": [], "004510": 134, "002407": [], "004385": [], "002418": [], "004675": [], "004450": [], "004431": [], "002395": [], "004410": [], "002380": [], "004465": [], "004427": 98, "004446": [], "004491": [], "004062": [], "003876": [], "004401": 98, "003867": [], "003839": [], "004527": [], "003872": [], "004444": [], "003889": [], "004435": [], "003847": [], "435": [], "863": [], "001697": [], "002810": [], "001662": [], "002729": [], "001637": [], "002751": [], "001624": [], "002743": [], "001615": [], "896": [], "899": [], "900": [108, 134], "005014": [], "004441": [], "002358": [], "004374": [], "005748": [], "005488": [], "003126": [], "005426": [], "003140": [], "005427": [], "003160": [], "005529": [], "003114": [], "003176": [], "005375": [], "003100": [], "005453": [], "003124": [], "005447": [], "003103": [], "016581": [], "006876": [], "015869": [], "006885": [], "016133": [], "016070": [], "006865": [], "016045": [], "006831": [], "skip": 136, "synchon": 136, "mandal": 136, "header": 136, "languag": 136, "snippet": 136, "adopt": 136, "ruff": 136, "linter": 136, "codebas": 136, "codespel": 136, "dev2": [], "004795": [], "002666": [], "004714": [], "002685": [], "002567": [], "004678": [], "002593": [], "004823": [], "002669": [], "tmpl0etqc38": [], "8d0fd89ae680d7887d646283adf3698b823e1d36": [], "421": [], "621": [], "004887": [], "002295": 112, "004392": 112, "002495": [], "002269": [], "002264": [], "670": 122, "0x7f890d751d20": [], "046": [], "047": [], "870": [], "871": [], "336": [125, 135], "831": 134, "193": 125, "195": 125, "893": 112, "894": 112, "895": 112, "849": [], "004754": [], "002367": [], "002343": 85, "002345": [], "004263": [], "004254": [], "002406": [], "002348": [], "004244": [], "002350": [], "0x7f890d3fff10": [], "0x7f890fb87400": [], "004868": [], "004041": [], "002197": [], "004109": [], "003963": [], "0x7f890d9bbe50": [], "013399": [], "005693": [], "012183": [], "005460": [], "012069": [], "005602": [], "012034": [], "012631": [], "005975": [], "102": [], "103": [], "573": 125, "574": 125, "0x7f890d703730": [], "0x7f890d703250": [], "0x7f891025f760": [], "0x7f8926057790": [], "022386": [], "008354": [], "022887": [], "008436": [], "021805": [], "008265": [], "023222": [], "008270": [], "021786": [], "008165": [], "004556": [], "002220": [], "004249": [], "002184": [], "004195": [], "004231": [], "561": [], "220": [], "0x7f8914a1e290": [], "0x7f893642ea70": [], "0x7f89364363b0": [], "53": [92, 125], "024629": [], "006807": [], "023118": [], "023805": [], "006767": [], "023166": [], "006745": [], "025147": [], "007090": [], "0x7f890fe335b0": [], "0x7f890fe32770": [], "006037": [], "003725": [], "005716": [], "003746": [], "005697": [], "003645": [], "005860": [], "003705": [], "005738": [], "847": [], "850": [], "934": [], "424": [], "799": [], "263": [], "0x7f890d5ec3d0": [], "0x7f890d1e5930": [], "0x7f890d1c94b0": [], "0x7f890d1c9f30": [], "249": 101, "0x7f890d3e7310": [], "0x7f890d41efe0": [], "0x7f890d3c2080": [], "009920": [], "003334": [], "008616": [], "003225": [], "008998": [], "003262": [], "008818": [], "003222": [], "008866": [], "003308": [], "409": [], "004902": [], "004448": [], "002474": [98, 134], "004751": 134, "002440": 98, "004487": [], "002390": [], "004438": [], "004468": [], "002472": 134, "004589": [], "004581": [], "002424": [], "004463": 84, "004364": 98, "004935": [], "004520": [], "002434": [], "004507": [], "004430": [], "004567": [], "004506": [], "004429": [], "004110": [], "004424": [], "003856": [], "004390": 98, "003888": [], "004432": [], "004612": 134, "004107": [], "004526": 134, "003906": [], "004483": [], "003873": [], "003903": [], "003919": [], "003144": [], "001669": [], "001614": [], "001610": [], "002677": [], "001621": [], "002630": [], "001699": [], "004577": [], "002392": [], "002531": [], "004735": [], "002610": [], "004988": [], "002485": 134, "004555": 134, "005769": [], "003125": [], "005442": [], "003149": [], "005499": [], "005485": [], "003253": [], "005908": [], "005545": [], "003118": [], "005395": [], "005404": [], "003110": [], "003071": [], "172": [], "173": [], "174": [], "175": [], "176": [], "017283": [], "006841": [], "015957": [], "007164": [], "016626": [], "006900": [], "015987": [], "006870": [], "016107": [], "006940": [], "dev11": [], "524": [], "525": [], "004738": [], "002540": [], "004307": [], "004320": [], "tmpg8da_yv0": [], "d1f915eee0902cee00b744c8ba7e9509ada8b578": [], "004756": [], "002260": [], "002229": [], "002214": [], "002178": [], "004228": [], "0x7f7aa0939e10": [], "791": [], "714": [], "669": 92, "792": [], "002332": [], "002355": [], "004203": 101, "004233": [], "004256": [], "004223": [], "0x7f7aa08d8f10": [], "0x7f7aa06f3070": [], "004377": 98, "003961": [], "002171": [], "003987": [], "002119": [], "004047": [], "002126": [], "003980": [], "002165": [], "0x7f7aa0238370": [], "012866": [], "005492": [], "011937": [], "012027": [], "005550": [], "011842": [], "005414": [], "005549": [], "901": [104, 134], "902": 134, "0x7f7aa0980670": [], "0x7f7aa0980730": [], "076": [], "0x7f7aa05b5030": [], "0x7f7aa05b49d0": [], "021761": [], "008126": [], "021662": [], "008140": [], "021575": [], "008163": [], "021776": [], "008139": [], "021530": [], "008112": [], "002203": [], "002149": [], "002155": [], "004213": [], "0x7f7aa5a06200": [], "0x7f7ac7422a70": [], "0x7f7ac7429e30": [], "024077": [], "006696": [], "023107": [], "006668": [], "023280": [], "022945": [], "006683": [], "006753": [], "0x7f7aa0074400": [], "0x7f7aa0076dd0": [], "005802": [], "003659": [], "005678": [], "005712": [], "003655": [], "005726": [], "003745": [], "005695": [], "003644": [], "183": 98, "814": [], "815": [108, 110, 125], "363": [], "832": 134, "339": [125, 135], "345": 89, "348": [], "0x7f7aa02e77c0": [], "0x7f7aa00b8880": [], "0x7f7aa00b82e0": [], "0x7f7aa00b8310": [], "0x7f7aa05b4fa0": [], "0x7f7aa00ba0e0": [], "0x7f7aa0307820": [], "009708": [], "003329": [], "008650": [], "003211": [], "009128": [], "008821": [], "008857": [], "003232": 135, "52": [], "004858": [], "002416": [], "004606": [], "004388": [], "002327": 85, "004365": [], "004370": [], "004479": [], "004009": [], "004480": [], "004417": 112, "003848": [], "003838": [], "003842": [], "004440": [], "003841": [], "004447": [], "003859": [], "003089": [], "001672": [], "002764": [], "002694": [], "001634": [], "002661": [], "001629": [], "001592": [], "004570": [], "004494": [], "004294": [], "005669": [], "003143": [], "005385": [], "003085": [], "005511": [], "003098": [], "005370": [], "003117": [], "005489": [], "003081": [], "003051": [], "005286": [], "003059": [], "005329": [], "003083": [], "005308": [], "429": [92, 93], "431": [], "016311": [], "006806": [], "015796": [], "015952": [], "015850": [], "016063": [], "dev14": [], "004682": [], "002499": [], "002393": [], "tmp41fuw6eo": [], "8c908ce8343743e208f0cd5e6a8d0fd9bcb6ac1b": [], "024": [], "004691": [], "002296": [], "004191": [], "002196": [], "0x7f7f19dba080": [], "743": [], "789": [], "790": [], "004569": [], "004183": [], "004151": [], "002278": [], "004189": [], "004176": [], "004196": [], "002547": [], "004139": [], "002270": [], "004128": [], "0x7f7f3074ba30": [], "0x7f7f1a080580": [], "063": [], "004275": [], "003936": [], "002089": [], "002097": [], "003979": [], "002121": [], "003900": [], "002085": [], "0x7f7f1a0827d0": [], "012637": [], "011853": [], "005373": [], "011762": [], "005491": [], "011773": [], "005343": [], "011771": [], "005508": [], "0x7f7f1ab41900": [], "0x7f7f1ab419c0": [], "0x7f7f1a307040": [], "555": [], "0x7f7f1ab41090": [], "021678": [], "021481": [], "008005": [], "021421": [], "008043": [], "021585": [], "021387": [], "008049": [], "004611": 134, "002216": [], "004161": [], "002154": [], "002153": [], "0x7f7f1f16e680": [], "0x7f7f3cf4ab00": [], "0x7f7f3cf52230": [], "392": [], "023907": [], "022962": [], "006744": [], "022931": [], "006557": [], "022816": [], "006620": [], "022823": [], "006732": [], "0x7f7f19e35930": [], "0x7f7f19e37910": [], "005593": [], "005610": [], "005731": [], "003671": [], "005640": [], "003628": [], "624": 92, "075": [], "077": [], "078": 109, "527": [], "529": [84, 90], "0x7f7f19c564d0": [], "0x7f7f197ae6b0": [], "0x7f7f197ac970": [], "0x7f7f197afdc0": [], "0x7f7f19e023b0": [], "0x7f7f1a985180": [], "0x7f7f19c72e00": [], "009716": [], "008483": [], "003186": [], "008957": [], "003187": [], "008826": [], "003165": [], "008755": [], "003147": [], "004872": [], "004493": [], "004405": [], "004425": [], "004533": [], "004378": 98, "004563": [], "004319": [], "002445": 134, "004345": [], "003973": [], "004361": 98, "003794": [], "003868": [], "003785": [], "003788": [], "003793": [], "003768": [], "001678": [], "001643": [], "002708": [], "001601": [], "002727": [], "001607": [], "001571": [], "622": 92, "005578": [], "005285": [], "005415": [], "005282": [], "005450": [], "003123": [], "003306": [], "006172": [], "003933": [], "005573": [], "003046": [], "005338": [], "003075": [], "016094": [], "006694": [], "015606": [], "006738": [], "015814": [], "006698": [], "015557": [], "006656": [], "015768": [], "006652": [], "polar": [6, 42, 43, 44, 45, 46, 47, 48], "post1": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 127, 128], "dev21": [], "813": [], "_valid": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "73": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 109, 112, 122, 123, 125, 127, 128, 129, 133, 134, 135], "004952": [], "004497": [], "002660": [], "004456": [], "002550": [], "004471": 101, "002521": [], "002728": [], "tmpu80_b84v": [], "2e30b6e0eaeae095c39a3a68c315c7535b10aea9": [], "004923": [], "004387": [], "004359": [], "0x7fecc237d270": [], "2458": 89, "391": 89, "328": [], "329": 125, "002386": [], "002377": [], "004305": [], "002613": [], "005709": [], "002843": [], "0x7fecc1d21810": [], "0x7fecc1d8b250": [], "390": 89, "003981": [], "002180": [], "004097": [], "002207": [], "003931": [], "0x7fecc1decaf0": [], "013715": [], "005825": [], "012791": [], "005855": 102, "012915": [], "005766": [], "012731": [], "012781": [], "0x7fecc1f23a00": [], "0x7fecc1f23970": [], "203": [], "0x7fecc1e9dd50": [], "0x7fecc21d48b0": [], "022514": [], "010690": [], "022798": [], "008836": [], "022989": [], "008530": [], "023710": [], "008603": [], "022472": [], "008469": [], "004643": [], "002257": [], "004475": 135, "002235": [], "002223": 101, "712": 127, "713": [], "0x7fecc77e9360": [], "0x7fece9222b90": [], "0x7fece922e5f0": [], "024242": [], "023331": [], "006956": [], "023449": [], "006827": [], "023320": [], "006862": [], "023826": [], "006934": [], "0x7fecc1ba1cc0": [], "0x7fecc1d35e10": [], "005772": [], "003753": [], "005756": [], "005698": [], "003736": [], "005830": [], "003710": [], "0x7fecc1e159f0": [], "0x7fecc1d8b130": [], "0x7fecc1d8b3d0": [], "0x7fecc21aaf80": [], "0x7fecc1ba2b00": [], "0x7fecc1bbad70": [], "0x7fecc2637a30": [], "009912": [], "003343": [], "008687": [], "003237": 135, "009151": [], "008944": [], "003196": [], "008983": [], "029499": 133, "977110": 133, "084010": 133, "306544": 133, "919632": 133, "005114": [], "004548": [], "002447": [], "004523": [], "004542": [], "002427": 134, "364": [], "004759": [], "004508": [], "002423": 98, "004457": [], "002456": 98, "004849": [], "004593": [], "002520": [], "004845": [], "002486": 134, "004639": 134, "002508": [], "nbsp": 134, "pipelineifittedpipelin": 134, "004791": [], "002431": [], "004499": [], "004462": [], "neg_root_mean_squared_log_error": 134, "004618": [], "003993": [], "003913": [], "003909": [], "003897": [], "003943": [], "003918": [], "003905": [], "003208": [], "001822": [], "002894": [], "001646": [], "002824": [], "002835": [], "002714": [], "001632": [], "004706": [], "002429": 98, "002433": [], "004623": [], "004434": 98, "005819": [], "005702": [], "005543": [], "003174": [], "005564": [], "003190": [], "005639": [], "003177": [], "005635": [], "003175": [], "005612": [], "003209": [], "017310": [], "007522": [], "017276": [], "007345": [], "016864": [], "007283": [], "016881": [], "007315": [], "017165": [], "007360": [], "dev24": [84, 85, 86, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 108, 112, 127, 128], "004889": 84, "002651": 84, "004534": 84, "002624": 84, "004633": 84, "002621": 84, "002600": 84, "tmpc24z3no1": [84, 86], "08dde702168d8353d5c4904cf06762ef906d64e": [84, 86], "004961": 85, "004389": [85, 98], "002292": 85, "0x7fdaccd796f0": 86, "437": 89, "623": 92, "127": 95, "004800": 98, "002491": 98, "002412": 98, "002419": [98, 135], "004418": 98, "002476": [98, 134], "002466": 98, "002464": 98, "004380": 98, "002454": [98, 134], "0x7fdad3c042e0": 98, "0x7fdacd21c940": 101, "004112": 101, "004034": 101, "003992": 101, "002236": 101, "505": [102, 135], "0x7fdacc7c14b0": 102, "013614": 102, "012943": 102, "005957": 102, "013193": 102, "005888": 102, "013221": 102, "006012": 102, "013484": 102, "006091": 102, "0x7fdacf7f8c40": 105, "0x7fdacf7f8f70": 105, "0x7fdacd3c7820": 109, "0x7fdacd3c5ae0": 109, "022809": 109, "008506": 109, "027137": 109, "008872": 109, "025200": 109, "009709": 109, "024055": 109, "009382": 109, "023276": 109, "008520": 109, "004632": 112, "004420": 112, "941": 112, "0x7fdad450d480": 122, "0x7fdaf5f3ed40": 122, "0x7fdaf5f50670": 122, "024634": 123, "007000": 123, "023741": 123, "006941": 123, "024270": 123, "006926": 123, "024003": 123, "007084": 123, "024462": 123, "007086": 123, "0x7fdacc43ac50": 123, "0x7fdacc45d840": 123, "005993": 123, "003810": 123, "005790": 123, "003827": 123, "005805": 123, "003816": 123, "005894": 123, "005788": 123, "0x7fdaccd9f940": 127, "0x7fdacc46c370": 128, "0x7fdacc46cd00": 128, "0x7fdacc46d330": 128, "0x7fdacc7e0940": 128, "0x7fdacc6da1a0": 128, "0x7fdacc6d9ff0": 129, "009713": 129, "003417": 129, "008941": 129, "003342": 129, "008959": 129, "003259": 129, "008783": 129, "008764": 129, "003330": 129, "005142": 134, "002516": 134, "004654": 134, "004550": 134, "002475": 134, "004547": 134, "002490": 134, "002477": 134, "004537": 134, "002478": 134, "004551": 134, "004749": 134, "004576": 134, "002489": 134, "004720": 134, "002503": 134, "004568": 134, "004565": 134, "002530": 134, "004993": 134, "002522": 134, "004562": 134, "002468": 134, "004598": 134, "004580": 134, "004601": 134, "002444": 134, "004575": 134, "004594": 134, "002446": 134, "004591": 134, "004595": 134, "004780": 134, "004090": 134, "003999": 134, "004002": 134, "004622": 134, "004063": 134, "004086": 134, "004003": 134, "004018": 134, "004032": 134, "004630": 134, "004054": 134, "004053": 134, "003150": 135, "001806": 135, "002901": 135, "001690": 135, "002790": 135, "002849": 135, "001683": 135, "002735": 135, "001695": 135, "004709": 135, "002471": 135, "004524": 135, "004459": 135, "004637": 135, "006042": 135, "003290": 135, "005618": 135, "005659": 135, "003261": 135, "005699": 135, "003245": 135, "005796": 135, "003367": 135, "005865": 135, "003298": 135, "005710": 135, "003278": 135, "005759": 135, "003287": 135, "005749": 135, "003252": 135, "018129": 135, "007479": 135, "017345": 135, "007464": 135, "016987": 135, "007411": 135, "017203": 135, "007388": 135, "017149": 135, "007520": 135}, "objects": {"julearn": [[1, 0, 1, "", "PipelineCreator"], [2, 0, 1, "", "TargetPipelineCreator"], [73, 3, 0, "-", "api"], [0, 3, 0, "-", "base"], [72, 3, 0, "-", "inspect"], [74, 3, 0, "-", "model_selection"], [75, 3, 0, "-", "models"], [76, 3, 0, "-", "pipeline"], [77, 3, 0, "-", "prepare"], [33, 5, 1, "", "run_cross_validation"], [78, 3, 0, "-", "scoring"], [79, 3, 0, "-", "stats"], [80, 3, 0, "-", "transformers"], [81, 3, 0, "-", "utils"], [82, 3, 0, "-", "viz"]], "julearn.PipelineCreator": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "add"], [1, 1, 1, "", "copy"], [1, 1, 1, "", "from_list"], [1, 1, 1, "", "has_model"], [1, 1, 1, "", "split"], [1, 2, 1, "", "steps"], [1, 1, 1, "", "to_pipeline"]], "julearn.TargetPipelineCreator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "add"], [2, 1, 1, "", "to_pipeline"]], "julearn.base": [[3, 0, 1, "", "ColumnTypes"], [4, 4, 1, "", "ColumnTypesLike"], [5, 0, 1, "", "JuBaseEstimator"], [6, 0, 1, "", "JuTransformer"], [7, 0, 1, "", "WrapModel"], [8, 5, 1, "", "change_column_type"], [9, 5, 1, "", "ensure_column_types"], [10, 5, 1, "", "get_column_type"], [11, 5, 1, "", "make_type_selector"]], "julearn.base.ColumnTypes": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "add"], [3, 1, 1, "", "copy"], [3, 2, 1, "", "pattern"], [3, 1, 1, "", "to_type_selector"]], "julearn.base.JuBaseEstimator": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "filter_columns"], [5, 1, 1, "", "get_apply_to"], [5, 1, 1, "", "get_metadata_routing"], [5, 1, 1, "", "get_needed_types"], [5, 1, 1, "", "get_params"], [5, 1, 1, "", "set_params"]], "julearn.base.JuTransformer": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "filter_columns"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "fit_transform"], [6, 1, 1, "", "get_apply_to"], [6, 1, 1, "", "get_metadata_routing"], [6, 1, 1, "", "get_needed_types"], [6, 1, 1, "", "get_params"], [6, 1, 1, "", "set_output"], [6, 1, 1, "", "set_params"]], "julearn.base.WrapModel": [[7, 1, 1, "", "__init__"], [7, 2, 1, "", "classes_"], [7, 1, 1, "", "decision_function"], [7, 1, 1, "", "filter_columns"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "get_apply_to"], [7, 1, 1, "", "get_metadata_routing"], [7, 1, 1, "", "get_needed_types"], [7, 1, 1, "", "get_params"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "predict_log_proba"], [7, 1, 1, "", "predict_proba"], [7, 1, 1, "", "score"], [7, 1, 1, "", "set_params"]], "julearn.inspect": [[12, 0, 1, "", "FoldsInspector"], [13, 0, 1, "", "Inspector"], [14, 5, 1, "", "preprocess"]], "julearn.inspect.FoldsInspector": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "decision_function"], [12, 1, 1, "", "predict"], [12, 1, 1, "", "predict_log_proba"], [12, 1, 1, "", "predict_proba"]], "julearn.inspect.Inspector": [[13, 1, 1, "", "__init__"], [13, 2, 1, "", "folds"], [13, 2, 1, "", "model"]], "julearn.model_selection": [[15, 0, 1, "", "ContinuousStratifiedGroupKFold"], [16, 0, 1, "", "ContinuousStratifiedKFold"], [17, 0, 1, "", "RepeatedContinuousStratifiedGroupKFold"], [18, 0, 1, "", "RepeatedContinuousStratifiedKFold"], [19, 0, 1, "", "StratifiedBootstrap"], [20, 5, 1, "", "get_searcher"], [21, 5, 1, "", "list_searchers"], [22, 5, 1, "", "register_searcher"], [23, 5, 1, "", "reset_searcher_register"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "get_metadata_routing"], [15, 1, 1, "", "get_n_splits"], [15, 1, 1, "", "set_split_request"], [15, 1, 1, "", "split"]], "julearn.model_selection.ContinuousStratifiedKFold": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "get_metadata_routing"], [16, 1, 1, "", "get_n_splits"], [16, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "get_metadata_routing"], [17, 1, 1, "", "get_n_splits"], [17, 1, 1, "", "split"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_metadata_routing"], [18, 1, 1, "", "get_n_splits"], [18, 1, 1, "", "split"]], "julearn.model_selection.StratifiedBootstrap": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "get_metadata_routing"], [19, 1, 1, "", "get_n_splits"], [19, 1, 1, "", "split"]], "julearn.models": [[75, 3, 0, "-", "dynamic"], [25, 5, 1, "", "get_model"], [26, 5, 1, "", "list_models"], [27, 5, 1, "", "register_model"], [28, 5, 1, "", "reset_model_register"]], "julearn.models.dynamic": [[24, 0, 1, "", "DynamicSelection"]], "julearn.models.dynamic.DynamicSelection": [[24, 1, 1, "", "__init__"], [24, 1, 1, "", "fit"], [24, 1, 1, "", "get_metadata_routing"], [24, 1, 1, "", "get_params"], [24, 1, 1, "", "predict"], [24, 1, 1, "", "predict_proba"], [24, 1, 1, "", "score"], [24, 1, 1, "", "set_params"], [24, 1, 1, "", "set_score_request"]], "julearn.pipeline": [[29, 0, 1, "", "JuTargetPipeline"]], "julearn.pipeline.JuTargetPipeline": [[29, 1, 1, "", "__init__"], [29, 1, 1, "", "can_inverse_transform"], [29, 1, 1, "", "fit"], [29, 1, 1, "", "fit_transform"], [29, 1, 1, "", "inverse_transform"], [29, 2, 1, "", "needed_types"], [29, 1, 1, "", "transform"]], "julearn.pipeline.pipeline_creator": [[30, 0, 1, "", "Step"]], "julearn.pipeline.pipeline_creator.Step": [[30, 1, 1, "", "__init__"], [30, 4, 1, "", "apply_to"], [30, 4, 1, "", "estimator"], [30, 4, 1, "", "name"], [30, 4, 1, "", "needed_types"], [30, 4, 1, "", "params_to_tune"], [30, 4, 1, "", "row_select_col_type"], [30, 4, 1, "", "row_select_vals"]], "julearn.prepare": [[31, 5, 1, "", "check_consistency"], [32, 5, 1, "", "prepare_input_data"]], "julearn.scoring": [[34, 5, 1, "", "check_scoring"], [35, 5, 1, "", "get_scorer"], [36, 5, 1, "", "list_scorers"], [78, 3, 0, "-", "metrics"], [39, 5, 1, "", "register_scorer"], [40, 5, 1, "", "reset_scorer_register"]], "julearn.scoring.metrics": [[37, 5, 1, "", "r2_corr"], [38, 5, 1, "", "r_corr"]], "julearn.stats": [[41, 5, 1, "", "corrected_ttest"]], "julearn.transformers": [[42, 0, 1, "", "CBPM"], [43, 0, 1, "", "ChangeColumnTypes"], [44, 0, 1, "", "DropColumns"], [45, 0, 1, "", "FilterColumns"], [46, 0, 1, "", "JuColumnTransformer"], [47, 0, 1, "", "SetColumnTypes"], [49, 5, 1, "", "get_transformer"], [50, 5, 1, "", "list_transformers"], [51, 5, 1, "", "register_transformer"], [52, 5, 1, "", "reset_transformer_register"], [80, 3, 0, "-", "target"]], "julearn.transformers.CBPM": [[42, 1, 1, "", "__init__"], [42, 1, 1, "", "aggregate"], [42, 1, 1, "", "fit"], [42, 1, 1, "", "fit_transform"], [42, 1, 1, "", "get_feature_names_out"], [42, 1, 1, "", "get_metadata_routing"], [42, 1, 1, "", "get_params"], [42, 1, 1, "", "set_output"], [42, 1, 1, "", "set_params"], [42, 1, 1, "", "transform"]], "julearn.transformers.ChangeColumnTypes": [[43, 1, 1, "", "__init__"], [43, 1, 1, "", "filter_columns"], [43, 1, 1, "", "fit"], [43, 1, 1, "", "fit_transform"], [43, 1, 1, "", "get_apply_to"], [43, 1, 1, "", "get_feature_names_out"], [43, 1, 1, "", "get_metadata_routing"], [43, 1, 1, "", "get_needed_types"], [43, 1, 1, "", "get_params"], [43, 1, 1, "", "set_output"], [43, 1, 1, "", "set_params"], [43, 1, 1, "", "transform"]], "julearn.transformers.DropColumns": [[44, 1, 1, "", "__init__"], [44, 1, 1, "", "filter_columns"], [44, 1, 1, "", "fit"], [44, 1, 1, "", "fit_transform"], [44, 1, 1, "", "get_apply_to"], [44, 1, 1, "", "get_metadata_routing"], [44, 1, 1, "", "get_needed_types"], [44, 1, 1, "", "get_params"], [44, 1, 1, "", "get_support"], [44, 1, 1, "", "set_output"], [44, 1, 1, "", "set_params"], [44, 1, 1, "", "transform"]], "julearn.transformers.FilterColumns": [[45, 1, 1, "", "__init__"], [45, 1, 1, "", "filter_columns"], [45, 1, 1, "", "fit"], [45, 1, 1, "", "fit_transform"], [45, 1, 1, "", "get_apply_to"], [45, 1, 1, "", "get_feature_names_out"], [45, 1, 1, "", "get_metadata_routing"], [45, 1, 1, "", "get_needed_types"], [45, 1, 1, "", "get_params"], [45, 1, 1, "", "set_output"], [45, 1, 1, "", "set_params"], [45, 1, 1, "", "transform"]], "julearn.transformers.JuColumnTransformer": [[46, 1, 1, "", "__init__"], [46, 1, 1, "", "filter_columns"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "fit_transform"], [46, 1, 1, "", "get_apply_to"], [46, 1, 1, "", "get_feature_names_out"], [46, 1, 1, "", "get_metadata_routing"], [46, 1, 1, "", "get_needed_types"], [46, 1, 1, "", "get_params"], [46, 1, 1, "", "set_output"], [46, 1, 1, "", "set_params"], [46, 1, 1, "", "transform"]], "julearn.transformers.SetColumnTypes": [[47, 1, 1, "", "__init__"], [47, 1, 1, "", "filter_columns"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "fit_transform"], [47, 1, 1, "", "get_apply_to"], [47, 1, 1, "", "get_feature_names_out"], [47, 1, 1, "", "get_metadata_routing"], [47, 1, 1, "", "get_needed_types"], [47, 1, 1, "", "get_params"], [47, 1, 1, "", "set_output"], [47, 1, 1, "", "set_params"], [47, 1, 1, "", "transform"]], "julearn.transformers.confound_remover": [[48, 0, 1, "", "ConfoundRemover"]], "julearn.transformers.confound_remover.ConfoundRemover": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "filter_columns"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "fit_transform"], [48, 1, 1, "", "get_apply_to"], [48, 1, 1, "", "get_feature_names_out"], [48, 1, 1, "", "get_metadata_routing"], [48, 1, 1, "", "get_needed_types"], [48, 1, 1, "", "get_params"], [48, 1, 1, "", "get_support"], [48, 1, 1, "", "set_output"], [48, 1, 1, "", "set_params"], [48, 1, 1, "", "transform"]], "julearn.transformers.target": [[53, 0, 1, "", "JuTargetTransformer"], [54, 0, 1, "", "JuTransformedTargetModel"], [55, 0, 1, "", "TargetConfoundRemover"], [56, 0, 1, "", "TransformedTargetWarning"], [57, 5, 1, "", "get_target_transformer"], [58, 5, 1, "", "list_target_transformers"], [59, 5, 1, "", "register_target_transformer"], [60, 5, 1, "", "reset_target_transformer_register"]], "julearn.transformers.target.JuTargetTransformer": [[53, 1, 1, "", "__init__"], [53, 1, 1, "", "fit"], [53, 1, 1, "", "fit_transform"], [53, 1, 1, "", "transform"]], "julearn.transformers.target.JuTransformedTargetModel": [[54, 1, 1, "", "__init__"], [54, 1, 1, "", "can_inverse_transform"], [54, 2, 1, "", "classes_"], [54, 1, 1, "", "decision_function"], [54, 1, 1, "", "filter_columns"], [54, 1, 1, "", "fit"], [54, 1, 1, "", "get_apply_to"], [54, 1, 1, "", "get_metadata_routing"], [54, 1, 1, "", "get_needed_types"], [54, 1, 1, "", "get_params"], [54, 1, 1, "", "predict"], [54, 1, 1, "", "predict_proba"], [54, 1, 1, "", "score"], [54, 1, 1, "", "set_params"], [54, 1, 1, "", "transform_target"]], "julearn.transformers.target.TargetConfoundRemover": [[55, 1, 1, "", "__init__"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "fit_transform"], [55, 2, 1, "", "needed_types"], [55, 1, 1, "", "transform"]], "julearn.transformers.target.TransformedTargetWarning": [[56, 1, 1, "", "__init__"], [56, 4, 1, "", "args"], [56, 1, 1, "", "with_traceback"]], "julearn.utils": [[61, 5, 1, "", "configure_logging"], [62, 4, 1, "", "logger"], [63, 5, 1, "", "raise_error"], [81, 3, 0, "-", "typing"], [69, 5, 1, "", "warn_with_log"]], "julearn.utils.typing": [[64, 4, 1, "", "EstimatorLike"], [65, 0, 1, "", "EstimatorLikeFit1"], [66, 0, 1, "", "EstimatorLikeFit2"], [67, 0, 1, "", "EstimatorLikeFity"], [68, 0, 1, "", "JuEstimatorLike"]], "julearn.utils.typing.EstimatorLikeFit1": [[65, 1, 1, "", "__init__"], [65, 1, 1, "", "fit"], [65, 1, 1, "", "get_params"], [65, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFit2": [[66, 1, 1, "", "__init__"], [66, 1, 1, "", "fit"], [66, 1, 1, "", "get_params"], [66, 1, 1, "", "set_params"]], "julearn.utils.typing.EstimatorLikeFity": [[67, 1, 1, "", "__init__"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "get_params"], [67, 1, 1, "", "set_params"]], "julearn.utils.typing.JuEstimatorLike": [[68, 1, 1, "", "__init__"], [68, 1, 1, "", "fit"], [68, 1, 1, "", "get_apply_to"], [68, 1, 1, "", "get_needed_types"], [68, 1, 1, "", "get_params"], [68, 1, 1, "", "set_params"]], "julearn.viz": [[70, 5, 1, "", "plot_scores"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"base": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 122], "class": [0, 72, 74, 75, 76, 80, 81], "function": [0, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 112], "julearn": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 115, 120, 122, 123, 136], "pipelinecr": [1, 135], "exampl": [1, 2, 13, 14, 16, 19, 33, 36, 39, 41, 61, 70, 116, 117], "us": [1, 2, 13, 14, 16, 19, 33, 36, 39, 41, 61, 70, 109, 118, 123, 135], "targetpipelinecr": 2, "columntyp": 3, "columntypeslik": 4, "jubaseestim": 5, "jutransform": 6, "wrapmodel": 7, "change_column_typ": 8, "ensure_column_typ": 9, "get_column_typ": 10, "make_type_selector": 11, "inspect": [12, 13, 14, 72, 94, 95, 96, 98, 127], "foldsinspector": 12, "inspector": 13, "preprocess": [14, 97, 129, 135], "model_select": [15, 16, 17, 18, 19, 20, 21, 22, 23], "continuousstratifiedgroupkfold": 15, "continuousstratifiedkfold": 16, "repeatedcontinuousstratifiedgroupkfold": 17, "repeatedcontinuousstratifiedkfold": 18, "stratifiedbootstrap": 19, "get_search": 20, "list_search": 21, "register_search": 22, "reset_searcher_regist": 23, "model": [24, 25, 26, 27, 28, 74, 75, 91, 92, 95, 96, 100, 108, 114, 122, 125, 127, 128, 133, 134, 135], "dynam": [24, 75, 114], "dynamicselect": 24, "get_model": 25, "list_model": 26, "register_model": 27, "reset_model_regist": 28, "pipelin": [29, 30, 76, 114, 135], "jutargetpipelin": 29, "pipeline_cr": 30, "step": [30, 114], "prepar": [31, 32, 77], "check_consist": 31, "prepare_input_data": 32, "run_cross_valid": [33, 130, 131, 134, 135], "score": [34, 35, 36, 37, 38, 39, 40, 78, 101, 112, 133, 134], "check_scor": 34, "get_scor": 35, "list_scor": 36, "metric": [37, 38, 78, 134], "r2_corr": 37, "r_corr": 38, "register_scor": 39, "reset_scorer_regist": 40, "stat": [41, 79], "corrected_ttest": 41, "transform": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 80, 101, 114], "cbpm": [42, 122], "changecolumntyp": 43, "dropcolumn": 44, "filtercolumn": 45, "jucolumntransform": 46, "setcolumntyp": 47, "confound_remov": 48, "confoundremov": 48, "get_transform": 49, "list_transform": 50, "register_transform": 51, "reset_transformer_regist": 52, "target": [53, 54, 55, 56, 57, 58, 59, 60, 80, 101, 123, 129], "jutargettransform": 53, "jutransformedtargetmodel": 54, "targetconfoundremov": 55, "transformedtargetwarn": 56, "get_target_transform": 57, "list_target_transform": 58, "register_target_transform": 59, "reset_target_transformer_regist": 60, "util": [61, 62, 63, 64, 65, 66, 67, 68, 69, 81], "configure_log": 61, "logger": 62, "raise_error": 63, "type": [64, 65, 66, 67, 68, 81, 128, 131, 135], "estimatorlik": 64, "estimatorlikefit1": 65, "estimatorlikefit2": 66, "estimatorlikef": 67, "juestimatorlik": 68, "warn_with_log": 69, "viz": [70, 118], "plot_scor": 70, "api": [71, 73, 136], "refer": [71, 87, 88, 95, 103, 104, 122, 123, 124, 130, 135], "main": 73, "select": [74, 75, 114, 126, 135], "deslib": 75, "visual": [82, 133], "start": [83, 119], "multiclass": 84, "classif": [84, 89, 105], "regress": [85, 86, 102, 112, 123], "analysi": [85, 86, 102], "stratifi": 86, "k": 86, "fold": [86, 98], "cv": [86, 88], "work": 87, "panda": 87, "merg": 87, "join": 87, "datafram": [87, 114], "group": [88, 124], "deal": [88, 95], "cross": [88, 95, 123, 124, 130, 134], "valid": [88, 95, 123, 124, 130, 134], "techniqu": [88, 95], "simpl": [89, 92], "binari": 89, "comput": [90, 93, 99, 106, 110, 113], "time": [90, 93, 99, 106, 110, 113], "comparison": [91, 92, 108, 133], "svm": 95, "random": 96, "forest": 96, "variabl": [96, 101], "import": 96, "varianc": 97, "threshold": 97, "zscore": 97, "pca": 97, "wise": 98, "predict": [98, 122], "complex": 100, "z": 101, "tune": [103, 104, 125], "multipl": 103, "hyperparamet": [103, 104, 125, 135], "grid": [103, 125], "stack": [105, 128], "confound": [107, 108, 109, 123], "remov": [108, 109, 123], "return": [109, 134], "typic": 109, "case": 109, "custom": [111, 112, 114], "overview": 114, "avail": 114, "scaler": 114, "featur": [114, 123, 128, 131, 135, 136], "oper": 114, "decomposit": 114, "estim": [114, 128, 134], "support": 114, "vector": 114, "machin": 114, "ensembl": 114, "gaussian": 114, "process": 114, "linear": 114, "naiv": 114, "bay": 114, "dummi": 114, "configur": 115, "contribut": 116, "set": [116, 135], "up": 116, "local": 116, "develop": 116, "environ": 116, "github": 116, "pull": 116, "request": 116, "guidelin": 116, "run": 116, "unit": 116, "test": 116, "ad": 116, "build": [116, 135], "document": [116, 120, 136], "write": 116, "content": [117, 120, 126], "faq": 118, "i": [118, 120, 123], "have": 118, "issu": 118, "depend": [118, 119], "modul": 118, "how": 118, "do": 118, "interact": 118, "plot": 118, "get": 119, "requir": 119, "setup": 119, "suggest": 119, "instal": 119, "option": 119, "welcom": 120, "": [120, 136], "what": [120, 132, 136], "why": [120, 130], "tabl": [120, 126], "indic": 120, "maintain": 121, "version": 121, "releas": 121, "new": [121, 136], "connectom": 122, "consist": 123, "from": 123, "should": 123, "splitter": [124, 134], "stratif": 124, "paramet": 125, "v": 125, "searcher": 125, "more": 125, "than": 125, "one": 125, "deeper": 126, "topic": 126, "fit": 128, "each": 128, "all": 128, "specif": [128, 135], "appli": 129, "The": [130, 134], "fundament": 130, "essenc": 130, "data": 131, "input": 131, "give": 131, "you": 132, "realli": 132, "need": 132, "know": 132, "statist": 133, "evalu": 134, "output": 134, "made": 135, "easi": 135, "0": 136, "2": 136, "5": 136, "2022": 136, "07": 136, "21": 136, "chang": 136, "bugfix": 136, "improv": 136, "enhanc": 136, "3": 136, "1": 136, "dev105": [], "2024": 136, "01": 136, "23": 136, "misc": 136, "2023": 136, "19": 136}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Base": [[0, "module-julearn.base"]], "Classes": [[0, "classes"], [72, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [80, "classes"], [80, "id1"], [81, "classes"], [81, "id1"]], "Functions": [[0, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [77, "functions"], [78, "functions"], [78, "id1"], [79, "functions"], [80, "functions"], [80, "id2"], [81, "functions"], [82, "functions"]], "julearn.PipelineCreator": [[1, "julearn-pipelinecreator"]], "Examples using julearn.PipelineCreator": [[1, "examples-using-julearn-pipelinecreator"]], "julearn.TargetPipelineCreator": [[2, "julearn-targetpipelinecreator"]], "Examples using julearn.TargetPipelineCreator": [[2, "examples-using-julearn-targetpipelinecreator"]], "julearn.base.ColumnTypes": [[3, "julearn-base-columntypes"]], "julearn.base.ColumnTypesLike": [[4, "julearn-base-columntypeslike"]], "julearn.base.JuBaseEstimator": [[5, "julearn-base-jubaseestimator"]], "julearn.base.JuTransformer": [[6, "julearn-base-jutransformer"]], "julearn.base.WrapModel": [[7, "julearn-base-wrapmodel"]], "julearn.base.change_column_type": [[8, "julearn-base-change-column-type"]], "julearn.base.ensure_column_types": [[9, "julearn-base-ensure-column-types"]], "julearn.base.get_column_type": [[10, "julearn-base-get-column-type"]], "julearn.base.make_type_selector": [[11, "julearn-base-make-type-selector"]], "julearn.inspect.FoldsInspector": [[12, "julearn-inspect-foldsinspector"]], "julearn.inspect.Inspector": [[13, "julearn-inspect-inspector"]], "Examples using julearn.inspect.Inspector": [[13, "examples-using-julearn-inspect-inspector"]], "julearn.inspect.preprocess": [[14, "julearn-inspect-preprocess"]], "Examples using julearn.inspect.preprocess": [[14, "examples-using-julearn-inspect-preprocess"]], "julearn.model_selection.ContinuousStratifiedGroupKFold": [[15, "julearn-model-selection-continuousstratifiedgroupkfold"]], "julearn.model_selection.ContinuousStratifiedKFold": [[16, "julearn-model-selection-continuousstratifiedkfold"]], "Examples using julearn.model_selection.ContinuousStratifiedKFold": [[16, "examples-using-julearn-model-selection-continuousstratifiedkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold": [[17, "julearn-model-selection-repeatedcontinuousstratifiedgroupkfold"]], "julearn.model_selection.RepeatedContinuousStratifiedKFold": [[18, "julearn-model-selection-repeatedcontinuousstratifiedkfold"]], "julearn.model_selection.StratifiedBootstrap": [[19, "julearn-model-selection-stratifiedbootstrap"]], "Examples using julearn.model_selection.StratifiedBootstrap": [[19, "examples-using-julearn-model-selection-stratifiedbootstrap"]], "julearn.model_selection.get_searcher": [[20, "julearn-model-selection-get-searcher"]], "julearn.model_selection.list_searchers": [[21, "julearn-model-selection-list-searchers"]], "julearn.model_selection.register_searcher": [[22, "julearn-model-selection-register-searcher"]], "julearn.model_selection.reset_searcher_register": [[23, "julearn-model-selection-reset-searcher-register"]], "julearn.models.dynamic.DynamicSelection": [[24, "julearn-models-dynamic-dynamicselection"]], "julearn.models.get_model": [[25, "julearn-models-get-model"]], "julearn.models.list_models": [[26, "julearn-models-list-models"]], "julearn.models.register_model": [[27, "julearn-models-register-model"]], "julearn.models.reset_model_register": [[28, "julearn-models-reset-model-register"]], "julearn.pipeline.JuTargetPipeline": [[29, "julearn-pipeline-jutargetpipeline"]], "julearn.pipeline.pipeline_creator.Step": [[30, "julearn-pipeline-pipeline-creator-step"]], "julearn.prepare.check_consistency": [[31, "julearn-prepare-check-consistency"]], "julearn.prepare.prepare_input_data": [[32, "julearn-prepare-prepare-input-data"]], "julearn.run_cross_validation": [[33, "julearn-run-cross-validation"]], "Examples using julearn.run_cross_validation": [[33, "examples-using-julearn-run-cross-validation"]], "julearn.scoring.check_scoring": [[34, "julearn-scoring-check-scoring"]], "julearn.scoring.get_scorer": [[35, "julearn-scoring-get-scorer"]], "julearn.scoring.list_scorers": [[36, "julearn-scoring-list-scorers"]], "Examples using julearn.scoring.list_scorers": [[36, "examples-using-julearn-scoring-list-scorers"]], "julearn.scoring.metrics.r2_corr": [[37, "julearn-scoring-metrics-r2-corr"]], "julearn.scoring.metrics.r_corr": [[38, "julearn-scoring-metrics-r-corr"]], "julearn.scoring.register_scorer": [[39, "julearn-scoring-register-scorer"]], "Examples using julearn.scoring.register_scorer": [[39, "examples-using-julearn-scoring-register-scorer"]], "julearn.scoring.reset_scorer_register": [[40, "julearn-scoring-reset-scorer-register"]], "julearn.stats.corrected_ttest": [[41, "julearn-stats-corrected-ttest"]], "Examples using julearn.stats.corrected_ttest": [[41, "examples-using-julearn-stats-corrected-ttest"]], "julearn.transformers.CBPM": [[42, "julearn-transformers-cbpm"]], "julearn.transformers.ChangeColumnTypes": [[43, "julearn-transformers-changecolumntypes"]], "julearn.transformers.DropColumns": [[44, "julearn-transformers-dropcolumns"]], "julearn.transformers.FilterColumns": [[45, "julearn-transformers-filtercolumns"]], "julearn.transformers.JuColumnTransformer": [[46, "julearn-transformers-jucolumntransformer"]], "julearn.transformers.SetColumnTypes": [[47, "julearn-transformers-setcolumntypes"]], "julearn.transformers.confound_remover.ConfoundRemover": [[48, "julearn-transformers-confound-remover-confoundremover"]], "julearn.transformers.get_transformer": [[49, "julearn-transformers-get-transformer"]], "julearn.transformers.list_transformers": [[50, "julearn-transformers-list-transformers"]], "julearn.transformers.register_transformer": [[51, "julearn-transformers-register-transformer"]], "julearn.transformers.reset_transformer_register": [[52, "julearn-transformers-reset-transformer-register"]], "julearn.transformers.target.JuTargetTransformer": [[53, "julearn-transformers-target-jutargettransformer"]], "julearn.transformers.target.JuTransformedTargetModel": [[54, "julearn-transformers-target-jutransformedtargetmodel"]], "julearn.transformers.target.TargetConfoundRemover": [[55, "julearn-transformers-target-targetconfoundremover"]], "julearn.transformers.target.TransformedTargetWarning": [[56, "julearn-transformers-target-transformedtargetwarning"]], "julearn.transformers.target.get_target_transformer": [[57, "julearn-transformers-target-get-target-transformer"]], "julearn.transformers.target.list_target_transformers": [[58, "julearn-transformers-target-list-target-transformers"]], "julearn.transformers.target.register_target_transformer": [[59, "julearn-transformers-target-register-target-transformer"]], "julearn.transformers.target.reset_target_transformer_register": [[60, "julearn-transformers-target-reset-target-transformer-register"]], "julearn.utils.configure_logging": [[61, "julearn-utils-configure-logging"]], "Examples using julearn.utils.configure_logging": [[61, "examples-using-julearn-utils-configure-logging"]], "julearn.utils.logger": [[62, "julearn-utils-logger"]], "julearn.utils.raise_error": [[63, "julearn-utils-raise-error"]], "julearn.utils.typing.EstimatorLike": [[64, "julearn-utils-typing-estimatorlike"]], "julearn.utils.typing.EstimatorLikeFit1": [[65, "julearn-utils-typing-estimatorlikefit1"]], "julearn.utils.typing.EstimatorLikeFit2": [[66, "julearn-utils-typing-estimatorlikefit2"]], "julearn.utils.typing.EstimatorLikeFity": [[67, "julearn-utils-typing-estimatorlikefity"]], "julearn.utils.typing.JuEstimatorLike": [[68, "julearn-utils-typing-juestimatorlike"]], "julearn.utils.warn_with_log": [[69, "julearn-utils-warn-with-log"]], "julearn.viz.plot_scores": [[70, "julearn-viz-plot-scores"]], "Examples using julearn.viz.plot_scores": [[70, "examples-using-julearn-viz-plot-scores"]], "API Reference": [[71, "api-reference"]], "Inspect": [[72, "module-julearn.inspect"]], "Main API": [[73, "module-julearn.api"]], "Model Selection": [[74, "module-julearn.model_selection"]], "Models": [[75, "module-julearn.models"]], "Dynamic Selection (DESLib)": [[75, "dynamic-selection-deslib"]], "Pipeline": [[76, "module-julearn.pipeline"]], "Prepare": [[77, "module-julearn.prepare"]], "Scoring": [[78, "module-julearn.scoring"]], "Scoring Metrics": [[78, "module-julearn.scoring.metrics"]], "Stats": [[79, "module-julearn.stats"]], "Transformers": [[80, "module-julearn.transformers"], [114, "transformers"]], "Target Transformers": [[80, "module-julearn.transformers.target"]], "Utils": [[81, "module-julearn.utils"]], "Typing": [[81, "module-julearn.utils.typing"]], "Visualization": [[82, "visualization"]], "Starting with julearn": [[83, "starting-with-julearn"]], "Multiclass Classification": [[84, "multiclass-classification"]], "Regression Analysis": [[85, "regression-analysis"], [102, "regression-analysis"]], "Stratified K-fold CV for regression analysis": [[86, "stratified-k-fold-cv-for-regression-analysis"]], "Working with pandas": [[87, "working-with-pandas"]], "References": [[87, "references"], [88, "references"], [95, "references"], [103, "references"], [104, "references"]], "Merging or joining DataFrame": [[87, "merging-or-joining-dataframe"]], "Grouped CV": [[88, "grouped-cv"]], "Dealing with Cross-Validation techniques": [[88, "dealing-with-cross-validation-techniques"], [95, "dealing-with-cross-validation-techniques"]], "Simple Binary Classification": [[89, "simple-binary-classification"]], "Computation times": [[90, "computation-times"], [93, "computation-times"], [99, "computation-times"], [106, "computation-times"], [110, "computation-times"], [113, "computation-times"]], "Model Comparison": [[91, "model-comparison"], [133, "model-comparison"]], "Simple Model Comparison": [[92, "simple-model-comparison"]], "Inspection": [[94, "inspection"]], "Inspecting SVM models": [[95, "inspecting-svm-models"]], "Inspecting Random Forest models": [[96, "inspecting-random-forest-models"]], "Random Forest variable importance": [[96, "random-forest-variable-importance"]], "Preprocessing with variance threshold, zscore and PCA": [[97, "preprocessing-with-variance-threshold-zscore-and-pca"]], "Inspecting the fold-wise predictions": [[98, "inspecting-the-fold-wise-predictions"]], "Complex Models": [[100, "complex-models"]], "Transforming target variable with z-score": [[101, "transforming-target-variable-with-z-score"]], "Tuning Multiple Hyperparameters Grids": [[103, "tuning-multiple-hyperparameters-grids"]], "Tuning Hyperparameters": [[104, "tuning-hyperparameters"]], "Stacking Classification": [[105, "stacking-classification"]], "Confounds": [[107, "confounds"]], "Confound Removal (model comparison)": [[108, "confound-removal-model-comparison"]], "Return Confounds in Confound Removal": [[109, "return-confounds-in-confound-removal"]], "Confound Removal Typical Use Case": [[109, "confound-removal-typical-use-case"]], "Customization": [[111, "customization"]], "Custom Scoring Function for Regression": [[112, "custom-scoring-function-for-regression"]], "Overview of available Pipeline Steps": [[114, "overview-of-available-pipeline-steps"]], "Scalers": [[114, "scalers"]], "Feature Selection": [[114, "feature-selection"]], "DataFrame operations": [[114, "dataframe-operations"]], "Decomposition": [[114, "decomposition"]], "Custom": [[114, "custom"]], "Models (Estimators)": [[114, "models-estimators"]], "Support Vector Machines": [[114, "support-vector-machines"]], "Ensemble": [[114, "ensemble"]], "Gaussian Processes": [[114, "gaussian-processes"]], "Linear Models": [[114, "linear-models"]], "Naive Bayes": [[114, "naive-bayes"]], "Dynamic Selection": [[114, "dynamic-selection"]], "Dummy": [[114, "dummy"]], "Configuring julearn": [[115, "configuring-julearn"]], "Contributing": [[116, "contributing"]], "Setting up the local development environment": [[116, "setting-up-the-local-development-environment"]], "GitHub Pull Request guidelines": [[116, "github-pull-request-guidelines"]], "Running unit tests": [[116, "running-unit-tests"]], "Adding and building documentation": [[116, "adding-and-building-documentation"]], "Writing Examples": [[116, "writing-examples"]], "Examples": [[117, "examples"]], "Contents:": [[117, null]], "FAQs": [[118, "faqs"]], "I have issues with the dependencies for the viz module.": [[118, "i-have-issues-with-the-dependencies-for-the-viz-module"]], "How do I use the viz interactive plots?": [[118, "how-do-i-use-the-viz-interactive-plots"]], "Getting started": [[119, "getting-started"]], "Requirements": [[119, "requirements"]], "Setup suggestion": [[119, "setup-suggestion"]], "Installing": [[119, "installing"]], "Optional Dependencies": [[119, "optional-dependencies"]], "Welcome to julearn\u2019s documentation!": [[120, "welcome-to-julearn-s-documentation"]], "What is julearn?": [[120, "what-is-julearn"]], "Why julearn?": [[120, "why-julearn"]], "Table of Contents": [[120, "table-of-contents"], [126, null]], "Indices and tables": [[120, "indices-and-tables"], [120, "id1"]], "Maintaining": [[121, "maintaining"]], "Versioning": [[121, "versioning"]], "Releasing a new version": [[121, "releasing-a-new-version"]], "Connectome-based Predictive Modeling (CBPM)": [[122, "connectome-based-predictive-modeling-cbpm"]], "CBPM in julearn": [[122, "cbpm-in-julearn"]], "References:": [[122, null], [123, null], [124, null], [130, null], [135, null]], "Cross-validation consistent Confound Removal": [[123, "cross-validation-consistent-confound-removal"]], "Confound Removal in julearn": [[123, "confound-removal-in-julearn"]], "Removing Confounds from the Features": [[123, "removing-confounds-from-the-features"]], "Removing Confounds from the Target": [[123, "removing-confounds-from-the-target"]], "Should I use Confound Regression?": [[123, "should-i-use-confound-regression"]], "Cross-validation splitters": [[124, "cross-validation-splitters"], [134, "cross-validation-splitters"]], "Stratification": [[124, "stratification"]], "Grouping": [[124, "grouping"]], "Hyperparameter Tuning": [[125, "hyperparameter-tuning"], [125, "id1"]], "Parameters vs Hyperparameters": [[125, "parameters-vs-hyperparameters"]], "Searchers": [[125, "searchers"]], "Tuning more than one grid": [[125, "tuning-more-than-one-grid"]], "Models as hyperparameters": [[125, "models-as-hyperparameters"]], "Selected deeper topics": [[126, "selected-deeper-topics"]], "Inspecting Models": [[127, "inspecting-models"]], "Stacking Models": [[128, "stacking-models"]], "Fitting each estimator on all of the features": [[128, "fitting-each-estimator-on-all-of-the-features"]], "Fitting each estimator on a specific feature type": [[128, "fitting-each-estimator-on-a-specific-feature-type"]], "Applying preprocessing to the target": [[129, "applying-preprocessing-to-the-target"]], "Why cross validation?": [[130, "why-cross-validation"]], "Cross-validation - The fundamentals": [[130, "cross-validation-the-fundamentals"]], "The essence of run_cross_validation()": [[130, "the-essence-of-run-cross-validation"]], "Data": [[131, "data"]], "Data input to run_cross_validation()": [[131, "data-input-to-run-cross-validation"]], "Giving types to features": [[131, "giving-types-to-features"]], "What you really need to know": [[132, "what-you-really-need-to-know"]], "Statistical comparisons": [[133, "statistical-comparisons"]], "Score visualizations": [[133, "score-visualizations"]], "Model Evaluation": [[134, "model-evaluation"]], "The output of run_cross_validation()": [[134, "the-output-of-run-cross-validation"]], "Cross-validation scores": [[134, "cross-validation-scores"]], "Returning a model (estimator)": [[134, "returning-a-model-estimator"]], "Scoring metrics": [[134, "scoring-metrics"]], "Model Building": [[135, "model-building"]], "Pipeline specification in run_cross_validation()": [[135, "pipeline-specification-in-run-cross-validation"]], "Feature preprocessing": [[135, "feature-preprocessing"]], "Pipeline specification made easy with the PipelineCreator": [[135, "pipeline-specification-made-easy-with-the-pipelinecreator"]], "Setting hyperparameters": [[135, "setting-hyperparameters"]], "Selective preprocessing using feature types": [[135, "selective-preprocessing-using-feature-types"]], "What\u2019s new": [[136, "what-s-new"]], "Julearn 0.3.1 (2024-01-23)": [[136, "julearn-0-3-1-2024-01-23"]], "Bugfixes": [[136, "bugfixes"], [136, "id1"]], "Improved Documentation": [[136, "improved-documentation"], [136, "id2"]], "Enhancements": [[136, "enhancements"], [136, "id3"]], "Features": [[136, "features"], [136, "id4"]], "Misc": [[136, "misc"]], "Julearn 0.3.0 (2023-07-19)": [[136, "julearn-0-3-0-2023-07-19"]], "Julearn 0.2.5 (2022-07-21)": [[136, "julearn-0-2-5-2022-07-21"]], "API Changes": [[136, "api-changes"]]}, "indexentries": {"julearn.base": [[0, "module-julearn.base"]], "module": [[0, "module-julearn.base"], [72, "module-julearn.inspect"], [73, "module-julearn.api"], [74, "module-julearn.model_selection"], [75, "module-julearn.models"], [75, "module-julearn.models.dynamic"], [76, "module-julearn.pipeline"], [77, "module-julearn.prepare"], [78, "module-julearn.scoring"], [78, "module-julearn.scoring.metrics"], [79, "module-julearn.stats"], [80, "module-julearn.transformers"], [80, "module-julearn.transformers.target"], [81, "module-julearn.utils"], [81, "module-julearn.utils.typing"], [82, "module-julearn.viz"]], "pipelinecreator (class in julearn)": [[1, "julearn.PipelineCreator"]], "__init__() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.__init__"]], "add() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.add"]], "copy() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.copy"]], "from_list() (julearn.pipelinecreator class method)": [[1, "julearn.PipelineCreator.from_list"]], "has_model() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.has_model"]], "split() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.split"]], "steps (julearn.pipelinecreator property)": [[1, "julearn.PipelineCreator.steps"]], "to_pipeline() (julearn.pipelinecreator method)": [[1, "julearn.PipelineCreator.to_pipeline"]], "targetpipelinecreator (class in julearn)": [[2, "julearn.TargetPipelineCreator"]], "__init__() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.__init__"]], "add() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.add"]], "to_pipeline() (julearn.targetpipelinecreator method)": [[2, "julearn.TargetPipelineCreator.to_pipeline"]], "columntypes (class in julearn.base)": [[3, "julearn.base.ColumnTypes"]], "__init__() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.__init__"]], "add() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.add"]], "copy() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.copy"]], "pattern (julearn.base.columntypes property)": [[3, "julearn.base.ColumnTypes.pattern"]], "to_type_selector() (julearn.base.columntypes method)": [[3, "julearn.base.ColumnTypes.to_type_selector"]], "columntypeslike (in module julearn.base)": [[4, "julearn.base.ColumnTypesLike"]], "jubaseestimator (class in julearn.base)": [[5, "julearn.base.JuBaseEstimator"]], "__init__() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.__init__"]], "filter_columns() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.filter_columns"]], "get_apply_to() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_apply_to"]], "get_metadata_routing() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_metadata_routing"]], "get_needed_types() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_needed_types"]], "get_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.get_params"]], "set_params() (julearn.base.jubaseestimator method)": [[5, "julearn.base.JuBaseEstimator.set_params"]], "jutransformer (class in julearn.base)": [[6, "julearn.base.JuTransformer"]], "__init__() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.__init__"]], "filter_columns() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.filter_columns"]], "fit() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit"]], "fit_transform() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.fit_transform"]], "get_apply_to() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_apply_to"]], "get_metadata_routing() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_metadata_routing"]], "get_needed_types() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_needed_types"]], "get_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.get_params"]], "set_output() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_output"]], "set_params() (julearn.base.jutransformer method)": [[6, "julearn.base.JuTransformer.set_params"]], "wrapmodel (class in julearn.base)": [[7, "julearn.base.WrapModel"]], "__init__() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.__init__"]], "classes_ (julearn.base.wrapmodel property)": [[7, "julearn.base.WrapModel.classes_"]], "decision_function() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.decision_function"]], "filter_columns() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.filter_columns"]], "fit() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.fit"]], "get_apply_to() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_apply_to"]], "get_metadata_routing() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_metadata_routing"]], "get_needed_types() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_needed_types"]], "get_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.get_params"]], "predict() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict"]], "predict_log_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_log_proba"]], "predict_proba() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.predict_proba"]], "score() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.score"]], "set_params() (julearn.base.wrapmodel method)": [[7, "julearn.base.WrapModel.set_params"]], "change_column_type() (in module julearn.base)": [[8, "julearn.base.change_column_type"]], "ensure_column_types() (in module julearn.base)": [[9, "julearn.base.ensure_column_types"]], "get_column_type() (in module julearn.base)": [[10, "julearn.base.get_column_type"]], "make_type_selector() (in module julearn.base)": [[11, "julearn.base.make_type_selector"]], "foldsinspector (class in julearn.inspect)": [[12, "julearn.inspect.FoldsInspector"]], "__init__() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.__init__"]], "decision_function() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.decision_function"]], "predict() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict"]], "predict_log_proba() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict_log_proba"]], "predict_proba() (julearn.inspect.foldsinspector method)": [[12, "julearn.inspect.FoldsInspector.predict_proba"]], "inspector (class in julearn.inspect)": [[13, "julearn.inspect.Inspector"]], "__init__() (julearn.inspect.inspector method)": [[13, "julearn.inspect.Inspector.__init__"]], "folds (julearn.inspect.inspector property)": [[13, "julearn.inspect.Inspector.folds"]], "model (julearn.inspect.inspector property)": [[13, "julearn.inspect.Inspector.model"]], "preprocess() (in module julearn.inspect)": [[14, "julearn.inspect.preprocess"]], "continuousstratifiedgroupkfold (class in julearn.model_selection)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.get_n_splits"]], "set_split_request() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.set_split_request"]], "split() (julearn.model_selection.continuousstratifiedgroupkfold method)": [[15, "julearn.model_selection.ContinuousStratifiedGroupKFold.split"]], "continuousstratifiedkfold (class in julearn.model_selection)": [[16, "julearn.model_selection.ContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.continuousstratifiedkfold method)": [[16, "julearn.model_selection.ContinuousStratifiedKFold.split"]], "repeatedcontinuousstratifiedgroupkfold (class in julearn.model_selection)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedgroupkfold method)": [[17, "julearn.model_selection.RepeatedContinuousStratifiedGroupKFold.split"]], "repeatedcontinuousstratifiedkfold (class in julearn.model_selection)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold"]], "__init__() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.__init__"]], "get_metadata_routing() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.get_n_splits"]], "split() (julearn.model_selection.repeatedcontinuousstratifiedkfold method)": [[18, "julearn.model_selection.RepeatedContinuousStratifiedKFold.split"]], "stratifiedbootstrap (class in julearn.model_selection)": [[19, "julearn.model_selection.StratifiedBootstrap"]], "__init__() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.__init__"]], "get_metadata_routing() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.get_metadata_routing"]], "get_n_splits() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.get_n_splits"]], "split() (julearn.model_selection.stratifiedbootstrap method)": [[19, "julearn.model_selection.StratifiedBootstrap.split"]], "get_searcher() (in module julearn.model_selection)": [[20, "julearn.model_selection.get_searcher"]], "list_searchers() (in module julearn.model_selection)": [[21, "julearn.model_selection.list_searchers"]], "register_searcher() (in module julearn.model_selection)": [[22, "julearn.model_selection.register_searcher"]], "reset_searcher_register() (in module julearn.model_selection)": [[23, "julearn.model_selection.reset_searcher_register"]], "dynamicselection (class in julearn.models.dynamic)": [[24, "julearn.models.dynamic.DynamicSelection"]], "__init__() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.__init__"]], "fit() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.fit"]], "get_metadata_routing() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.get_metadata_routing"]], "get_params() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.get_params"]], "predict() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.predict"]], "predict_proba() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.predict_proba"]], "score() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.score"]], "set_params() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.set_params"]], "set_score_request() (julearn.models.dynamic.dynamicselection method)": [[24, "julearn.models.dynamic.DynamicSelection.set_score_request"]], "get_model() (in module julearn.models)": [[25, "julearn.models.get_model"]], "list_models() (in module julearn.models)": [[26, "julearn.models.list_models"]], "register_model() (in module julearn.models)": [[27, "julearn.models.register_model"]], "reset_model_register() (in module julearn.models)": [[28, "julearn.models.reset_model_register"]], "jutargetpipeline (class in julearn.pipeline)": [[29, "julearn.pipeline.JuTargetPipeline"]], "__init__() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.__init__"]], "can_inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.can_inverse_transform"]], "fit() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.fit"]], "fit_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.fit_transform"]], "inverse_transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.inverse_transform"]], "needed_types (julearn.pipeline.jutargetpipeline property)": [[29, "julearn.pipeline.JuTargetPipeline.needed_types"]], "transform() (julearn.pipeline.jutargetpipeline method)": [[29, "julearn.pipeline.JuTargetPipeline.transform"]], "step (class in julearn.pipeline.pipeline_creator)": [[30, "julearn.pipeline.pipeline_creator.Step"]], "__init__() (julearn.pipeline.pipeline_creator.step method)": [[30, "julearn.pipeline.pipeline_creator.Step.__init__"]], "apply_to (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.apply_to"]], "estimator (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.estimator"]], "name (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.name"]], "needed_types (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.needed_types"]], "params_to_tune (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.params_to_tune"]], "row_select_col_type (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.row_select_col_type"]], "row_select_vals (julearn.pipeline.pipeline_creator.step attribute)": [[30, "julearn.pipeline.pipeline_creator.Step.row_select_vals"]], "check_consistency() (in module julearn.prepare)": [[31, "julearn.prepare.check_consistency"]], "prepare_input_data() (in module julearn.prepare)": [[32, "julearn.prepare.prepare_input_data"]], "run_cross_validation() (in module julearn)": [[33, "julearn.run_cross_validation"]], "check_scoring() (in module julearn.scoring)": [[34, "julearn.scoring.check_scoring"]], "get_scorer() (in module julearn.scoring)": [[35, "julearn.scoring.get_scorer"]], "list_scorers() (in module julearn.scoring)": [[36, "julearn.scoring.list_scorers"]], "r2_corr() (in module julearn.scoring.metrics)": [[37, "julearn.scoring.metrics.r2_corr"]], "r_corr() (in module julearn.scoring.metrics)": [[38, "julearn.scoring.metrics.r_corr"]], "register_scorer() (in module julearn.scoring)": [[39, "julearn.scoring.register_scorer"]], "reset_scorer_register() (in module julearn.scoring)": [[40, "julearn.scoring.reset_scorer_register"]], "corrected_ttest() (in module julearn.stats)": [[41, "julearn.stats.corrected_ttest"]], "cbpm (class in julearn.transformers)": [[42, "julearn.transformers.CBPM"]], "__init__() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.__init__"]], "aggregate() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.aggregate"]], "fit() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.fit"]], "fit_transform() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.fit_transform"]], "get_feature_names_out() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.get_metadata_routing"]], "get_params() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.get_params"]], "set_output() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.set_output"]], "set_params() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.set_params"]], "transform() (julearn.transformers.cbpm method)": [[42, "julearn.transformers.CBPM.transform"]], "changecolumntypes (class in julearn.transformers)": [[43, "julearn.transformers.ChangeColumnTypes"]], "__init__() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.__init__"]], "filter_columns() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.filter_columns"]], "fit() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.fit"]], "fit_transform() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.get_params"]], "set_output() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.set_output"]], "set_params() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.set_params"]], "transform() (julearn.transformers.changecolumntypes method)": [[43, "julearn.transformers.ChangeColumnTypes.transform"]], "dropcolumns (class in julearn.transformers)": [[44, "julearn.transformers.DropColumns"]], "__init__() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.__init__"]], "filter_columns() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.filter_columns"]], "fit() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.fit"]], "fit_transform() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.fit_transform"]], "get_apply_to() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_apply_to"]], "get_metadata_routing() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_needed_types"]], "get_params() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_params"]], "get_support() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.get_support"]], "set_output() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.set_output"]], "set_params() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.set_params"]], "transform() (julearn.transformers.dropcolumns method)": [[44, "julearn.transformers.DropColumns.transform"]], "filtercolumns (class in julearn.transformers)": [[45, "julearn.transformers.FilterColumns"]], "__init__() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.__init__"]], "filter_columns() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.filter_columns"]], "fit() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.fit"]], "fit_transform() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.fit_transform"]], "get_apply_to() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_apply_to"]], "get_feature_names_out() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_metadata_routing"]], "get_needed_types() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_needed_types"]], "get_params() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.get_params"]], "set_output() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.set_output"]], "set_params() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.set_params"]], "transform() (julearn.transformers.filtercolumns method)": [[45, "julearn.transformers.FilterColumns.transform"]], "jucolumntransformer (class in julearn.transformers)": [[46, "julearn.transformers.JuColumnTransformer"]], "__init__() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.__init__"]], "filter_columns() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.filter_columns"]], "fit() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.fit"]], "fit_transform() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.fit_transform"]], "get_apply_to() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_apply_to"]], "get_feature_names_out() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_metadata_routing"]], "get_needed_types() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_needed_types"]], "get_params() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.get_params"]], "set_output() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.set_output"]], "set_params() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.set_params"]], "transform() (julearn.transformers.jucolumntransformer method)": [[46, "julearn.transformers.JuColumnTransformer.transform"]], "setcolumntypes (class in julearn.transformers)": [[47, "julearn.transformers.SetColumnTypes"]], "__init__() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.__init__"]], "filter_columns() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.filter_columns"]], "fit() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.fit"]], "fit_transform() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.fit_transform"]], "get_apply_to() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_apply_to"]], "get_feature_names_out() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_metadata_routing"]], "get_needed_types() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_needed_types"]], "get_params() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.get_params"]], "set_output() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.set_output"]], "set_params() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.set_params"]], "transform() (julearn.transformers.setcolumntypes method)": [[47, "julearn.transformers.SetColumnTypes.transform"]], "confoundremover (class in julearn.transformers.confound_remover)": [[48, "julearn.transformers.confound_remover.ConfoundRemover"]], "__init__() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.__init__"]], "filter_columns() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.filter_columns"]], "fit() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.fit"]], "fit_transform() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.fit_transform"]], "get_apply_to() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_apply_to"]], "get_feature_names_out() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_feature_names_out"]], "get_metadata_routing() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_metadata_routing"]], "get_needed_types() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_needed_types"]], "get_params() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_params"]], "get_support() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.get_support"]], "set_output() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.set_output"]], "set_params() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.set_params"]], "transform() (julearn.transformers.confound_remover.confoundremover method)": [[48, "julearn.transformers.confound_remover.ConfoundRemover.transform"]], "get_transformer() (in module julearn.transformers)": [[49, "julearn.transformers.get_transformer"]], "list_transformers() (in module julearn.transformers)": [[50, "julearn.transformers.list_transformers"]], "register_transformer() (in module julearn.transformers)": [[51, "julearn.transformers.register_transformer"]], "reset_transformer_register() (in module julearn.transformers)": [[52, "julearn.transformers.reset_transformer_register"]], "jutargettransformer (class in julearn.transformers.target)": [[53, "julearn.transformers.target.JuTargetTransformer"]], "__init__() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.__init__"]], "fit() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.fit"]], "fit_transform() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.fit_transform"]], "transform() (julearn.transformers.target.jutargettransformer method)": [[53, "julearn.transformers.target.JuTargetTransformer.transform"]], "jutransformedtargetmodel (class in julearn.transformers.target)": [[54, "julearn.transformers.target.JuTransformedTargetModel"]], "__init__() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.__init__"]], "can_inverse_transform() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.can_inverse_transform"]], "classes_ (julearn.transformers.target.jutransformedtargetmodel property)": [[54, "julearn.transformers.target.JuTransformedTargetModel.classes_"]], "decision_function() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.decision_function"]], "filter_columns() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.filter_columns"]], "fit() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.fit"]], "get_apply_to() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_apply_to"]], "get_metadata_routing() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_metadata_routing"]], "get_needed_types() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_needed_types"]], "get_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.get_params"]], "predict() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.predict"]], "predict_proba() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.predict_proba"]], "score() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.score"]], "set_params() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.set_params"]], "transform_target() (julearn.transformers.target.jutransformedtargetmodel method)": [[54, "julearn.transformers.target.JuTransformedTargetModel.transform_target"]], "targetconfoundremover (class in julearn.transformers.target)": [[55, "julearn.transformers.target.TargetConfoundRemover"]], "__init__() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.__init__"]], "fit() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.fit"]], "fit_transform() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.fit_transform"]], "needed_types (julearn.transformers.target.targetconfoundremover property)": [[55, "julearn.transformers.target.TargetConfoundRemover.needed_types"]], "transform() (julearn.transformers.target.targetconfoundremover method)": [[55, "julearn.transformers.target.TargetConfoundRemover.transform"]], "transformedtargetwarning (class in julearn.transformers.target)": [[56, "julearn.transformers.target.TransformedTargetWarning"]], "__init__() (julearn.transformers.target.transformedtargetwarning method)": [[56, "julearn.transformers.target.TransformedTargetWarning.__init__"]], "args (julearn.transformers.target.transformedtargetwarning attribute)": [[56, "julearn.transformers.target.TransformedTargetWarning.args"]], "with_traceback() (julearn.transformers.target.transformedtargetwarning method)": [[56, "julearn.transformers.target.TransformedTargetWarning.with_traceback"]], "get_target_transformer() (in module julearn.transformers.target)": [[57, "julearn.transformers.target.get_target_transformer"]], "list_target_transformers() (in module julearn.transformers.target)": [[58, "julearn.transformers.target.list_target_transformers"]], "register_target_transformer() (in module julearn.transformers.target)": [[59, "julearn.transformers.target.register_target_transformer"]], "reset_target_transformer_register() (in module julearn.transformers.target)": [[60, "julearn.transformers.target.reset_target_transformer_register"]], "configure_logging() (in module julearn.utils)": [[61, "julearn.utils.configure_logging"]], "logger (in module julearn.utils)": [[62, "julearn.utils.logger"]], "raise_error() (in module julearn.utils)": [[63, "julearn.utils.raise_error"]], "estimatorlike (in module julearn.utils.typing)": [[64, "julearn.utils.typing.EstimatorLike"]], "estimatorlikefit1 (class in julearn.utils.typing)": [[65, "julearn.utils.typing.EstimatorLikeFit1"]], "__init__() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit1 method)": [[65, "julearn.utils.typing.EstimatorLikeFit1.set_params"]], "estimatorlikefit2 (class in julearn.utils.typing)": [[66, "julearn.utils.typing.EstimatorLikeFit2"]], "__init__() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.__init__"]], "fit() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.fit"]], "get_params() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefit2 method)": [[66, "julearn.utils.typing.EstimatorLikeFit2.set_params"]], "estimatorlikefity (class in julearn.utils.typing)": [[67, "julearn.utils.typing.EstimatorLikeFity"]], "__init__() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.__init__"]], "fit() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.fit"]], "get_params() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.get_params"]], "set_params() (julearn.utils.typing.estimatorlikefity method)": [[67, "julearn.utils.typing.EstimatorLikeFity.set_params"]], "juestimatorlike (class in julearn.utils.typing)": [[68, "julearn.utils.typing.JuEstimatorLike"]], "__init__() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.__init__"]], "fit() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.fit"]], "get_apply_to() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.get_apply_to"]], "get_needed_types() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.get_needed_types"]], "get_params() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.get_params"]], "set_params() (julearn.utils.typing.juestimatorlike method)": [[68, "julearn.utils.typing.JuEstimatorLike.set_params"]], "warn_with_log() (in module julearn.utils)": [[69, "julearn.utils.warn_with_log"]], "plot_scores() (in module julearn.viz)": [[70, "julearn.viz.plot_scores"]], "julearn.inspect": [[72, "module-julearn.inspect"]], "julearn.api": [[73, "module-julearn.api"]], "julearn.model_selection": [[74, "module-julearn.model_selection"]], "julearn.models": [[75, "module-julearn.models"]], "julearn.models.dynamic": [[75, "module-julearn.models.dynamic"]], "julearn.pipeline": [[76, "module-julearn.pipeline"]], "julearn.prepare": [[77, "module-julearn.prepare"]], "julearn.scoring": [[78, "module-julearn.scoring"]], "julearn.scoring.metrics": [[78, "module-julearn.scoring.metrics"]], "julearn.stats": [[79, "module-julearn.stats"]], "julearn.transformers": [[80, "module-julearn.transformers"]], "julearn.transformers.target": [[80, "module-julearn.transformers.target"]], "julearn.utils": [[81, "module-julearn.utils"]], "julearn.utils.typing": [[81, "module-julearn.utils.typing"]], "julearn.viz": [[82, "module-julearn.viz"]]}})